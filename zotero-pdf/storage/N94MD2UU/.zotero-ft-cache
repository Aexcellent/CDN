JavaScript is disabled on your browser. Please enable JavaScript to use all the features on this page. Skip to main content Skip to article 
Elsevier logo ScienceDirect 
 
    Journals & Books 
 
Register Sign in 
You have institutional access 
 
    View  PDF 
    Download full issue 
 
Outline 
 
    Highlights 
    Abstract 
    Keywords 
    1. Introduction 
    2. Model’s description 
    3. Related work 
    4. Mathematical formulation 
    5. Heuristic approach 
    6. Numerical experiments 
    7. Conclusion 
    Acknowledgment 
    Appendix A. MIP model and solving with a toy instance 
    Appendix B. Variables h ̲ vz t , h ‾ vz t and constraints (10)–(13) 
    References 
 
Show full outline 
Figures (7) 
 
    Fig. 1. Handling zones and group of cranes for ships 
    Fig. 2. Handling zone and group of cranes for trains 
    Fig. 3. Group of cranes for trucks 
    Fig. 4. Multi-terminal management 
    Fig. 5. The necessary condition for mooring ships is not sufficient if more than two… 
    Fig. 6. Structure of the formulation 
 
Show all figures 
Tables (20) 
 
    Table 1 
    Table 2 
    Table 3 
    Table 4 
    Table 5 
    Table 6 
 
Show all tables 
Elsevier 
Transportation Research Part E: Logistics and Transportation Review 
Volume 100 , April 2017, Pages 38-62 
Transportation Research Part E: Logistics and Transportation Review 
Global planning in a multi-terminal and multi-modal maritime container port 
Author links open overlay panel Xavier Schepler a b c Stefan Balev b Sophie Michel c Éric Sanlaville b 
Show more 
Add to Mendeley 
Share 
Cite 
https://doi.org/10.1016/j.tre.2016.12.002 Get rights and content 
Highlights 
 
• 
 
    We consider the global management of a multi-terminal and multi-modal maritime port. 
• 
 
    A model allowing cooperation of terminals is introduced to coordinate operations. 
• 
 
    The model is formulated as a time-indexed mixed-integer program. 
• 
 
    Two heuristics are introduced, based on the structural decomposition of the formulation. 
• 
 
    They allow to investigate the impact of a global management on port’s performance. 
 
Abstract 
 
This paper introduces an optimization model of a multi-terminal, multi-modal maritime container port, such as the ones in the European northern range. The decisions concern the scheduling of ships, trains and trucks on terminals, while limiting inter-terminal transport of containers and minimizing weighted turnaround time. Heuristics based on the decomposition of the resulting mixed-integer program are proposed and tested on realistic generated instances with up to four terminals. The efficiency of the restrict-and-fix heuristic allows to investigate the impact of a global management on port’s performance: an average improvement of 5% was observed. 
 
    Previous article in issue 
    Next article in issue 
 
Keywords 
Maritime container port management 
Multi-terminal optimization 
Mixed-integer programming 
Structural decomposition 
Mixed-integer programming based heuristic 
1. Introduction 
 
Maritime transport is the backbone of international trade. In recent decades, new container vessels were regularly deployed by liner shipping companies to meet the growing demand for container transport: from 84.6 millions Twenty-foot Equivalent Units (TEU) in 1990, world traffic surged up to 602 millions in 2012. Container traffic has been simultaneously evolving. Firstly, container shipping companies invested in larger and larger vessels, to reduce costs at sea per TEU. In 1980, the largest container vessels had a transport capacity of 5000 TEU, which raised up in 2016 to 19,000 TEU. Secondly, container shipping companies adopted the hub-and-spoke paradigm. In liner hub-and-spoke networks, large mother vessels transport containers between far hub ports, while smaller feeder vessels ensure the connection between hub and nearby non-hub ports. Lastly, due to the environmental and social benefits of rail and inland-waterway based transport compared to road, European countries started to enforce policies to induce a modal shift. Bigger shares of rail and inland-waterway based hinterland container transport are expected in the coming years in Europe. 
 
In the European northern range, coastal alignment and geographic proximity generate a strong inter-port competition for hinterland market. Some key port competitive factors have been identified in the literature, notably vessel turnaround time (see for instance Tongzon and Heng, 2005 ) and quality of hinterland connection (see Wiegmans et al., 2008 ). In recent decades, in parallel to the container traffic evolution and within this strong inter-port competition, huge investments were made in container port infrastructure. New container terminals were built, such as deep-sea terminals as well as rail and inland-waterway terminals. Within a multi-terminal port, transport facilities provide ITT (Inter-Terminal Transport of containers). 
 
In the port of Rotterdam, the largest hub of the European northern range, ITT is expected to become substantial in the coming years: firstly because it is required, for example between maritime terminals and rail and inland-waterway terminals, and secondly because it increases port’s performance. This study provides tools to evaluate how much a global management of terminals and cooperation between them can improve that performance. Clearly, scheduling ships, trains and trucks simultaneously on multiple terminals allows to make a better global usage of resources. This way, in case of congestion of a terminal, some ships, trains and trucks may be redirected to other terminals. Moreover, collecting and gathering containers may reduce the number of stops at terminals for feeder vessels, inland-waterway barges and trains, when necessary. These benefits of cooperation between terminals come at the cost of ITT and of a more complex system, harder to manage. 
 
Container terminal operations have received significant attention in the literature in operational research and logistics in recent years (see the surveys by Bierwirth and Meisel, 2010 , Carlo et al., 2014 , Carlo et al., 2014 , Bierwirth and Meisel, 2015 , Carlo et al., 2015 , Heilig and Voß, 2016 ). To the best of our knowledge, only the studies by Hendriks et al., 2012 , Lee et al., 2012 propose optimization models for the management of multi-terminal systems. Hendriks et al. (2012) consider the strategic assignment of liner services to terminals in the port of Antwerp for the multi-terminal operator PSA Antwerp. Lee et al. (2012) focus on storage space allocation to containers in the port of Singapore, a vessel-to-vessel transshipment hub, where storage space is the critical resource. These two decision making problems aim notably at minimizing costs related to ITT. Related work about operations in container terminals is reviewed in Section 2 . 
 
In contrast to these two studies, this paper introduces an optimization model of a multi-terminal and multi-modal maritime container port as well as three solving methods, which can support port authorities and multi-terminal operators in their management. The objective is to minimize weighted turnaround time of ships and trains, which operate on fixed timetables, contrary to trucks. An assumption is the use of a truck appointment system. These systems are already in service in modern container ports and aim at reducing truck turnaround time and road congestion at port’s entrance. 
 
The key decisions of the model are the choices of container terminals at which feeder vessels, inland-waterway barges will call and trains will stop. This determines where to unload and load containers, hence the required ITT. The model provides the berthing positions and time windows to serve ships, the rail tracks and time windows to serve trains as well as the time windows for truck appointment. The goal is to improve port performance by coordinating operations between terminals, while limiting ITT. Thus, this paper offers the following novel contributions: 
 
1. 
 
    the first optimization model to provide global planning in a multi-terminal and multi-modal maritime container port, described in Section 1 , 
2. 
 
    a time-indexed formulation as a mixed-integer linear program introduced in Section 3 , which can be used with a state-of-the-art solver to tackle realistic small to mid-sized instances, 
3. 
 
    two mixed-integer programming based heuristics presented in Section 4 , which obtain near-optimal solutions in short amounts of time, using a structural decomposition of the problem, 
4. 
 
    numerical experiments conducted in Section 5 with realistic generated instances involving up to four terminals, to evaluate the proposed solving methods and to quantify the impact of a global management on port’s performance. 
 
The last section concludes the paper and discusses directions for future work. 
2. Model’s description 
 
In this section, we describe an optimization model of a multi-terminal and multi-modal maritime container port, such as the ones in the European northern range. It is a tactical multi-periodic model, which provides baselines for operational planning. Two assumptions are made on the management of trucks. As mentioned in the introduction, the first one is the use of a truck appointment system, which allows to set truck arrivals according to the solution of the model. The second assumption is that one truck transports one container, either an import one or an export one. These assumptions allow us to group trucks, for purpose of tractability. 
 
In this model, at least one berthing position and the corresponding periods are allocated to each ship: mother or feeder vessel, inland-waterway barge. In general, a mother vessel stops at one terminal, but a feeder vessel or an inland-waterway barge is allowed to stop at multiple terminals. Rail tracks are allocated to trains over time. Trucks are considered by groups, for example grouped by source or destination vehicle of their containers. Hereafter, the word vehicle will denote a ship, a train, or a group of trucks. Each vehicle has a ready time and a deadline. For a ship or a train, the ready time is the time of arrival and the deadline is the latest possible time of presence. For a group of trucks, the ready time and the deadline provide the time window within which its trucks may be given appointment. A ship or a train also has a weight, which depends on its priority. This priority is usually correlated to the transport capacity of the ship or the train, but may also be linked to specific requirements. The objective is to minimize weighted turnaround time. 
 
The chosen level of granularity for containers is the batch . A batch corresponds to a transshipment of containers. It is the set of all containers that are unloaded from one given vehicle and later loaded to another vehicle. Using batches instead of container units allows to significantly diminish the model’s size and makes it tractable. After a container is unloaded from its source vehicle, it is usually transported inside the yard of the terminal to the storage area. It may remain stacked there, or it may be transported to another terminal. It is then loaded to its destination vehicle, generally several days after its unloading. A solution provides the terminals to unload, load and store each batch, as well as the required ITT. Allocating precise storage locations to containers inside the yard of each terminal is out of the scope of this paper, but their storage capacities are part of the model’s data. 
 
Two main resources are considered for handling containers on vehicles: handling zones and groups of cranes . Handling zones are areas where containers are handled on ships and trains: quay segments and groups of rail tracks. Each quay of a terminal is partitioned into a variable number of quay segments. A partition of each quay into berths may be used in practice and it may provide a basis to choose the partition into quay segments. More details about berth allocation are given in Section 4.2.3 . A group of rail tracks contains all the adjacent tracks served by the same cranes. Handling zones for trucks are used only for modeling purpose, since allocation of space to trucks is usually not an issue. 
 
Groups of cranes are the other main resources. Cranes operating on vehicles are generally either rail mounted or rubber tired and therefore mobile. A group of quay cranes is characterized by its number of quay cranes and by their marginal productivity, investigated by Meisel and Bierwirth (2009) . For example, assume that one quay crane alone can handle on average 25 containers per hour. Then, four quay cranes allocated to the same ship will probably handle no more than 75 containers per hour, because of interferences among them. Hence, the maximum number of containers handled in one period by a given number of quay cranes is part of the model’s data. Note that, the number of quay cranes allocated to a ship may vary from one period to another. Since cranes for trains or for trucks operate on several vehicles within short time periods with fewer interferences among them, a group of these cranes has only one characteristic: a maximum number of containers it can handle per period. 
 
Handling zones and group of cranes for ships are represented in Fig. 1 . One group of nine quay cranes is operating on three ships in two quay segments. A handling zone and a group of cranes for trains are illustrated in Fig. 2 . Three gantry cranes are operating on trains. One group of cranes for trucks is represented in Fig. 3 . In this example, it is composed of ten straddle carriers available for unloading or loading the trucks. The notations used in these figures are defined in Section 4.1 . 
 
    Download : Download high-res image (243KB) 
    Download : Download full-size image 
 
Fig. 1 . Handling zones and group of cranes for ships. 
 
    Download : Download high-res image (214KB) 
    Download : Download full-size image 
 
Fig. 2 . Handling zone and group of cranes for trains. 
 
    Download : Download high-res image (170KB) 
    Download : Download full-size image 
 
Fig. 3 . Group of cranes for trucks. 
 
A solution to a small instance of this model is partially illustrated in Fig. 4 , with a period length of two hours. Some containers unloaded from mother vessel v 1 in terminal c 1 have to be transported to terminal c 2 , to be loaded to feeder vessel v 2 . One possible reason which could have prohibited feeder vessel v 2 to stop at terminal c 1 is the unavailability of resources in this terminal for its service. 
 
    Download : Download high-res image (276KB) 
    Download : Download full-size image 
 
Fig. 4 . Multi-terminal management. 
 
Constraints related to container handling are essentially the following ones. They are illustrated using Fig. 4 . Batch b 1 , containing three containers, is unloaded from mother vessel v 1 . This unloading requires that at least one quay crane has been allocated to this vessel and that the total quantity of containers processed in this terminal doesn’t exceed a given limit. Then, batch b 1 is transported to terminal c 2 , under several additional constraints, related to ITT. The transport of containers from terminal c 1 to terminal c 2 requires a fixed number of periods. There is a given limit on the number of containers sent per period from terminal c 1 to terminal c 2 . There is also a given limit on the total quantity of ITT in the port during the whole planning horizon. Then, batch b 1 is stored in the yard of terminal c 2 . The number of twenty-foot equivalent units stored in a terminal must always remain under a given limit. Finally, batch b 1 is loaded to the feeder vessel v 2 in terminal c 2 . As the required resources were available in terminal c 2 , this coordination of operations between terminals with ITT allowed to serve feeder vessel v 2 in time. The mathematical formulation corresponding to the management of batches b 1 and b 2 is described in Appendix A . Of course, operations involving many more vehicles and container batches have to be considered at the same time. 
 
The limits on ITT may model either physical limitations, or financial ones: terminal operators wishing to limit ITT to reduce operational costs. Our study enlightens this trade-off by computing the global performance gain according to the level of ITT allowed as it is done in Section 6 . 
3. Related work 
 
Container terminal operations have received significant attention in the literature in operational research and logistics. For an overview of container terminal operations, the reader is redirected to the reviews by Steenken et al., 2004 , Stahlbock and Voß, 2008 . Work related to seaside operations was recently reviewed by Bierwirth and Meisel, 2010 , Bierwirth and Meisel, 2015 , Carlo et al., 2015 , transport operations by Carlo et al. (2014) and storage operations by Carlo et al. (2014) . A paper by Heilig and Voß (2016) reviews studies related to ITT (Inter-Terminal Transport of containers). 
 
Among all the problems identified in this literature, the BAP (Berth Allocation Problem) is arguably the most critical and certainly the most studied. The BAP is about allocating berthing positions and time windows to incoming ships. 
 
A problem closely related to the BAP is the quay crane assignment problem, which consists in allocating quay cranes to ships over time. The integration of the quay crane assignment problem into the BAP is studied by Imai et al., 2008 , Meisel and Bierwirth, 2009 , Giallombardo et al., 2010 , Vacca et al., 2013 . The work by Vacca et al. (2013) provides results which confirm the added value of integration in terms of cost reduction and efficient use of resources, especially in the case of congestion. 
 
Most of the studies about the BAP are restricted to a single terminal. Indeed, up to recently, each terminal in a port was usually run by a different operator and terminals were competing against each other. Nowadays, in an increasing number of ports, multiple terminals are managed by the same operator. Hence, the BAP should no longer be considered for individual terminals. Still, there exists only a few papers considering the BAP for multiple terminals. 
 
One of them deals with the strategic BAP for multiple terminals and considers quay crane allocation and ITT. The BAP studied by Hendriks et al. (2012) consists in spreading liner services over multiple terminals managed by the same operator. The decisions are to assign a terminal and a time window to each service. The objectives are to balance quay crane workload among terminals and to minimize ITT. A solution approach based on mixed-integer programming is introduced. A practical case study is performed for the terminal operator PSA Antwerp which manages multiple terminals in the port of Antwerp. Computational results show that relatively small modifications of existing schedules can significantly reduce required quay crane capacities and ITT. 
 
Another paper deals with an operational BAP involving two terminals. The objective of the BAP studied by Imai et al. (2008) is to minimize turnaround time for one terminal. Then, ships that are expected to wait more than given limits are re-routed to a nearby terminal. The requirement of ITT and the incurred extra costs are mentioned, but not taken into account in the model. 
 
A problem similar to the operational BAP for multiple terminals is studied by Lee et al. (2012) . This problem is about seaborne transshipments in a multi-terminal port where storage space is the critical resource. Terminal and storage allocations are planned for groups of containers, which indirectly assigns visiting terminals to vessels. The objective is to minimize costs related to intra-terminal transport of containers and to ITT. A matheuristic combining linear programming and tabu search is introduced. Computational results show the benefits of the optimization model over current practices. 
 
Some papers focus on ITT, mainly at the strategic level. The work by Tierney et al. (2014) proposes a model to analyze the impact on ITT of new infrastructure, placement of terminals and investment in vehicles. The proposed integer program can be used either at a strategic level or at an operational level, to minimize delays. Other studies, such as the ones by Duinkerken et al., 2007 , Ottjes et al., 2007 , provide simulation models of multi-terminal systems and ITT, to support investment decisions. 
 
The literature about operations related to container trains focuses on either rail-rail or rail-road terminals and is not relevant to this study. However, several studies are dedicated to the management of truck arrivals in maritime container ports. Contrary to container ships and trains which operate on fixed timetables, trucks may be given appointments. Truck appointment optimization is studied by Zehendner and Feillet (2014) , to support the negotiation process between drayage companies and terminal operators. The use of a truck appointment system is an assumption of the model that we propose. These systems are in use in most modern maritime container ports. The proposed model is formulated in the next section. 
4. Mathematical formulation 
 
Formulating the model described in Section 2 requires the introduction of many indices, sets, parameters, variables and constraints. A toy example of this formulation and its solution are provided in Appendix A . 
4.1. Parameters 
 
Indices are described in Table 1 . Sets are introduced in Table 2 . General parameters are presented in Table 3 . Parameters for ships, trains and trucks are respectively introduced in Table 4 , Table 5 , Table 6 . Parameters for container batches are described in Table 7 . Parameters for ITT are presented in Table 8 . 
 
Table 1 . Indices. 
c 	Container terminal 
g 	Group of cranes 
n 	Number of cranes, for a group of quay cranes for ships 
z 	Handling zone: quay segment, rail tracks 
v 	Vehicle: ship, train or group of trucks 
b 	Container batch 
t 	Time period 
 
Table 2 . Sets. 
C 	Container terminals 
G A 	Groups of cranes for ships 
G B 	Groups of cranes for trains 
G C 	Groups of cranes for trucks 
 
Z A 	Quay segments 
Z B 	Groups of rail tracks 
Z C 	Handling zones for trucks - used for modeling purpose 
Z 	Handling zones, Z = Z A ∪ Z B ∪ Z C 
 
V A 	Ships 
V B 	Trains 
V C 	Groups of trucks 
V 	Vehicles, V = V A ∪ V B ∪ V C 
Z v a 	Handling zones where vehicle v can be handled, v ∈ V 
C v a 	Terminals having at least one handling zone where vehicle v can be handled, v ∈ V 
V ̃ b 	Ships and trains that have to be continuously handled in one location 
 
B 	Container batches 
B U v 	Container batches to be unloaded from vehicle v ∈ V 
B L v 	Container batches to be loaded to vehicle v ∈ V 
 
I b 	Couples of terminals between which container batch b can be transported, b ∈ B : I b = ( c , c ′ ) | ( c , c ′ ) ∈ ( C α b × C ω b ) , c ≠ c ′ 
 
T v 	Possible periods of presence of vehicle v in port, v ∈ V : 〚 〛 T v = 〚 r v , d ‾ v 〛 
T 	Periods in planning horizon: 〚 〛 T = 〚 min v ∈ V { r v } , max v ∈ V { d ‾ v } 〛 
T b 	Possible periods of presence of container batch b in port, b ∈ B : 〚 〛 T b = 〚 r α b , d ‾ ω b 〛 
T U b 	Possible periods for unloading container batch b ∈ B : 〚 〛 T U b = 〚 r α b , d ‾ α b 〛 
T L b 	Possible periods for loading container batch b ∈ B : 〚 〛 T L b = 〚 r ω b , d ‾ ω b 〛 
 
a 
 
    These sets allow to control access of vehicles to terminals, hence to take fixed assignment of vehicles to terminals into account. 
b 
 
    For example, mother vessels are usually assigned to one terminal and served continuously in one location. 
 
Table 3 . General parameters. 
Θ c 	Maximum quantity of processed containers in terminal c per period, c ∈ C 
Ξ c 	Storage capacity of terminal c ∈ C 
 
γ z 	Group of cranes operating in handling zone z ∈ Z 
ζ z 	Terminal to which handling zone z belongs, z ∈ Z 
 
r v a 	Period whose beginning is the ready time of vehicle v ∈ V 
d ‾ v a 	Period whose end is the deadline of vehicle v ∈ V 
δ v 	Container storage space left on vehicle v when it arrives in port, v ∈ V 
 
a 
 
    For a ship or a train, the ready time and the deadline are respectively the time of arrival and the latest possible time of departure. For a group of trucks, they give the time window within which its trucks may be given appointment. 
 
Table 4 . Parameters for ships. 
η g 	Number of quay cranes in group g ∈ G A 
ρ g n 	Maximum quantity of containers handled per period by n quay cranes from group g allocated to the same ship, 〚 〛 g ∈ G A , n ∈ 〚 1 , η g 〛 
η z 	Maximum number of quay cranes from group γ z that can operate simultaneously in quay segment z ∈ Z A 
κ z 	Length of quay segment z ∈ Z A 
w v 	Weight of ship v ∈ V A 
η v 	Maximum number of quay cranes that can be allocated to ship v ∈ V A 
η v z 	Maximum number of quay cranes that can be allocated to ship v in quay segment z , v ∈ V A , z ∈ ( Z A ∩ Z v ) : η v z = min { η v , η z , η γ z } 
κ v 	Length of ship v ∈ V A 
τ z z ′ 	Number of periods required for a ship to move from quay segment z to quay segment z ′ , z ∈ Z A , z ′ ∈ Z A 
 
Table 5 . Parameters for trains. 
ρ g 	Maximum quantity of containers handled per period by group of cranes g ∈ G B 
κ z 	Number of tracks in rail tracks z ∈ Z B 
w v 	Weight of train v ∈ V B 
τ z z ′ 	Number of periods required for a train to move from rail tracks z to rail tracks z ′ , z ∈ Z B , z ′ ∈ Z B 
 
Table 6 . Parameters for trucks. 
ρ g 	Maximum quantity of containers handled per period by group of cranes g ∈ G C 
 
Table 7 . Parameters for container batches. 
α b 	Vehicle from which container batch b is unloaded, b ∈ B 
ω b 	Vehicle to which container batch b is loaded, b ∈ B 
η b 	Number of containers in batch b ∈ B 
η ̃ b a 	Number of twenty-foot equivalent units in container batch b ∈ B 
 
a 
 
    Sizes of containers (40 foot, 20 foot, …) are considered only for storage capacities of terminals and for transport capacities of vehicles. 
 
Table 8 . Parameters for inter-terminal transport of containers. 
η c c ′ 	Maximum quantity of containers sent from terminal c to terminal c ′ per period, c ∈ C , c ′ ∈ C 
τ c c ′ 	Number of periods between sending of containers from terminal c and reception at terminal c ′ , c ∈ C , c ′ ∈ C 
Φ 	Maximum quantity of containers transported between all terminals during planning horizon 
4.2. Mixed-integer programming formulation 
 
We formulate the problem as a mixed-integer linear program. The formulation is of the time-indexed type, which necessitates a large number of variables and constraints, but which has been proven quite successful with many planning problems, for example by Buhrkal et al. (2011) with the berth allocation problem. 
 
In order to simplify the presentation, containers in terminals before and after the planning horizon are omitted here. The formulation used for numerical experiments includes them, but requires additional parameters and additional constraints, that can be easily deduced from the ones given below. 
4.2.1. Variables 
 
The decision variables are given in Table 9 , Table 10 and are related respectively to vehicles and container batches. 
 
Table 9 . Variables for ships, trains and groups of trucks. 
m v ∈ N a 	Turnaround time of ship or train v ∈ ( V A ∪ V B ) 
h vz nt ∈ { 0 , 1 } 	Whether ship v is in quay segment z with n assigned quay cranes for period t , 〚 〛 v ∈ V A , z ∈ Z v , n ∈ 〚 0 , η v z 〛 , t ∈ T v 
p vz t ∈ { 0 , 1 } b 	p vz t = ∑ n = 0 η v z h vz nt whether ship v is in quay segment z for period t , v ∈ V A , z ∈ Z v , t ∈ T v 
h vz t ∈ { 0 , 1 } 	Whether train v is in rail tracks z for period t , v ∈ V B , z ∈ Z v , t ∈ T v 
h ̲ vz t ∈ { 0 , 1 } c 	Whether handling of ship or train v in handling zone z starts at the beginning of period t , v ∈ ( V A ∪ V B ) , z ∈ Z v , t ∈ T v 
h ‾ vz t ∈ { 0 , 1 } c 	Whether handling of ship or train v in handling zone z ends at the end of period t , v ∈ ( V A ∪ V B ) , z ∈ Z v , t ∈ T v 
o vz t ∈ R + 	Quantity of containers handled for train or group of trucks v in handling zone z at period t , v ∈ ( V B ∪ V C ) , z ∈ Z v , t ∈ T v 
 
a 
 
    The integrality and non-negativity constraints on variables m v can be relaxed, since the objective and the constraints (7) ensure that these variables will have non-negative integer values. 
b 
 
    These variables are introduced only to simplify the formulation. 
c 
 
    The service of a ship or train may involve several handling zones and several disjoint sets of consecutive periods. Variables h ̲ vz t and h ‾ vz t indicate the first and last periods of each of these sets. 
 
Table 10 . Variables for container batches. 
u b c ∈ { 0 , 1 } 	Whether container batch b is unloaded in terminal c , b ∈ B , c ∈ C α b 
l b c ∈ { 0 , 1 } 	Whether container batch b is loaded in terminal c , b ∈ B , c ∈ C ω b 
u bc t ∈ R + a 	Quantity of containers from batch b unloaded in terminal c during period t , b ∈ B , c ∈ C α b , t ∈ T U b 
l bc t ∈ R + a 	Quantity of containers from batch b loaded in terminal c during period t , b ∈ B , c ∈ C ω b , t ∈ T L b 
s bc t ∈ R + a 	Total quantity of containers from batch b stored in terminal c at the end of period t , b ∈ B , c ∈ ( C α b ∪ C ω b ) , t ∈ T b 
i bc c ′ t ∈ R + a 	Quantity of containers from batch b sent from terminal c to terminal c ′ during period t , available in c ′ at the beginning of period t + τ c c ′ , b ∈ B , ( c , c ′ ) ∈ I b , t ∈ T b , t + τ c c ′ ∈ T b 
 
a 
 
    Variables related to quantities of containers are continuous since they denote operation progresses and not exact numbers of containers. 
 
4.2.2. Objective 
 
The objective is to minimize weighted turnaround time: minimize ∑ v ∈ ( V A ∪ V B ) ( w v · m v ) . 
4.2.3. Constraints on ships 
 
Constraints on ships are mainly related to berth allocation and to quay crane allocation. The study by Bierwirth and Meisel (2010) report three types of quay layout: discrete, continuous and hybrid. With a discrete quay layout, one berth can accommodate only one ship at a time. With a continuous quay layout, vessels can berth anywhere along the quay. We use a hybrid quay layout, where each quay is viewed as a finite set of quay segments and each segment can accommodate simultaneously at most two ships, as illustrated in Fig. 1 . 
 
This makes the condition “at each period, the sum of the lengths of the ships to moor is lower than or equal to the length of the quay segment in which they have to be moored”, not only necessary but also sufficient to effectively moor the ships. Allowing three ships or more simultaneously in a quay segment would make the condition insufficient, as demonstrated in Fig. 5 : the sum of the lengths of the vessels is always lesser than or equal to the total length of the quay segment, but there is no way to schedule the seventh vessel on the quay segment. This layout is also used by Imai et al. (2007) . The constraints on ships are the following ones. (1) ∑ v ∈ V A : z ∈ Z v , t ∈ T v ( κ v · p vz t ) ⩽ κ z ∀ z ∈ Z A , ∀ t ∈ T (2) ∑ v ∈ V A : z ∈ Z v , t ∈ T v p vz t ⩽ 2 ∀ z ∈ Z A , ∀ t ∈ T (3) ∑ v ∈ V A : z ∈ Z v , t ∈ T v ∑ n = 1 η v z ( n · h vz nt ) ⩽ η z ∀ z ∈ Z A , ∀ t ∈ T (4) ∑ z ∈ Z A : γ z = g ∑ v ∈ V A : z ∈ Z v , t ∈ T v ∑ n = 1 η v z ( n · h vz nt ) ⩽ η g ∀ g ∈ G A , ∀ t ∈ T (5) ∑ b ∈ B U v : t ∈ T U b u bc t + ∑ b ∈ B L v : t ∈ T L b l bc t ⩽ ∑ z ∈ Z v : c = ζ z ∑ n = 1 η v z ( ρ γ z n · h vz nt ) ∀ v ∈ V A , ∀ c ∈ C v , ∀ t ∈ T v (6) ∑ z ∈ Z v p vz t ⩽ 1 ∀ v ∈ V A , ∀ t ∈ T v (7) 〚 〛 m v ⩾ ( t - r v + 1 ) · ∑ z ∈ Z v p vz t ∀ v ∈ V A , ∀ t ∈ 〚 r v , d ‾ v 〛 (8) - ∑ b ∈ B U v ∑ c ∈ C v ∑ t ′ ∈ T v : t ′ ⩽ t η ̃ b η b · u bc t ′ + ∑ b ∈ B L v ∑ c ∈ C v ∑ t ′ ∈ T v : t ′ ⩽ t η ̃ b η b · l bc t ′ ⩽ δ v ∀ v ∈ V A , ∀ t ∈ T v (9) ∑ z ∈ Z v ∑ t ∈ T v h ̲ vz t = 1 ∀ v ∈ ( V A ∩ V ̃ ) (10) ⧹ h ‾ vz t + ∑ z ′ ∈ Z v ∑ t ′ = t + 1 min { t + τ z z ′ , d ‾ v } h ̲ v , z ′ t ′ ⩽ 1 ∀ v ∈ V A ⧹ V ̃ , ∀ z ∈ Z v , ∀ t ∈ T v (11) h ̲ vz r v - p vz r v = 0 ∀ v ∈ V A , ∀ z ∈ Z v (12) ⧹ h ̲ vz t + 1 + p vz t - p vz t + 1 - h ‾ vz t = 0 ∀ v ∈ V A , ∀ z ∈ Z v , ∀ t ∈ T v ⧹ { d ‾ v } (13) p vz d ‾ v - h ‾ vz d ‾ v = 0 ∀ v ∈ V A , ∀ z ∈ Z v (14) p vz t = ∑ n = 0 η v z h vz nt ∀ v ∈ V A , ∀ z ∈ Z v , ∀ t ∈ T v Constraints (1) ensure that the sum of the lengths of the ships in a quay segment does not exceed its length. Constraints (2) enforce that a quay segment can accommodate two ships. Constraints (3) limit the number of quay cranes in a quay segment. Constraints (4) ensure that a group of quay cranes assigns no more cranes than it has. Constraints (5) limit the quantity of containers handled on a ship, according to the speed of the cranes assigned to it. Constraints (6) ensure that a ship is present in at most one quay segment. Constraints (7) and the objective function give to a variable m v a value equal to the turnaround time of ship v . Constraints (8) enforce that no more containers are loaded on a ship than its transport capacity allows, taking into account sizes of containers. Constraints (9) ensure that a ship v ∈ V ̃ is handled in only one quay segment. Constraints (10) enforce that moving between two quay segments requires a number of periods. Technical constraints (11) , (12) , (13) together with constraints (10) link values of variables h ̲ vz t , p vz t and h ‾ vz t (the proof is provided in Appendix 2 ). Technical constraints (14) link values of variables p vz t and h vz nt . 
 
    Download : Download high-res image (181KB) 
    Download : Download full-size image 
 
Fig. 5 . The necessary condition for mooring ships is not sufficient if more than two ships may moor simultaneously in the same segment. 
4.2.4. Constraints on trains 
 
The constraints on trains are the following ones. (15) ∑ v ∈ V B : z ∈ Z v , t ∈ T v h vz t ⩽ κ z ∀ z ∈ Z B , ∀ t ∈ T (16) ∑ z ∈ Z B : γ z = g ∑ v ∈ V B : z ∈ Z v , t ∈ T v o vz t ⩽ ρ g ∀ g ∈ G B , ∀ t ∈ T (17) o vz t ⩽ ρ γ z · h vz t ∀ v ∈ V B , ∀ z ∈ Z v , ∀ t ∈ T v (18) ∑ b ∈ B U v : t ∈ T U b u bc t + ∑ b ∈ B L v : t ∈ T L b l bc t = ∑ z ∈ Z v : c = ζ z o vz t ∀ v ∈ V B , ∀ c ∈ C v , ∀ t ∈ T v Constraints (15) limit the number of trains in rail tracks. Constraints (16) enforce that the quantity of containers handled by a group of cranes doesn’t exceed its limit. Constraints (17) ensure that a train is in rail tracks when containers are handled. Constraints (18) limit the quantity of containers handled per period. There are also other constraints on trains. They are similar to constraints (6) , (7) , (8) , (9) , (10) , (11) , (12) , (13) and obtained by substituting in these constraints the index of the vehicle type a (ships) by b (trains) as well as variables p vz t by variables h vz t . Hence, these last constraints are not rewritten. 
4.2.5. Constraints on groups of trucks 
 
They are similar to constraints (8) , (16) , (18) and obtained by substituting in these constraints the index of the vehicle type a (ships) by c (trucks) in (8) as well as the index of the vehicle type b (trains) by c (trucks) in (16) , (18) . These constraints are not rewritten. 
4.2.6. Constraints on container batches 
 
The constraints on container batches are the following ones. (19) ∑ c ∈ C α b u b c = 1 ∀ v ∈ V , ∀ b ∈ B U v (20) ∑ t ∈ T U b u bc t = η b · u b c ∀ v ∈ V , ∀ b ∈ B U v , ∀ c ∈ C v (21) ∑ c ∈ C ω b l b c = 1 ∀ v ∈ V , ∀ b ∈ B L v (22) ∑ t ∈ T L b l bc t = η b · l b c ∀ v ∈ V , ∀ b ∈ B L v , ∀ c ∈ C v (23) ∑ v ∈ V : c ∈ C v ∑ b ∈ B U v : t ∈ T U b u bc t + ∑ v ∈ V : c ∈ C v ∑ b ∈ B L v : t ∈ T L b l bc t + ∑ c ′ ∈ C ∑ b ∈ B : ( c ′ , c ) ∈ I b , t ∈ T b , ( t - τ c ′ c ) ∈ T b i bc ′ c , t - τ c ′ c + ∑ b ∈ B : ( c , c ′ ) ∈ I b , t ∈ T b , ( t + τ c c ′ ) ∈ T b i bc c ′ t ⩽ Θ c ∀ c ∈ C , ∀ t ∈ T (24) ∑ b ∈ B : c ∈ C b , t ∈ T b η ̃ b η b · s bc t ⩽ Ξ c ∀ c ∈ C , ∀ t ∈ T (25) ⧹ s bc t + ∑ c ′ ∈ C : ( c , c ′ ) ∈ I b , ( t + τ c c ′ ) ∈ T b i bc c ′ t = s bc t - 1 + u bc t ∀ b ∈ B , ∀ c ∈ ( C α b ⧹ C ω b ) , ∀ t ∈ T U b (26) ⧹ s bc t + l bc t = s bc t - 1 + ∑ c ′ ∈ C : ( c ′ , c ) ∈ I b , ( t - τ c ′ c ) ∈ T b i bc ′ c , t - τ c ′ c ∀ b ∈ B , ∀ c ∈ ( C ω b ⧹ C α b ) , ∀ t ∈ T L b (27) s bc t + l bc t + ∑ c ′ ∈ C : ( c , c ′ ) ∈ I b , ( t + τ c c ′ ) ∈ T b i bc c ′ t = u bc t + s bc t - 1 + ∑ c ′ ∈ C : ( c ′ , c ) ∈ I b , ( t - τ c ′ c ) ∈ T b i bc ′ c , t - τ c ′ c ∀ b ∈ B , ∀ c ∈ ( C α b ∪ C ω b ) , ∀ t ∈ ( T U b ∩ T L b ) (28) ∑ c ∈ C b s bc r α b - 1 = 0 ∀ b ∈ B (29) ∑ t ∈ T b : ( t + τ c c ′ ) ∈ T b ∑ ( c , c ′ ) ∈ I b i bc c ′ t ⩽ η b ∀ b ∈ B (30) ∑ b ∈ B : ( c , c ′ ) ∈ I b , t ∈ T b , ( t + τ c c ′ ) ∈ T b i bc c ′ t ⩽ η c c ′ ∀ ( c , c ′ ) ∈ ( C × C ) , c ≠ c ′ , ∀ t ∈ T (31) ∑ b ∈ B ∑ ( c , c ′ ) ∈ I b ∑ t ∈ T b : ( t + τ c c ′ ) ∈ T b i bc c ′ t ⩽ Φ Constraints (19) , (20) (resp. (21) , (22) ) ensure that a batch is fully unloaded (resp. loaded) in one terminal. Note that, these constraints are expressed by vehicle. 
 
Other constraints define a problem mainly related to storage and inter-terminal transport. Constraints (23) limit the quantity of processed containers per period in a terminal. Constraints (24) limit the quantity of stacked twenty-foot equivalent units in a terminal. Constraints (25) , (26) , (27) link values of variables u bc t , l bc t , s bc t and i bc c ′ t , enforcing the conservation of the container flow. Constraints (28) enforce that no container is stored in the terminals before the first period of planning. Constraints (29) ensure that a batch is transported between two terminals at most once. Constraints (30) limit the quantity of containers transported by period between two terminals. Constraints (31) limit the total quantity of containers transported between all terminals during whole planning horizon. 
 
As the formulation is complex, its implementation has been thoroughly tested. Firstly, unit tests ensure that each constraint is well formed. Secondly, consistency tests on solutions guarantee that the constraints are satisfied. Lastly, the program has been executed on small instances whose optimal solution had been computed manually and the solutions were verified. Two heuristics based on this formulation are introduced in the next section. 
5. Heuristic approach 
 
The problem studied in this paper is NP -hard, as the one machine scheduling problem with release dates and minimization of the sum of completion times (see the study by Lenstra et al. (1977) ) polynomially reduces to it. The machine is equivalent to one container terminal with only one berth and one quay crane that can handle one container per period. All other data related to the terminal are set to values large enough so that they can be ignored. Each task corresponds to the non-preemptive service of one vessel. The release date of the task is the date of arrival of the vessel. Its processing time is the number of containers to be handled. 
 
Still, direct solving by a state-of-the-art solver can obtain solutions to small to mid-sized realistic instances of the time-indexed mixed-integer linear program formulated in the previous section. Therefore, we propose a mixed-integer programming based heuristic approach, built on the structural decomposition of the formulation, to deal with the larger instances. 
 
In this section, we show how to use the proposed structural decomposition with the relax-and-fix heuristic, described by Pochet and Wolsey (2006) . Furthermore, this decomposition is also used with a new heuristic that we call restrict-and-fix . In the two heuristics, a sequence of relaxed problems are solved, progressively fixing integer variables in the original problem. Relax-and-fix relaxes some integrality constraints on variables, whereas restrict-and-fix relaxes also some linear constraints. 
5.1. Structural decomposition 
 
In this study, the structure of the formulation refers to how integer and continuous variables are linked together by linear constraints. This structure is highlighted in the matrix in Fig. 6 . Each column, except the last one, corresponds to the variables, either binary or continuous non-negative, related to a vehicle - a ship, a train or a group of trucks. The last column corresponds to the continuous non-negative variables related to storage and ITT (Inter-Terminal Transport of containers). 
 
    Download : Download high-res image (278KB) 
    Download : Download full-size image 
 
Fig. 6 . Structure of the formulation. 
 
The first row in blue corresponds to the objective, which is indicated to contain binary variables for the sake of simplicity (the values of the continuous non-negative variables m v appearing in the objective are constrained by (7) and can be expressed in terms of binary variables p vz t for ships and h vz t for trains). Each other row corresponds to a set of constraints and one of its cells is colored if and only if some of the indicated variables appear in at least one of these constraints. 
5.1.1. First level of decomposition, by vehicle types 
 
On the one hand, the weakly linking constraints in green link a large number of continuous variables that are not part of the objective function and offer some degree of freedom (constraints (23) , (25) , (26) , (27) ). On the other hand, the strongly linking constraints in red contain binary variables that are part of the objective function. Each of these constraints is restricted to one vehicle type and is related to resource allocation (constraints (1) , (2) , (3) , (4) on ships, constraints (16) on trains). Finally, the constraints in purple are local either to one vehicle or to storage and ITT. This calls for a decomposition by vehicle types. 
5.1.2. Second level of decomposition, by partitioning vehicles of the same type 
 
Once the problem is decomposed by vehicle type, the resulting subproblems may remain too large to be tackled by a state-of-the-art solver. However, two vehicles of the same type may not have significant interactions, especially if their associated time windows are disjoint, or if they are not processed in the same handling zone. Hence, vehicles which are most linked together by the constraints are clustered in order to form smaller subproblems. This clustering is achieved according to the solution of the problem formulated below as a 0–1 quadratic program, called hereafter the partition problem. The notations and decision variables for this problem are respectively given in Table 11 , Table 12 . 
 
Table 11 . Notations for the partition problem. 
V ¯ 	Set of vehicles of the same type to partition 
Ω 	Number of subproblems 
∊ ∊ 	Minimum number of vehicles in a subproblem 
ζ 	Maximum number of vehicles in a subproblem 
Q 	Set of pairs of vehicles, such that vehicles in a pair share access to at least one common handling zone 
δ v v ′ 	Number of periods in the intersection of time windows of vehicles v and v ′ , δ v v ′ = T v ∩ T v ′ , ( v , v ′ ) ∈ Q 
 
Table 12 . Variables of the partition problem. 
x v o ∈ { 0 , 1 } 	Whether vehicle v is in subproblem o , 〚 〛 v ∈ V ¯ , o ∈ 〚 1 , Ω 〛 
 
The objective function maximizes the number of time periods shared by vehicle pairs assigned to the same cluster, two vehicles in a pair having access to at least one common handling zone: 〚 〛 maximize ∑ ( v , v ′ ) ∈ Q ∑ o ∈ 〚 1 , Ω 〛 ( δ v v ′ · x v o · x v ′ o ) . Note that, both temporal and spatial constraints are taken into account in the objective function. This aims at forming clusters of vehicles with few strongly linking constraints between them. 
 
The constraints of the partition problem are the following ones: (32) 〚 〛 ∑ o ∈ 〚 1 , Ω 〛 x v o = 1 ∀ v ∈ V ¯ , (33) ∊ 〚 〛 ∊ ⩽ ∑ v ∈ V ¯ x v o ⩽ ζ ∀ o ∈ 〚 1 , Ω 〛 . Constraints (32) assign each vehicle to a subproblem. Constraints (33) ensure that the number of vehicles in each subproblem is between the allowed minimum and maximum ones. 
 
The partition problem formulated above is NP -hard: the classical quadratic assignment problem, described by Garey and Johnson (1979) , reduces to it in a straightforward way. 
 
The resulting subproblems should be solved by non-increasing number of container batches. This order allows to take the most impacting decisions first, when the degree of freedom is the highest. 
5.2. Relax-and-fix 
 
Relax-and-fix is a general heuristic to solve mixed-integer programs, described by Pochet and Wolsey (2006) , which consists in the following procedure. First, the set of integer variables is partitioned into disjunctive subsets and an order of treatment is defined. Then, at each iteration, integrality constraints are relaxed for all but one of these subsets. The resulting subproblem is solved. The integer variables of the subproblem are fixed at their current values and the process is repeated for all the remaining subsets. 
 
Relax-and-fix was successfully applied to the multi-periodic scheduling and planning problems studied by Dillenberger et al., 1994 , Akartunali and Miller, 2009 , Ferreira et al., 2010 . In these studies, integer variables are grouped by macro-periods. But preliminary tests did show that the structural decomposition proposed above performs better for the problem at hand. As each binary variable is associated to exactly one vehicle, a partition of all vehicles defines a partition of the binary variables. Relax-and-fix, tailored for the problem of this paper, is presented in Algorithm 1 and illustrated in Fig. 7 . Its execution on a toy instance is described in Appendix A . Note that the algorithm structure reflects the two levels of decomposition, used to build the subproblems. 
 
    Download : Download high-res image (746KB) 
    Download : Download full-size image 
 
Fig. 7 . Executions of relax-and-fix and restrict-and-fix with only one subproblem by vehicle type. Crossed cells correspond to fixed variables. 
 
Still, as shown in the next section, relax-and-fix requires too much time to solve the largest realistic instances of the problem. A new heuristic was designed to take further advantage of the structure of the formulation. The idea is to first relax and then progressively enforce the global constraints (23) , (25) , (26) , (27) . This results in one problem per vehicle type, plus one problem for storage and ITT. 
 
Algorithm 1 
 
Relax-and-fix heuristic adapted to the port planning problem 
 
5.3. Restrict-and-fix 
 
We propose this new heuristic to solve mixed-integer programs consisting in several problems tied together by global, but weakly linking constraints. It uses an ordered partition of the variables into subsets which defines one subproblem per subset. All the variables, either continuous or integer, are concerned with the partition. Hence, the relaxation of the constraints linking together the subsets of the partition in the original problem results in one independent problem per subset. When solving the current subproblem, the variables of the subsequent subproblems and the constraints in which they appear are removed. This was introduced to speed up the solving with regard to relax-and-fix, since the subproblems have less columns and rows. 
 
Algorithm 2 
 
Restrict-and-fix heuristic adapted to the port planning problem. 
 
At each iteration, a subset of integer and continuous variables is considered, in order to fix its integer variables by solving a subproblem. Previous subsets of variables are also part of the subproblem, with their integer variables fixed at their computed values. Every constraint containing only variables of the subproblem, that is, variables from the current and all the previous subsets, is present. This amounts to relaxing the other linear constraints, eliminating the next subsets of variables, since these variables are independent of the ones of the current subproblem. However, in order to increase feasibility, other constraints of the original problem may be modified and added, by restraining their variables to the ones of the subproblem, and, if necessary, by adapting their right hand sides. 
 
When solving the problem introduced in this paper, these additional constraints are obtained by modifying constraints on container processing capacity (23) and conservation of containers (25) , (26) , (27) . Their variables are restricted to the ones present in the current subproblem. It was not necessary to use lowered right hand side values. Restrict-and-fix, applied to our problem, is presented in Algorithm 2 , and illustrated in Fig. 7 . Its execution on a toy instance is described in Appendix A . The principles of restrict-and-fix are applied to obtain three subproblems, using the decomposition by vehicle type. Either relax-and-fix can be used as a subroutine to solve the subproblems or a state-of-the-art solver. 
5.4. Illustration of the subproblem structures for both heuristics 
 
An illustration of the way the subproblems are built is provided in Fig. 7 . To facilitate the understanding, only three subproblems are built for each heuristic. For relax-and-fix, binary variables are partitioned by vehicle type. For restrict-and-fix, all the variables are partitioned into three subsets: one for ships, storage and ITT, one for trains and one for trucks. For both heuristics, the subproblem for ships is solved first, then the one for trains, then the one for trucks. 
 
Solving one subproblem allows to fix its binary variables at their computed values in the subsequent subproblems. Fixed binary variables are indicated in the figure with a cross in each case of the corresponding columns. The performances of both restrict-and-fix and relax-and-fix using the structural decomposition are assessed in the next section. 
6. Numerical experiments 
 
In this section, numerical experiments are conducted on realistic generated instances, to evaluate the proposed solving methods and to quantify the impact of a global management on port’s performance. 
6.1. Settings 
 
All the numerical experiments are performed on a PC with a CPU at 3 GHz and 8 GB of RAM. CPLEX 12.4 is used as the mixed-integer linear program solver. The time limit is set to 7200 s for the three solving methods. 
6.1.1. CPLEX 
 
CPLEX is set to save search trees on the disk, so that it does not run out of memory during the computations. Besides, its dual pricing algorithm is set to steepest edge in slack space, since this algorithm reduced the number of dual simplex iterations required after branching. 
6.1.2. Relax-and-fix 
 
Ships are partitioned so that a subproblem contains between 16 and 24 ships. This results in up to 6 subproblems for ships, for the largest instances. Trains and trucks are not partitioned as previous tests did show that it was not necessary. To partition the ships, the partition problem is solved approximately by CPLEX after using Glover’s linearization (see Adams et al., 2004 ). The relative gap tolerance value is set between 0 and 0.75, depending on the size of the instance. Note that, the linear relaxation of the resulting formulation of the partition problem is weak, but this formulation allows CPLEX to quickly obtain good integer feasible solutions. 
 
The subproblems of relax-and-fix are solved by CPLEX, with a relative gap tolerance value set to 0.01 when dealing with large-sized instances. Each subproblem is solved within a time limit that becomes active once an integer feasible solution has been obtained. The time limit for the first subproblem is 3600 s. For the ith subproblem, i > 1 , the time limit is set to the remaining time of the ( i - 1 )th one, to which 7200 / 2 i seconds are added. 
6.1.3. Restrict-and-fix 
 
Three subproblems are defined: one for ships, one for trains and one for trucks. The subproblem for ships is solved by relax-and-fix, with the settings described above. The subproblem for trains and the one for trucks are solved by CPLEX, with the settings described above. 
6.2. Test instances 
 
The test instances are designed according to the characteristics of some ports in the European northern range and can be downloaded at http://litis.univ-lehavre.fr/container-port-planning/ . The generation procedure is similar to the one described by Hartmann (2004) . 
 
Four terminal configurations are tested: (i) 1 maritime terminal, (ii) 2 maritime terminals, (iii) 3 maritime terminals, (iv) 3 sea-road terminals plus 1 inland-waterway and rail terminal. The main parameter values for container terminals are provided in Table 13 . The second and third terminal configurations allow us to compute the impact of a global management of maritime terminals on weighted turnaround time and the influence of ITT capacities. Firstly, in the instances where these configurations occur, each feeder vessel, inland-waterway barge and train v has to be routed among terminals: ∣ C v ∣ = ∣ C ∣ ; while each mother vessel v ′ is always assigned to one terminal: ∣ C v ′ ∣ = 1 . Secondly, these instances include three limits on ITT - 0, 5, 10 percent of containers - as well as two ITT capacity levels - at most 30 or 60 container moves per hour between any couple of terminals. 
 
Table 13 . Main characteristics of container terminals. 
Terminal 	Characteristics by vehicle type 
	Ship 	Train 	Truck 
 
    Maritime 
 
    350 operations/h 
 
    storage capacity: 
 
    15,000 TEU a 
 
	 
 
    2 quay segments of 725 m 
 
    2 quay segments of 275 m b 
 
    16 quay cranes c 
 
	 
 
    6 tracks 
 
    35 containers/h 
 
	 
 
    70 containers/h 
 
    Sea, road 
 
    350 operations/h 
 
    storage capacity: 
 
    15,000 TEU 
 
	 
 
    2 quay segments of 725 m 
 
    2 quay segments of 275 m b 
 
    16 quay cranes c 
 
	 
 
    – 
 
	 
 
    70 containers/h 
 
    Inland-waterway, rail 
 
    175 operations/h 
 
    storage capacity: 
 
    7500 TEU 
 
	 
 
    3 quay segments of 120 m d 
 
    6 quay cranes c 
 
	 
 
    12 tracks 
 
    70 containers/h 
 
	 
 
    – 
 
a 
 
    Twenty-foot equivalent unit. 
b 
 
    The quay of a maritime or sea-road terminal is partitioned into 4 quay segments: 2 quay segments of 725 m, and 2 quay segments of 225 m. This partition was chosen according to ship lengths. A quay segment may accommodate at most two ships simultaneously. 
c 
 
    The base speed of a quay crane is 30 containers/h and the productivity of n quay cranes is n 0.8 . 
d 
 
    The quay of a inland-waterway and rail terminal is partitioned into 3 quay segments of 120 m, according to the maximum barge length of 60 m. 
 
As an example, with the third terminal configuration and an ITT capacity level of 30 container moves per hour, the total maximum number of container moves initiated per hour is 180. For the fourth terminal configuration, the ITT capacity level is 30 container moves per hour from a sea-road terminal to a sea-road terminal. It is 50 container moves per hour from the inland-waterway and rail terminal (respectively from a sea-road terminal) to a sea-road terminal (resp. to the inland-waterway and rail terminal). Hence, for this terminal configuration, a total of at most 300 container moves can be initiated per hour with the inland-waterway and rail terminal as origin or destination. 
 
The annual volume of traffic is either 1, 2 or 2.5 millions of TEU (Twenty-foot Equivalent Unit). For reference, the annual volume of traffic in the whole port of Le Havre is currently close to 2.5 millions of TEU. The planning horizon is either 5 or 7 days and the length of a time period is 2 h. The numbers of mother vessels, feeder vessels, inland-waterway barges, trains and groups of trucks are given in Table 14 . 
 
Table 14 . Vehicles and container batches by level of traffic. 
Traffic a 	Horizon 	Vehicle type 	Batches c 
		Ship 	Train 	Trucks b 
 
    1 
 
	 
 
    5 days 
 
	 
 
    4 mother vessels 
 
    10 feeder vessels 
 
    29 inland-waterway barges 
 
	 
 
    17 
 
	 
 
    up to 8 
 
    groups 
 
	 
 
    183.4 
 
    1 
 
	 
 
    7 days 
 
	 
 
    5 mother vessels 
 
    14 feeder vessels 
 
    40 inland-waterway barges 
 
	 
 
    24 
 
	 
 
    up to 10 
 
    groups 
 
	 
 
    298.6 
 
    1.5 
 
	 
 
    5 days 
 
	 
 
    6 mother vessels 
 
    15 feeder vessels 
 
    43 inland-waterway barges 
 
	 
 
    26 
 
	 
 
    up to 12 
 
    groups 
 
	 
 
    286.7 
 
    2.5 
 
	 
 
    5 days 
 
	 
 
    15 mother vessels 
 
    24 feeder vessels 
 
    71 inland-waterway barges 
 
	 
 
    42 
 
	 
 
    up to 30 
 
    groups 
 
	 
 
    574 
 
a 
 
    Millions of TEU. 
b 
 
    When a mother vessel arrives at the beginning (respectively at the end) of the planning horizon, the group of trucks corresponding to its export (resp. its import) containers is out of the planning horizon. Hence its containers are assumed to be stored in the terminal (resp. have the terminal as a destination). 
c 
 
    Average number. 
 
The weight of a ship or a train is assumed to be an increasing linear function of the transport capacity. The ready times of the ships and trains are uniformly distributed. There are two groups of trucks per mother vessel: one for the import containers, the other for the export containers. In the case of import containers (respectively export containers), the ready time of a group of trucks is set to one day after (resp. one day before) the arrival of the mother vessel. 
 
Nearly 30 percent of containers unloaded from a mother vessel are loaded to a feeder vessel, 30 to a barge, 15 to a train and 25 to a truck. More than 95 percent of containers unloaded from a feeder vessel, a barge, a train or a truck are loaded to a mother vessel. The number of containers to be unloaded from a vehicle follows a Poisson distribution of mean a fraction of its transport capacity. For example, a mother vessel unloads on average 25 percent of its transport capacity, which is between 3000 and 14,000 TEU. The ratio of unloaded containers over loaded containers is close to 1 for all ships and trains. Container dwell time is on average 3 days, except for the containers unloaded from or loaded to a truck. Half of the containers are 20 foot, other half are 40 foot. The average numbers of container batches are provided in Table 14 . 
6.3. Computational results 
 
Computational results are reported in Table 15 , Table 16 , Table 17 , Table 18 . For the direct solving by CPLEX, we provide the running time (column CPU time), the value of the best found integer solution (column Value), the gap between the linear relaxation and the best found integer solution (column Gap LR) and the gap between the lower bound at the end of optimization, computed as the smallest valid value of the continuous relaxation of a node in the search tree, and the best found integer solution (column Gap LB). For the two heuristics, we give the running time and the value of the best found integer solution. Column Gap LB gives the gap between the heuristic solution and the lower bound found by CPLEX. Clearly, this gap becomes very pessimistic as the instances grow and CPLEX solves only a few nodes of the search tree. The time limit is always set to two hours, for the three methods. A hyphen (“-”) indicates that no solution was found by the method. 
 
Table 15 . Comparative numerical results: 1 terminal, 1 annual million of TEU. 
Instance 	CPLEX 	Relax-and-fix 	Restrict-and-fix 
		CPU time 	Value 	Gap LR (%) 	Gap LB (%) 	CPU time (s) 	Value 	Gap LB (%) 	CPU time (s) 	Value 	Gap LB (%) 
5 days 	#1 	54.3 	82,224 	8.8 	0 	21.8 	82,224 	0 	18.1 	82,224 	0 
#2 	82.3 	84,046 	9.7 	0 	13.5 	84,046 	0 	9.1 	84,046 	0 
#3 	93.2 	88,312 	11.7 	0 	67.7 	88,312 	0 	41.1 	88,312 	0 
#4 	111.8 	85,724 	9.8 	0 	43.7 	85,724 	0 	18.2 	85,724 	0 
#5 	89.9 	85,556 	9.2 	0 	24.5 	85,556 	0 	21.2 	85,556 	0 
 
											 
Average 	86.3 	85172.4 	9.8 	0 	34.3 	85172.4 	0 	21.6 	85172.4 	0 
 
											 
7 days 	#1 	7200 	123,708 	9.8 	0.05 	96.2 	123,708 	0.05 	51.3 	123,708 	0.05 
#2 	7200 	127,656 	11.3 	1.4 	151.1 	127,656 	1.4 	87.2 	127,656 	1.5 
#3 	2269.9 	128,966 	10.3 	0 	83.1 	128,966 	0 	65.3 	128,966 	0 
#4 	499.1 	129,310 	11.6 	0 	70.7 	129,310 	0 	57.3 	129,310 	0 
#5 	783.8 	133,408 	11.3 	0 	140.1 	133,408 	0 	121.2 	133,408 	0 
 
											 
Average 	3590.6 	128609.6 	10.8 	0.3 	108.2 	128609.6 	0.3 	76.4 	128609.6 	0.3 
 
											 
Overall 	1838.4 	106,891 	10.3 	0.1 	71.2 	06,891 	0.1 	49 	106,891 	0.1 
 
Table 16 . Comparative numerical results: 2 terminals, 1.5 annual millions of TEU over 5 days. 
Instance 	CPLEX 	Relax-and-fix 	Restrict-and-fix 
		CPU time (s) 	Value 	Gap LR (%) 	Gap LB (%) 	CPU time (s) 	Value 	Gap LB (%) 	CPU time (s) 	Value 	Gap LB (%) 
No ITT 	#1 	7200 	– 	– 	– 	3636.2 	133,426 	6 	3623.4 	133,426 	6 
#2 	516 	137,506 	3.9 	161.2 	137,506 	3.9 
#3 	1616 	138,777 	2.8 	196.4 	138,777 	2.8 
#4 	195.2 	136,726 	4.7 	125.3 	136,726 	4.7 
#5 	2133.3 	140,423 	4 	3647.5 	140,423 	4 
 
											 
Average 	7200 	– 	– 	– 	1619.4 	137371.6 	4.3 	1550.8 	137371.6 	4.3 
 
											 
 
    ITT: 
 
    limited to 5% of cont., 
 
    capacity of 30 cont./h 
 
    between any couple 
 
    of terminals 
 
	#1 	1097.7 	128,101 	12.3 	0.1 	3707.9 	128,101 	0.1 	348.9 	128,269 	0.3 
#2 	7200 	– 	– 	– 	202.6 	132,812 	3.9 	750.6 	132,812 	3.9 
#3 	941.9 	131,993 	2.9 	1425.7 	131,937 	2.8 
#4 	619.4 	133,444 	4.8 	1635.8 	133,276 	4.7 
#5 	2444.4 	135,661 	3.4 	196.9 	135,325 	3.1 
 
											 
Average 	5979.6 	– 	– 	– 	1583.3 	132402.2 	3 	871.6 	132323.8 	3 
 
											 
 
    ITT: 
 
    limited to 5% of cont., 
 
    capacity of 60 cont./h 
 
    between any couple 
 
    of terminals 
 
	#1 	7200 	128,101 	12.3 	3.5 	432.6 	128,101 	3.5 	286.6 	128,269 	3.6 
#2 	1357.9 	132,812 	10.6 	0 	238.8 	132,812 	0 	1068.8 	132,868 	0.04 
#3 	7200 	– 	– 	– 	614.6 	131,657 	3.7 	896.8 	131,825 	3.8 
#4 	3120.9 	133,710 	4.8 	437 	133,612 	4.7 
#5 	299.9 	135,325 	4.1 	3842.1 	136,095 	4.6 
 
											 
Average 	6031.6 	– 	– 	– 	941.4 	132,321 	3.2 	1306.3 	132533.8 	3.4 
 
											 
 
    ITT: 
 
    limited to 10% of cont., 
 
    capacity of 30 cont./h 
 
    between any couple 
 
    of terminals 
 
	#1 	368.4 	128,101 	12.3 	0.4 	845.1 	128,101 	0.4 	105.3 	128,101 	0.4 
#2 	7200 	132,812 	10.6 	2.3 	202.1 	132,812 	2.3 	89.6 	132,812 	2.3 
#3 	3517 	131,657 	10.1 	0 	228.3 	131,657 	0 	247.5 	131,657 	0 
#4 	7200 	– 	– 	– 	140 	132,828 	0.8 	70.5 	132,828 	0.8 
#5 	166.6 	135,325 	3.6 	99.5 	135,325 	3.6 
 
											 
Average 	5097.1 	– 	– 	– 	316.5 	132144.6 	1.4 	122.5 	132144.6 	1.4 
 
											 
 
    ITT: 
 
    limited to 10% of cont., 
 
    capacity of 60 cont./h 
 
    between any couple 
 
    of terminals 
 
	#1 	7200 	128,101 	12.3 	0.8 	1225.2 	128,101 	0.8 	236.4 	128,101 	0.8 
#2 	– 	– 	– 	201 	132,812 	2.4 	126.8 	132,812 	2.4 
#3 	494.7 	131,657 	1.6 	103.7 	131,657 	1.6 
#4 	217.9 	132,828 	2.7 	128.9 	132,828 	2.7 
#5 	135,325 	10.8 	1.2 	258.7 	135,325 	1.2 	165.7 	135,325 	1.2 
 
											 
Average 	7200 	– 	– 	– 	479.5 	132144.6 	1.7 	152.3 	132144.6 	1.7 
 
											 
Overall 	6301.6 	– 	– 	– 	987.9 	133276.8 	2.7 	800.6 	133303.6 	2.8 
 
Table 17 . Comparative numerical results: 3 terminals, 2.5 annual millions of TEU over 5 days. 
Instance 	CPLEX 	Relax-and-fix 	Restrict-and-fix 
		CPU time (s) 	Value 	Gap LR (%) 	Gap LB (%) 	CPU time (s) 	Value 	Gap LB (%) 	CPU time (s) 	Value 	Gap LB (%) 
No ITT 	#1 	7200 	– 	– 	– 	6583.2 	233,152 	10.2 	6009.4 	231,272 	9.4 
#2 	6832.1 	246,896 	9.1 	6007.4 	245,946 	8.8 
#3 	5919.7 	247,556 	10.4 	1172.3 	243,520 	8.9 
#4 	7200 	- 	- 	3798.8 	247,758 	8.4 
#5 	6845.4 	246,752 	6.9 	4260.4 	249,940 	8.1 
 
											 
Average 	7200 	– 	– 	– 	6676.1 	– 	– 	4249.7 	243687.2 	8.7 
 
											 
 
    ITT: 
 
    limited to 5% of cont., 
 
    capacity of 30 cont./h 
 
    between any couple 
 
    of terminals 
 
	#1 	7200 	– 	– 	– 	6886.5 	236,780 	18.6 	5069.1 	220,068 	12.5 
#2 	6926.6 	239,272 	14.7 	5522.6 	234,642 	13 
#3 	3070.3 	235,308 	12.9 	2389.7 	233,562 	12.2 
#4 	6356.2 	234,642 	11.2 	6616.1 	234,876 	11.3 
#5 	6754.2 	237,534 	11.4 	6511.2 	234,806 	10.4 
 
											 
Average 	7200 	– 	– 	– 	5998.8 	236707.2 	13.8 	5221.8 	231590.8 	11.9 
 
											 
 
    ITT: 
 
    limited to 5% of cont., 
 
    capacity of 60 cont./h 
 
    between any couple 
 
    of terminals 
 
	#1 	7200 	313,609 	40.2 	38.4 	3805 	218,930 	11.7 	2496.4 	219,070 	11.8 
#2 	– 	– 	– 	5730.2 	234,782 	13.2 	2733.1 	233,812 	12.8 
#3 	6719.2 	236,372 	13.4 	5459.8 	235,356 	13.1 
#4 	7200 	– 	– 	4413.6 	236,354 	12.7 
#5 	5062.2 	235,638 	10.5 
 
											 
Average 	7200 	– 	– 	– 	6130.9 	– 	– 	4033.1 	232,046 	12.2 
 
											 
 
    ITT: 
 
    limited to 10% of cont., 
 
    capacity of 30 cont./h 
 
    between any couple 
 
    of terminals 
 
	#1 	7200 	– 	– 	– 	7200 	– 	– 	3618.7 	220,656 	12.5 
#2 	4543.6 	230,028 	11.2 	4476.7 	235,962 	13.4 
#3 	5253.5 	231,954 	11.8 	2478.6 	229,804 	10.9 
#4 	7200 	– 	– 	3244 	231,112 	10.8 
#5 	6919.8 	251,264 	15.7 	2963 	232,272 	8.8 
 
											 
Average 	7200 	– 	– 	– 	6223.4 	– 	– 	3356.2 	229961.2 	11.3 
 
											 
 
    ITT: 
 
    limited to 10% of cont., 
 
    capacity of 60 cont./h 
 
    between any couple 
 
    of terminals 
 
	#1 	7200 	– 	– 	– 	4905.6 	217,738 	11.7 	4410.4 	215,626 	10.8 
#2 	5113.9 	228,982 	10.2 	1457.7 	230,140 	10.6 
#3 	281,918 	29.2 	27.4 	6656.8 	231,336 	11.5 	1088.5 	232,348 	11.9 
#4 	288,874 	30.3 	28.2 	3779.1 	233,686 	11.3 	5836.2 	232,342 	10.8 
#5 	– 	– 	– 	4686.6 	233,258 	9.6 	1680.1 	233,700 	9.8 
 
											 
Average 	7200 	– 	– 	– 	5028.4 	229,000 	10.9 	2894.6 	228831.2 	10.8 
 
											 
Overall 	7200 	– 	– 	– 	6011 	– 	– 	3951 	233223.2 	11 
 
Table 18 . Comparative numerical results: 4 terminals (3 sea-road terminals as well as 1 inland-waterway and rail terminal), 2.5 annual millions of TEU over 5 days. 
Instance 	Relax-and-fix 	Restrict-and-fix 
		CPU time (s) 	Value 	Gap LB (%) 	CPU time (s) 	Value 	Gap LB (%) 
 
    ITT: 
 
    capacity of 
 
    30 a or 50 b cont./h 
 
    between any 
 
    couple of terminals 
 
	#1 	4870.7 	221,642 	7.8 	153.1 	217,046 	5.9 
#2 	3901.9 	218,240 	5.9 	517.3 	214,936 	4.4 
#3 	1113.4 	230,456 	6.7 	882.1 	227,950 	5.7 
#4 	4837.4 	232,036 	6.3 	791.1 	225,922 	3.8 
#5 	1540.8 	231,752 	4.9 	721.2 	228,510 	3.5 
 
							 
Average 	3252.9 	226825.2 	6.3 	613 	222872.8 	4.7 
 
a 
 
    Between any couple of sea-road terminals. 
b 
 
    From a sea-road terminal to the inland-waterway and rail terminal, as well as from the inland-waterway and rail terminal to a sea-road terminal. 
 
In Table 15 , results are given for two sets of five small sized instances randomly generated with two sets of parameter values, with 1 maritime terminal and 1 annual million of TEU over 5 or 7 days. 
 
CPLEX is able to solve eight of the ten instances, that is, to obtain both an optimal solution and the proof of its optimality. For the two instances not solved exactly by CPLEX, the average relative gap between the solution and the lower bound is less than 0.8%. The average running time of CPLEX is 1838 s, the one of relax-and-fix is 71 s and the one of restrict-and-fix 49 s. With these ten instances, the two proposed heuristics obtain optimal or almost optimal solutions and they have on average running times significantly lower than the ones of CPLEX. 
 
Increasing the planning horizon from 5 to 7 days raises the running time of CPLEX from 89 s on average to 3589, but doesn’t have such an impact on the ones of the two heuristics. Still, given data uncertainty, notably on vessels’ arrival times, the planning horizon is set to 5 days in the following experiments. In fact, the estimated time of arrival of a mother vessel usually becomes precise one or two days before its actual arrival. A longer planning horizon would increase solving time and the computed decisions may loose their accuracy because of the increasing uncertainty. 
 
In Table 16 (respectively Table 17 ), results are given for five sets of five instances randomly generated with the same parameter values, excepted the ones concerning ITT. Theses instances have 2 maritime terminals and 1.5 annual millions of TEU (resp. 3 maritime terminals and 2.5 annual millions of TEU) over 5 days. These twenty-fives instances are created from five base instances, by firstly increasing the limit on ITT - 0, then 5 and then 10 percent of containers - and secondly, for a given positive limit on ITT, increasing the capacity of ITT between any couple of terminals from 30 to 60 container moves per hour. Firstly, we aim at evaluating the solving methods on larger instances. Secondly, we aim at computing the decrease of weighted turnaround time that a global management of maritime terminals can achieve and the influence of ITT capacities. 
 
In Table 16 , computational results show that the two heuristics provide solutions of almost equal values to the 25 instances: 133276.8 on average for relax-and-fix and 133303.7 for restrict-and-fix. The average relative gap between the lower bound and their solution is less than 3%. CPLEX is able to solve four instances, and to provide almost optimal solutions to four other ones. The average running time of CPLEX is 6302 s, the one of relax-and-fix is 988 s and the one of restrict-and-fix 801 s. The two heuristics provide nearly optimal solutions to all these instances. 
 
In Table 17 , it can be observed that restrict-and-fix is the only method able to provide a solution to each of the 25 instances within the time limit. Relax-and-fix obtains a solution to 20 of the 25 instances, and CPLEX to 3 of the 25 instances. The average relative gap between the lower bound and the solution of restrict-and-fix is 11%. Note that, as these instances are larger, the lower bound requires more time to increase. Hence, restrict-and-fix provides solutions of values probably closer to the optimal ones than what the lower bounds may suggest. For 5 of these 25 large instances, relax-and-fix fails to obtain a solution within the allowed time limit, because no solution is found to one of the subproblems. 
 
Besides, as expected, allowing ITT decreases weighted turnaround time. In Table 16 , allowing 5% or 10% of the containers results in a 4% decrease. In Table 17 , allowing 5% of the containers to use ITT results in a 5% decrease and allowing 10% in a 6% decrease. In both tables, increasing the capacity of ITT from 30 container moves per hour between any couple of terminals to 60 doesn’t notably further reduce weighted turnaround time. This shows how the proposed approach can help to determine the required capacity of ITT between terminals for a given traffic, so that weighted turnaround time can be minimized. It also gives precise values on the improvement induced by ITT capacities. 
 
Finally, in Table 18 , results are provided for five instances randomly generated with the same parameter values, with 4 terminals (3 sea-road terminals as well as 1 inland-waterway and rail terminal) and 2.5 annual millions of TEU over 5 days. The traffic has the same characteristics as the one in the instances with 3 maritime terminals. CPLEX results doesn’t appear as it fails to obtain any integer feasible solution within the allowed time limit. 
 
In Table 18 , it can be observed that restrict-and-fix outperforms the two other methods, always providing the best solution. The average relative gap between the lower bound and the solution of restrict-and-fix is less than 5%. Restrict-and-fix and relax-and-fix obtain solutions to the five instances. CPLEX doesn’t obtain any solution to these instances within the allowed time. In addition, in Table 18 , the average running times of the two heuristics are lower than the ones in Table 17 : 613 s in Table 18 and 3951 s in Table 17 for restrict-and-fix as well as 3253 s in Table 18 and 6012 s in Table 17 for relax-and-fix. In this case, adding one terminal to which the whole inland waterway and rail traffic is redirected reduces both problem sizes (average numbers of columns, rows and binary variables) and running times. 
 
One may question the very good behavior of the proposed heuristics. The explanation is that the spatial and temporal structures of the problem instances are extensively exploited in the decomposition choices. Of course, examples may be designed where it will nonetheless provides poor performances. Indeed, instances where the maximum container dwell time is really small, or the priority of trains is much larger, should be more difficult to solve efficiently by our methods. However, we chose to limit our study to instances close to real terminals, not specialized in transshipment, for which container dwell time is indeed several days, and attracting large vessels is the priority. Exploring other issues is out of scope of this paper. 
 
Overall, these numerical results show that the proposed approach can tackle realistic instances of the problem, to assist port authorities and multi-terminal operators in the management of multi-terminal systems. It was observed in Table 16 , Table 17 that a global management of the terminals in which ITT is limited to 5% of containers allows to decrease weighted turnaround time by nearly 5%. For a port, this increase of performance can be valuable, depending on its competitors and on the costs related to ITT. 
7. Conclusion 
 
This paper considered a multi-terminal and multi-modal maritime container port, like the ones in the European northern range. In such a port, the port authority and the terminal operators are involved in the global management of multiple terminals. It includes the routing of feeder vessels, inland-waterway barges and trains among terminals, as well as the inter-terminal transport of containers. Vessel turnaround time depends on this coordination of operations, and it is a key competitive factor. 
 
Therefore, we introduced the first optimization model for scheduling ships, trains and trucks on multiple terminals, while limiting inter-terminal transport of containers. Its objective is to minimize weighted turnaround time. The model was formulated as a time-indexed mixed-integer linear program. A mixed-integer programming based heuristic approach was designed, which relies on a structural decomposition of the problem. Numerical results on instances with up to 4 terminals and 2.5 annual millions of twenty-foot equivalent units over 5 days show that this approach can assist decision makers in the global management of multi-terminal systems. The proposed approach also allows to compute the performance that a global management can achieve and the influence of capacities of inter-terminal transport of containers. An average improvement of 5 % was observed, even with limited inter-terminal transport of containers. 
 
Besides, the structural decomposition and its usage with relax-and-fix and restrict-and-fix may be applied to other problems, since it has shown to be efficient. Finally, the deterministic approach of this paper can be integrated into a rolling horizon framework to deal with uncertainty on data, notably on vessels’ arrival times. A preliminary study with the more general objective of minimizing weighted tardiness was performed by Schepler (2015) , with promising results. The key decisions of the model can be maintained under deviations of vessels’ arrival times, such as the choice of terminals and the allocation of quay segments. 
Acknowledgment 
 
This work was financed by region of Normandy, french government and European Union within Passage Portuaire and CLASSE projects. The authors wish to thank the anonymous reviewers for their valuable comments that helped us to improve the quality of the paper. 
Appendix A. MIP model and solving with a toy instance 
A.1. Toy instance 
 
As the size of the mixed-integer linear program increases rapidly, the toy instance defined below is restricted to two terminals c 1 and c 2 , one mother vessel v 1 , one feeder vessel v 2 , one train v 3 and two container batches b 1 and b 2 . It corresponds to the example introduced at the end of Section 2 using Fig. 4 . Its main characteristics are the following ones. 
 
Terminal c 1 has one group of cranes for ships, one quay segment z 1 , one group of cranes for trains and one group of rail tracks z 3 . Terminal c 2 has one group of cranes for ships and one quay segment z 2 . The transport of containers from terminal c 1 to terminal c 2 requires one period. It is not possible to transport containers from terminal c 2 to terminal c 1 . 
 
Vessel v 1 has only access to terminal c 1 . It arrives at the beginning of period 1 and must leave the port before the end of period 10. Vessel v 2 has only access to terminal c 2 . It arrives at the beginning of period 30 and must leave the port before the end of period 31. Train v 3 has only access to terminal c 1 . It arrives at the beginning of period 35 and must leave the port before the end of this period. The weights of vessels v 1 , v 2 and train v 3 are respectively 140, 5 and 1. 
 
Container batch b 1 has first to be unloaded from vessel v 1 in terminal c 1 . Then, it must be transported from terminal c 1 to terminal c 2 , so that it can be loaded to vessel v 2 . Container batch b 2 has to be unloaded from vessel v 1 in terminal c 1 and then loaded to train v 3 in the same terminal. Container batches b 1 and b 2 contain respectively 3 and 9 containers. 
A.2. Mixed-integer linear program 
 
The mixed-integer linear program is automatically generated from the toy instance. Its objective is: minimize 140 m v 1 + 5 m v 2 + m v 3 . A variable m v takes non-negative integer values. It provides the turnaround time of ship or train v . 
 
The toy instance is designed so that its solution set can be defined with a limited number of constraints, which are the following ones. The equation below forces the quantity of containers handled on vessel v 1 in quay segment z 1 (terminal c 1 ), according to the capacity of the number of allocated quay cranes. u b 1 , c 1 t + u b 2 , c 1 t ⩽ 60 h v 1 , z 1 1 , t + 104 h v 1 , z 1 2 , t + ⋯ + 216 h v 1 , z 1 5 , t + 248 h v 1 , z 1 6 , t , t = 1 ⋯ 10 A similar equation exists for the service of vessel v 2 in quay segment z 2 (terminal c 2 ). A variable u bc t is continuous non-negative. It is equal to the quantity of containers from batch b unloaded in terminal c from the source vehicle during period t . A variable h vz nt is binary. It indicates whether ship v is served in quay segment z by n quay cranes during period t . For all possible v , z , t , ∑ n h vz nt = 1 . 
 
The following equation and the objective give to variable m v 1 a value equal to the turnaround time of vessel v 1 (in this equation, the time of arrival r v 1 is equal to 1). ( t - r v 1 + 1 ) p v 1 , z 1 t ⩽ m v 1 , t = 1 ⋯ 10 Similar equations exist for vessel v 2 and train v 3 . A variable p vz t is binary. It indicates whether ship v is in quay segment z for period t . 
 
The equation below limits the number of containers handled on train v 3 in rail tracks z 3 (terminal c 1 ) during period 35, according to the capacity of the group of cranes. l b 2 , c 1 35 ⩽ 100 h v 3 , z 3 35 A variable l bc t is continuous non-negative. It is equal to the quantity of containers from batch b loaded in terminal c to the destination vehicle during period t . 
 
Batch b 1 is completely unloaded in terminal c 1 (a similar constraint exists for batch b 2 ): ∑ t = 1 10 u b 1 , c 1 t = 3 . 
 
Batch b 1 (respectively b 2 ) is completely loaded in terminal c 2 (resp. c 1 ): ∑ t = 30 31 l b 1 , c 2 t = 3 l b 2 , c 1 35 = 9 . 
 
The equations below are related to the conservation of the containers and to the transport of container batch b 1 from terminal c 1 to terminal c 2 . u b 1 , c 1 t + s b 1 , c 1 t - 1 - s b 1 , c 1 t - i b 1 , c 1 c 2 , t = 0 , t = 1 ⋯ 10 s b 1 , c 1 t - 1 - s b 1 , c 1 t - i b 1 , c 1 c 2 , t = 0 , t = 11 ⋯ 30 s b 1 , c 2 t - 1 + i b 1 , c 1 c 2 , t - 1 - s b 1 , c 2 t = 0 , t = 2 ⋯ 29 s b 1 , c 2 t - 1 + i b 1 , c 1 c 2 , t - 1 - l b 1 , c 2 t - s b 1 , c 2 t = 0 , t = 30 ⋯ 31 s b 1 , c 1 0 + s b 1 , c 2 1 = 0 u b 2 , c 1 t + s b 2 , c 1 t - 1 - s b 2 , c 1 t = 0 , t = 1 ⋯ 10 s b 2 , c 1 t - 1 - s b 2 , c 1 t = 0 , t = 11 ⋯ 34 s b 2 , c 1 34 - s b 2 , c 1 35 - l b 2 , c 1 35 = 0 s b 2 , c 1 0 = 0 A variable s bc t or i bc c ′ t is continuous non-negative. A variable s bc t is equal to the total quantity of containers from batch b stored in terminal c at the end of period t . A variable i bc c ′ t is equal to the quantity of containers sent from terminal c to terminal c ′ during period t . 
 
The remaining equations are technical and ensure the coherence of the formulation. The following equation links the values of variables h v 1 , z 1 n , t and p v 1 , z 1 t . h v 1 , z 1 1 , t + h v 1 , z 1 2 , t + ⋯ h v 1 , z 1 5 , t + h v 1 , z 1 6 , t = p v 1 , z 1 t , t = 1 ⋯ 10 A similar equation exists for vessel v 2 . 
 
The three equations below link the values of binary variables h ̲ v 1 , z 1 t , h ‾ v 1 , z 1 t and p v 1 , z 1 t . h ̲ v 1 , z 1 1 - p v 1 , z 1 1 = 0 h ̲ v 1 , z 1 t + p v 1 , z 1 t - 1 - p v 1 , z 1 t - h ‾ v 1 , z 1 t - 1 = 0 , t = 2 ⋯ 9 p v 1 , z 1 10 - h ‾ v 1 , z 1 10 = 0 Similar equations exist for vessel v 2 and train v 3 . A variable h ̲ vz t or h ‾ vz t is binary. A variable h ̲ vz t (respectively h ‾ v , z t ) indicates whether the service of ship or train v in quay segment or rail tracks z starts at the beginning of period t (resp. ends at the end of period t ). 
 
The generated mixed-integer linear program has 261 variables (154 continuous non-negative and 107 binary) and 155 linear constraints. 
A.3. Solution to the mixed-integer program 
 
The mixed-integer linear program for the toy instance is solved by CPLEX, which obtains the following optimal solution of value 146. 
 
Vessel v 1 is served in quay segment z 1 (terminal c 1 ) with one quay crane during period 1 , h v 1 , z 1 1 , 1 = 1 . Its service lasts one period and starts at its ready time, h ̲ v 1 , z 1 1 = h ‾ v 1 , z 1 1 = 1 , which makes its turnaround time equal to one period, m v 1 = 1 . Vessel v 2 is served in quay segment z 2 (terminal c 2 ) with one quay crane during period 30 , h v 2 , z 2 1 , 30 = 1 . Its service lasts one period and starts at its ready time, h ̲ v 2 , z 2 30 = h ‾ v 2 , z 2 30 = 1 , which makes its turnaround time equal to one period, m v 2 = 1 . Train v 3 is served in rail tracks z 3 (terminal c 1 ) during period 35 , h v 3 , z 3 35 = 1 . Its service lasts one period and starts at its ready time, h ̲ v 3 , z 3 35 = h ‾ v 3 , z 3 35 = 1 , which makes its turnaround time equal to one period, m v 3 = 1 . 
 
Container batch b 1 is fully unloaded in terminal c 1 at period 1 , u b 1 , c 1 1 = 3 . It is immediately transported to terminal c 2 , i b 1 , c 1 c 2 , 1 = 3 . It is stored in terminal c 2 from period 2 to period 29 , s b 1 , c 2 t = 3 , t = 2 , ⋯ , 29 . It is loaded in terminal c 2 at period 30, l b 1 , c 2 30 = 3 . Container batch b 2 is fully unloaded in terminal c 1 during period 1 , u b 2 , c 1 1 = 9 . It is stored in terminal c 1 from period 1 to period 34 , s b 2 , c 1 t = 9 , t = 1 , ⋯ , 34 . It is loaded in terminal c 1 at period 35, l b 2 , c 1 35 = 9 . 
 
Other variables are equal to 0. 
A.4. Relax-and-fix 
 
Clearly, there is no competition for resources between the mother vessel v 1 , the feeder vessel v 2 and the train v 3 . In any solution, they will be handled in different handling zones, with different cranes at different time periods. Moreover, operations on their container batches offer a large degree of freedom, as theses operations can take place during time windows of at least 20 periods for b 1 and 25 periods for b 2 , without impacting the value of the solution. 
 
The structural decomposition described in Section 5.1 is applied so that one subproblem for ship v 1 , one for ship v 2 and one for train v 3 are obtained and solved in that order. It amounts to a spatial and temporal decomposition. 
 
Subproblem 1 consists in the mixed integer linear program introduced in Appendix A.2 , for which the integrality constraints on the variables related to v 2 and v 3 are relaxed. It is related to ship v 1 , quay segment z 1 and time periods 1 to 10. Solving this subproblem allows to fix the values of the binary variables related to v 1 in the subsequent subproblems, h v 1 , z 1 1 , 1 = h ̲ v 1 , z 1 1 = h ‾ v 1 , z 1 1 = 1 . Its optimal value is 140.1. 
 
Subproblem 2 consists in the mixed integer linear program introduced in Appendix A.2 , for which the integrality constraints on the variables related to v 3 are relaxed and the variables related to v 1 are fixed at their computed values. It is related to ship v 2 , quay segment z 2 and time periods 30 to 31. Solving this subproblem allows to fix the values of the binary variables related to v 2 in the subsequent subproblems, h v 2 , z 2 1 , 30 = h ̲ v 2 , z 2 30 = h ‾ v 2 , z 2 30 = 1 . Its optimal value is 145. 
 
Subproblem 3 consists in the mixed integer linear program introduced in Appendix A.2 , for which the variables related to v 1 and v 2 are fixed at their computed values. It is related to train v 3 , group of rail tracks z 3 and period 35. Solving this last subproblem allows to fix the values of every remaining variables, binary and continuous non-negative. The same optimal solution as the one described in Appendix A.3 is obtained, with value 146. 
A.5. Restrict-and-fix 
 
As for relax-and-fix, the structural decomposition is applied so that one subproblem for the two ships v 1 and v 2 is obtained, as well as one subproblem for train v 3 . 
 
Subproblem 1 for ships is the first to be solved. It consists in the mixed integer linear program introduced in Appendix A.2 , in which all the variables and the constraints related to v 3 are removed. Relax-and-fix is used to solve it in large instances. Moreover, the weakly linking constraints can be kept inside the subproblem, simply removing variables related to v 3 . For instance, constraint of type (26) s b 2 , c 1 34 - s b 2 , c 1 35 - l b 2 , c 1 35 = 0 of the A.2 MIP becomes s b 2 , c 1 34 - s b 2 , c 1 35 = 0 : the amount of stored containers can not change between periods 34 and 35. Due to the characteristics of the instance, these constraints have little influence on the binary variables of subproblem 1. Here the solving is direct, and allows to fix the values of the binary variables related to v 1 and v 2 in the subsequent subproblem, h v 1 , z 1 1 , 1 = h ̲ v 1 , z 1 1 = h ‾ v 1 , z 1 1 = h v 2 , z 2 1 , 30 = h ̲ v 2 , z 2 30 = h ‾ v 2 , z 2 30 = 1 . Its optimal value is 145. 
 
Subproblem 2 for train is the same as SubProblem 3 for relax-and-fix. Solving this last subproblem allows to fix the values of every remaining variables, binary and continuous non-negative. The same optimal solution as the one described in Appendix A.3 is obtained, with value 146. 
Appendix B. Variables h ̲ vz t , h ‾ vz t and constraints (10)–(13) 
 
Recall that variables h ̲ vz t , p vz t , h ‾ vz t are binary. The constraints (10) , (11) , (12) , (13) are the following ones. (10) ⧹ h ‾ vz t + ∑ z ′ ∈ Z v ∑ t ′ = t + 1 min { t + τ z z ′ , d ‾ v } h ̲ v , z ′ t ′ ⩽ 1 ∀ v ∈ V A ⧹ V ̃ , ∀ z ∈ Z v , ∀ t ∈ T v (11) h ̲ vz r v - p vz r v = 0 ∀ v ∈ V A , ∀ z ∈ Z v (12) ⧹ h ̲ vz t + 1 + p vz t - p vz t + 1 - h ‾ vz t = 0 ∀ v ∈ V A , ∀ z ∈ Z v , ∀ t ∈ T v ⧹ { d ‾ v } (13) p vz d ‾ v - h ‾ vz d ‾ v = 0 ∀ v ∈ V A , ∀ z ∈ Z v 
 
property 
 
For all v ∈ V A , z ∈ Z v , if there exists t ∈ T v , such that p vz t = 1 and either t = r v or p vz t - 1 = 0 , then h ̲ vz t = 1 . 
 
Proof 
 
If t = r v and p vz t = 1 then h ̲ vz t = 1 because h ̲ vz t = p vz t = 1 is then the only possible solution to the corresponding constraint in (11) . For t > r v , if p vz t - 1 = 0 and p vz t = 1 , the only possible assignment of values to the remaining variables in the corresponding constraint in (12) is h ̲ vz t = 1 and h ‾ vz t - 1 = 0 . 
 
It can be similarly shown that, for all v ∈ V A , z ∈ Z v , if there exists t ∈ T v , such that p vz t = 1 and either t = d ‾ v or p vz t + 1 = 0 , then h ‾ vz t = 1 . 
 
Still, one can note that there exist six solutions to any of the constraints in (12) : 
 
1. 
 
    h ‾ vz t - 1 = p vz t - 1 = 0 and h ̲ vz t = p vz t = 1 , 
2. 
 
    h ‾ vz t - 1 = p vz t - 1 = 1 and h ̲ vz t = p vz t = 0 , 
3. 
 
    p vz t - 1 = p vz t = 1 and h ̲ vz t = h ‾ vz t - 1 = 0 , 
4. 
 
    h ̲ vz t = p vz t - 1 = p vz t = h ‾ vz t - 1 = 0 , 
5. 
 
    p vz t - 1 = p vz t = 0 and h ̲ vz t = h ‾ vz t - 1 = 1 , 
6. 
 
    h ̲ vz t = p vz t - 1 = p vz t = h ‾ vz t - 1 = 1 . 
 
But, as long as τ z z > 0 , the constraint in (10) forbids h ̲ vz t = h ‾ vz t - 1 = 1 . The four remaining solutions (1, 2, 3 and 4) are the ones of interest as they provide the required values to variables h ̲ vz t and h ‾ vz t . 
References 
 
Adams et al., 2004 
    Warren P. Adams, Richard J. Forrester, Fred W. Glover 
    Comparisons and enhancement strategies for linearizing mixed 0-1 quadratic programs 
    Discrete Optim., 1 (2) (2004), pp. 99-120 
    Article Download PDF View Record in Scopus Google Scholar 
Akartunali and Miller, 2009 
    Kerem Akartunali, Andrew J. Miller 
    A heuristic approach for big bucket multi-level production planning problems 
    Eur. J. Oper. Res., 193 (2) (2009), pp. 396-411 
    Article Download PDF View Record in Scopus Google Scholar 
Bierwirth and Meisel, 2015 
    Christian Bierwirth, Frank Meisel 
    A follow-up survey of berth allocation and quay crane scheduling problems in container terminals 
    Eur. J. Oper. Res., 244 (3) (2015), pp. 675-689 
    Article Download PDF View Record in Scopus Google Scholar 
Bierwirth and Meisel, 2010 
    Christian Bierwirth, Frank Meisel 
    A survey of berth allocation and quay crane scheduling problems in container terminals 
    Eur. J. Oper. Res., 202 (3) (2010), pp. 615-627 
    Article Download PDF View Record in Scopus Google Scholar 
Buhrkal et al., 2011 
    Katja Buhrkal, Sara Zuglian, Stefan Ropke, Jesper Larsen, Richard Lusby 
    Models for the discrete berth allocation problem: a computational comparison 
    Transport. Res. Part E: Logist. Transport. Rev., 47 (4) (2011), pp. 461-473 
    Article Download PDF View Record in Scopus Google Scholar 
Carlo et al., 2014 
    Hector J. Carlo, Iris F.A. Vis, Kees Jan Roodbergen 
    Storage yard operations in container terminals: literature overview, trends, and research directions 
    Eur. J. Oper. Res., 235 (2) (2014), pp. 412-430 
    Article Download PDF View Record in Scopus Google Scholar 
Carlo et al., 2014 
    Hector J. Carlo, Iris F.A. Vis, Kees Jan Roodbergen 
    Transport operations in container terminals: literature overview, trends, research directions and classification scheme 
    Eur. J. Oper. Res., 236 (1) (2014), pp. 1-13 
    Article Download PDF View Record in Scopus Google Scholar 
Carlo et al., 2015 
    Hector J. Carlo, Iris F.A. Vis, Kees Jan Roodbergen 
    Seaside operations in container terminals: literature overview, trends, and research directions 
    Flexible Services Manuf. J., 27 (2) (2015), pp. 224-262 
    View PDF 
    CrossRef View Record in Scopus Google Scholar 
Dillenberger et al., 1994 
    Christof Dillenberger, Laureano F. Escudero, Artur Wollensak, Wu Zhang 
    On practical resource allocation for production planning and scheduling with period overlapping setups 
    Eur. J. Oper. Res., 75 (2) (1994), pp. 275-286 
    Article Download PDF View Record in Scopus Google Scholar 
Duinkerken et al., 2007 
    Mark B. Duinkerken, Rommert Dekker, Stef T.G.L. Kurstjens, Jaap A. Ottjes, Nico P. Dellaert 
    Comparing transportation systems for inter-terminal transport at the Maasvlakte container terminals 
    KapHwan Kim, Hans-Otto Giinther (Eds.), Springer, Berlin, Heidelberg (2007), pp. 37-61 
    View PDF 
    CrossRef View Record in Scopus Google Scholar 
Ferreira et al., 2010 
    Deisemara Ferreira, Reinaldo Morabito, Socorro Rangel 
    Relax and fix heuristics to solve one-stage one-machine lot-scheduling models for small-scale soft drink plants 
    Comput. Oper. Res., 37 (4) (2010), pp. 684-691 
    Article Download PDF View Record in Scopus Google Scholar 
Garey and Johnson, 1979 
    M.R. Garey, D.S. Johnson 
    Computers and Intractability: A Guide to the Theory of NP-Completeness 
    WH Freeman & Co., San Francisco (1979) 
    Google Scholar 
Giallombardo et al., 2010 
    Giovanni Giallombardo, Luigi Moccia, Matteo Salani, Ilaria Vacca 
    Modeling and solving the tactical berth allocation problem 
    Transport. Res. Part B: Methodol., 44 (2) (2010), pp. 232-245 
    Article Download PDF View Record in Scopus Google Scholar 
Hartmann, 2004 
    Sonke Hartmann 
    Generating scenarios for simulation and optimization of container terminal logistics 
    OR Spectrum, 26 (2) (2004), pp. 171-192 
    View PDF 
    View Record in Scopus Google Scholar 
Heilig and Voß, 2016 
    Leonard Heilig, Stefan Voß 
    Inter-terminal transportation: an annotated bibliography and research agenda 
    Flexible Services Manuf. J. (2016), pp. 1-29 
    View Record in Scopus Google Scholar 
Hendriks et al., 2012 
    M.P.M. Hendriks, D. Armbruster, M. Laumanns, E. Lefeber, J.T. Udding 
    Strategic allocation of cyclically calling vessels for multi-terminal container operators 
    Flexible Services Manuf. J., 24 (3) (2012), pp. 248-273 
    View PDF 
    CrossRef View Record in Scopus Google Scholar 
Imai et al., 2007 
    Akio Imai, Etsuko Nishimura, Masahiro Hattori, Stratos Papadimitriou 
    Berth allocation at indented berths for mega-containerships 
    Eur. J. Oper. Res., 179 (2) (2007), pp. 579-593 
    Article Download PDF View Record in Scopus Google Scholar 
Imai et al., 2008 
    Akio Imai, Etsuko Nishimura, Stratos Papadimitriou 
    Berthing ships at a multi-user container terminal with a limited quay capacity 
    Transport. Res. Part E: Logist. Transport. Rev., 44 (1) (2008), pp. 136-151 
    Article Download PDF View Record in Scopus Google Scholar 
Imai et al., 2008 
    Akio Imai, Hsieh Chia Chen, Etsuko Nishimura, Stratos Papadimitriou 
    The simultaneous berth and quay crane allocation problem 
    Transport. Res. Part E: Logist. Transport. Rev., 44 (5) (2008), pp. 900-920 
    Article Download PDF View Record in Scopus Google Scholar 
Lee et al., 2012 
    Der-Horng Lee, Jian Gang Jin, Jiang Hang Chen 
    Terminal and yard allocation problem for a container transshipment hub with multiple terminals 
    Transport. Res. Part E: Logist. Transport. Rev., 48 (2) (2012), pp. 516-528 
    Article Download PDF View Record in Scopus Google Scholar 
Lenstra et al., 1977 
    J.K. Lenstra, A.H.G. Rinnooy Kan, P. Brucker 
    Complexity of machine scheduling problems 
    B.H. Korte, P.L. Hammer, E.L. Johnson, G.L. Nemhauser (Eds.), Studies in Integer Programming, Annals of Discrete Mathematics, vol. 1, Elsevier (1977), pp. 343-362 
    Article Download PDF View Record in Scopus Google Scholar 
Meisel and Bierwirth, 2009 
    Frank Meisel, Christian Bierwirth 
    Heuristics for the integration of crane productivity in the berth allocation problem 
    Transport. Res. Part E: Logist. Transport. Rev., 45 (1) (2009), pp. 196-209 
    Article Download PDF View Record in Scopus Google Scholar 
Ottjes et al., 2007 
    Jaap A. Ottjes, Hans P.M. Veeke, Mark B. Duinkerken, Joan C. Rijsenbrij, Gabriel Lodewijks 
    Simulation of a multiterminal system for container handling 
    Kap Hwan Kim, Hans-Otto Giinther (Eds.), Container Terminals and Cargo Systems: Design, Operations Management, and Logistics Control Issues, Springer, Berlin, Heidelberg (2007), pp. 15-36 
    View PDF 
    CrossRef View Record in Scopus Google Scholar 
Pochet and Wolsey, 2006 
    Yves Pochet, Laurence A. Wolsey 
    Production Planning by Mixed Integer Programming 
    Springer Science & Business Media (2006) 
    Google Scholar 
Schepler, 2015 
    Xavier Schepler 
    Solutions globales d’optimisation robuste pour la gestion dynamique de terminaux a conteneurs 
    PhD thesis 
    Universite du Havre (2015) 
    Google Scholar 
Stahlbock and Voß, 2008 
    Robert Stahlbock, Stefan Voß 
    Operations research at container terminals: a literature update 
    OR Spectrum, 30 (1) (2008), pp. 1-52 
    View PDF 
    View Record in Scopus Google Scholar 
Steenken et al., 2004 
    Dirk Steenken, Stefan Voß, Robert Stahlbock 
    Container terminal operation and operations research – a classification and literature review 
    OR Spectrum, 26 (1) (2004), pp. 3-49 
    View PDF 
    View Record in Scopus Google Scholar 
Tierney et al., 2014 
    Kevin Tierney, Stefan Voß, Robert Stahlbock 
    A mathematical model of inter-terminal transportation 
    Eur. J. Oper. Res., 235 (2) (2014), pp. 448-460 
    Maritime Logistics 
    Article Download PDF View Record in Scopus Google Scholar 
Tongzon and Heng, 2005 
    Jose Tongzon, Wu Heng 
    Port privatization, efficiency and competitiveness: some empirical evidence from container ports (terminals) 
    Transport. Res. Part A: Policy Pract., 39 (5) (2005), pp. 405-424 
    Article Download PDF View Record in Scopus Google Scholar 
Vacca et al., 2013 
    Ilaria Vacca, Matteo Salani, Michel Bierlaire 
    An exact algorithm for the integrated planning of berth allocation and quay crane assignment 
    Transport. Sci., 47 (2) (2013), pp. 148-161 
    View PDF 
    CrossRef View Record in Scopus Google Scholar 
Wiegmans et al., 2008 
    Bart W. Wiegmans, Anthony Van Der Hoest, Theo E. Notteboom 
    Port and terminal selection by deep-sea container operators 
    Maritime Policy Manage., 35 (6) (2008), pp. 517-534 
    CrossRef View Record in Scopus Google Scholar 
Zehendner and Feillet, 2014 
    Elisabeth Zehendner, Dominique Feillet 
    Benefits of a truck appointment system on the service quality of inland transport modes at a multimodal container terminal 
    Eur. J. Oper. Res., 235 (2) (2014), pp. 461-469 
    Article Download PDF View Record in Scopus Google Scholar 
 
View Abstract 
© 2016 Elsevier Ltd. All rights reserved. 
Recommended articles 
 
    A comparison of different container sorting systems in modern rail-rail transshipment yards 
    Transportation Research Part C: Emerging Technologies, Volume 82, 2017, pp. 63-87 
    Download PDF View details 
    A Set-Partitioning-based model for the Berth Allocation Problem under Time-Dependent Limitations 
    European Journal of Operational Research, Volume 250, Issue 3, 2016, pp. 1001-1012 
    Download PDF View details 
    Exact and heuristic methods to solve the berth allocation problem in bulk ports 
    Transportation Research Part E: Logistics and Transportation Review, Volume 54, 2013, pp. 14-31 
    Download PDF View details 
 
1 2 Next 
Citing articles (22) 
Article Metrics 
Citations 
 
    Citation Indexes: 22 
 
Captures 
 
    Exports-Saves: 4 
    Readers: 71 
 
plumX logo 
View details 
Elsevier logo 
 
    About ScienceDirect 
    Remote access 
    Shopping cart 
    Advertise 
    Contact and support 
    Terms and conditions 
    Privacy policy 
 
We use cookies to help provide and enhance our service and tailor content and ads. By continuing you agree to the use of cookies . 
 
Copyright © 2021 Elsevier B.V. or its licensors or contributors. ScienceDirect ® is a registered trademark of Elsevier B.V. 
 
ScienceDirect ® is a registered trademark of Elsevier B.V. 
RELX group home page 
