Global planning in a multi-terminal and multi-modal maritime container port
Xavier Schepler, Stefan Balev, Sophie Michel, Eric Sanlaville
To cite this version:
Xavier Schepler, Stefan Balev, Sophie Michel, Eric Sanlaville. Global planning in a multi-terminal and multi-modal maritime container port. Transportation Research Part E: Logistics and Transportation Review, Elsevier, 2017, 100, pp.38-62. ￿10.1016/j.tre.2016.12.002￿. ￿hal-02112073￿

HAL Id: hal-02112073 https://hal-normandie-univ.archives-ouvertes.fr/hal-02112073
Submitted on 13 May 2019

HAL is a multi-disciplinary open access archive for the deposit and dissemination of scientific research documents, whether they are published or not. The documents may come from teaching and research institutions in France or abroad, or from public or private research centers.

L’archive ouverte pluridisciplinaire HAL, est destinée au dépôt et à la diffusion de documents scientifiques de niveau recherche, publiés ou non, émanant des établissements d’enseignement et de recherche français ou étrangers, des laboratoires publics ou privés.

Global planning in a multi-terminal and multi-modal
maritime container port
Xavier Schepler ∗1,2,3, Stefan Balev2, Sophie Michel3, and E´ric Sanlaville2
1E´cole des Mines de Saint-E´tienne, LIMOS UMR CNRS 6158, France 2Normandie Univ, UNIHAVRE, UNIROUEN, INSA Rouen, LITIS, 76600 Le
Havre, France 3Normandie Univ, UNIHAVRE, LMAH, 76600 Le Havre, France
Abstract This paper introduces an optimization model of a multi-terminal, multi-modal maritime container port, such as the ones in the European northern range. The decisions concern the scheduling of ships, trains and trucks on terminals, while limiting inter-terminal transport of containers and minimizing weighted turnaround time. Heuristics based on the decomposition of the resulting mixed-integer program are proposed and tested on realistic generated instances with up to four terminals. The eﬃciency of the restrict-and-ﬁx heuristic allows to investigate the impact of a global management on port’s performance: an average improvement of 5% was observed. Keywords: maritime container port management ; multi-terminal optimization ; mixed-integer programming ; structural decomposition ; mixed-integer programming based heuristic
Introduction
Maritime transport is the backbone of international trade. In recent decades, new container vessels were regularly deployed by liner shipping companies to meet the growing demand for container transport: from 84.6 millions Twenty-foot Equivalent Units (TEU) in 1990, world traﬃc surged up to 602 millions in 2012. Container traﬃc has been simultaneously evolving. Firstly, container shipping companies invested in larger and larger vessels, to reduce costs at sea per TEU. In 1980, the largest container vessels had a transport capacity of 5000 TEU, which raised up in 2016 to 19000 TEU. Secondly, container shipping companies adopted the huband-spoke paradigm. In liner hub-and-spoke networks, large mother vessels transport containers between far hub ports, while smaller feeder vessels ensure the connection between hub and nearby non-hub ports. Lastly, due to the environmental and social beneﬁts of rail and inland-waterway based transport compared to road, European countries started to enforce policies to induce a
∗Corresponding author: xavier.schepler@gmail.com, +33 6 32 32 06 35
1

modal shift. Bigger shares of rail and inland-waterway based hinterland container transport are expected in the coming years in Europe.
In the European northern range, coastal alignment and geographic proximity generate a strong inter-port competition for hinterland market. Some key port competitive factors have been identiﬁed in the literature, notably vessel turnaround time (see for instance Tongzon and Heng 2005) and quality of hinterland connection (see Wiegmans et al. 2008). In recent decades, in parallel to the container traﬃc evolution and within this strong inter-port competition, huge investments were made in container port infrastructure. New container terminals were built, such as deep-sea terminals as well as rail and inland-waterway terminals. Within a multi-terminal port, transport facilities provide ITT (Inter-Terminal Transport of containers).
In the port of Rotterdam, the largest hub of the European northern range, ITT is expected to become substantial in the coming years: ﬁrstly because it is required, for example between maritime terminals and rail and inland-waterway terminals, and secondly because it increases port’s performance. This study provides tools to evaluate how much a global management of terminals and cooperation between them can improve that performance. Clearly, scheduling ships, trains and trucks simultaneously on multiple terminals allows to make a better global usage of resources. This way, in case of congestion of a terminal, some ships, trains and trucks may be redirected to other terminals. Moreover, collecting and gathering containers may reduce the number of stops at terminals for feeder vessels, inland-waterway barges and trains, when necessary. These beneﬁts of cooperation between terminals come at the cost of ITT and of a more complex system, harder to manage.
Container terminal operations have received signiﬁcant attention in the literature in operational research and logistics in recent years (see the surveys by Bierwirth and Meisel 2010; Carlo et al. 2014a; Carlo et al. 2014b; Bierwirth and Meisel 2015; Carlo et al. 2015; Heilig and Voß 2016). To the best of our knowledge, only the studies by Hendriks et al. 2012 and Lee et al. 2012 propose optimization models for the management of multi-terminal systems. Hendriks et al. 2012 consider the strategic assignment of liner services to terminals in the port of Antwerp for the multi-terminal operator PSA Antwerp. Lee et al. 2012 focus on storage space allocation to containers in the port of Singapore, a vessel-to-vessel transshipment hub, where storage space is the critical resource. These two decision making problems aim notably at minimizing costs related to ITT. Related work about operations in container terminals is reviewed in section 2.
In contrast to these two studies, this paper introduces an optimization model of a multiterminal and multi-modal maritime container port as well as three solving methods, which can support port authorities and multi-terminal operators in their management. The objective is to minimize weighted turnaround time of ships and trains, which operate on ﬁxed timetables, contrary to trucks. An assumption is the use of a truck appointment system. These systems are already in service in modern container ports and aim at reducing truck turnaround time and road congestion at port’s entrance.
The key decisions of the model are the choices of container terminals at which feeder vessels, inland-waterway barges will call and trains will stop. This determines where to unload and load containers, hence the required ITT. The model provides the berthing positions and time windows to serve ships, the rail tracks and time windows to serve trains as well as the time windows for truck appointment. The goal is to improve port performance by coordinating operations between terminals, while limiting ITT. Thus, this paper oﬀers the following novel contributions:
1. the ﬁrst optimization model to provide global planning in a multi-terminal and multi-modal maritime container port, described in section 1,
2. a time-indexed formulation as a mixed-integer linear program introduced in section 3, which can be used with a state-of-the-art solver to tackle realistic small to mid-sized instances,
2

3. two mixed-integer programming based heuristics presented in section 4, which obtain nearoptimal solutions in short amounts of time, using a structural decomposition of the problem,
4. numerical experiments conducted in section 5 with realistic generated instances involving up to four terminals, to evaluate the proposed solving methods and to quantify the impact of a global management on port’s performance.
The last section concludes the paper and discusses directions for future work.
1 Model’s description
In this section, we describe an optimization model of a multi-terminal and multi-modal maritime container port, such as the ones in the European northern range. It is a tactical multi-periodic model, which provides baselines for operational planning. Two assumptions are made on the management of trucks. As mentioned in the introduction, the ﬁrst one is the use of a truck appointment system, which allows to set truck arrivals according to the solution of the model. The second assumption is that one truck transports one container, either an import one or an export one. These assumptions allow us to group trucks, for purpose of tractability.
In this model, at least one berthing position and the corresponding periods are allocated to each ship: mother or feeder vessel, inland-waterway barge. In general, a mother vessel stops at one terminal, but a feeder vessel or an inland-waterway barge is allowed to stop at multiple terminals. Rail tracks are allocated to trains over time. Trucks are considered by groups, for example grouped by source or destination vehicle of their containers. Hereafter, the word vehicle will denote a ship, a train, or a group of trucks. Each vehicle has a ready time and a deadline. For a ship or a train, the ready time is the time of arrival and the deadline is the latest possible time of presence. For a group of trucks, the ready time and the deadline provide the time window within which its trucks may be given appointment. A ship or a train also has a weight, which depends on its priority. This priority is usually correlated to the transport capacity of the ship or the train, but may also be linked to speciﬁc requirements. The objective is to minimize weighted turnaround time.
The chosen level of granularity for containers is the batch. A batch corresponds to a transshipment of containers. It is the set of all containers that are unloaded from one given vehicle and later loaded to another vehicle. Using batches instead of container units allows to signiﬁcantly diminish the model’s size and makes it tractable. After a container is unloaded from its source vehicle, it is usually transported inside the yard of the terminal to the storage area. It may remain stacked there, or it may be transported to another terminal. It is then loaded to its destination vehicle, generally several days after its unloading. A solution provides the terminals to unload, load and store each batch, as well as the required ITT. Allocating precise storage locations to containers inside the yard of each terminal is out of the scope of this paper, but their storage capacities are part of the model’s data.
Two main resources are considered for handling containers on vehicles: handling zones and groups of cranes. Handling zones are areas where containers are handled on ships and trains: quay segments and groups of rail tracks. Each quay of a terminal is partitioned into a variable number of quay segments. A partition of each quay into berths may be used in practice and it may provide a basis to choose the partition into quay segments. More details about berth allocation are given in section 3.2.3. A group of rail tracks contains all the adjacent tracks served by the same cranes. Handling zones for trucks are used only for modeling purpose, since allocation of space to trucks is usually not an issue.
Groups of cranes are the other main resources. Cranes operating on vehicles are generally either rail mounted or rubber tired and therefore mobile. A group of quay cranes is characterized
3

Quay segment z ZA (handling zone),
capacity: z meters

Group of cranes g GA for ships, count: g = 9 cranes, capacity: gn containers per period, for 1  n  g assigned cranes

Figure 1: Handling zones and group of cranes for ships
by its number of quay cranes and by their marginal productivity, investigated by Meisel and Bierwirth 2009. For example, assume that one quay crane alone can handle on average 25 containers per hour. Then, four quay cranes allocated to the same ship will probably handle no more than 75 containers per hour, because of interferences among them. Hence, the maximum number of containers handled in one period by a given number of quay cranes is part of the model’s data. Note that, the number of quay cranes allocated to a ship may vary from one period to another. Since cranes for trains or for trucks operate on several vehicles within short time periods with fewer interferences among them, a group of these cranes has only one characteristic: a maximum number of containers it can handle per period.
Handling zones and group of cranes for ships are represented in ﬁgure 1. One group of nine quay cranes is operating on three ships in two quay segments. A handling zone and a group of cranes for trains are illustrated in ﬁgure 2. Three gantry cranes are operating on trains. One group of cranes for trucks is represented in ﬁgure 3. In this example, it is composed of ten straddle carriers available for unloading or loading the trucks. The notations used in these ﬁgures are deﬁned in section 3.1
A solution to a small instance of this model is partially illustrated in ﬁgure 4, with a period length of two hours. Some containers unloaded from mother vessel v1 in terminal c1 have to be transported to terminal c2, to be loaded to feeder vessel v2. One possible reason which could have prohibited feeder vessel v2 to stop at terminal c1 is the unavailability of resources in this terminal for its service.
Constraints related to container handling are essentially the following ones. They are illustrated using ﬁgure 4. Batch b1, containing three containers, is unloaded from mother vessel v1. This unloading requires that at least one quay crane has been allocated to this vessel and that the total quantity of containers processed in this terminal doesn’t exceed a given limit. Then, batch b1 is transported to terminal c2, under several additional constraints, related to ITT. The transport of containers from terminal c1 to terminal c2 requires a ﬁxed number of periods. There is a given limit on the number of containers sent per period from terminal c1 to terminal c2. There is also a given limit on the total quantity of ITT in the port during the whole planning horizon. Then, batch b1 is stored in the yard of terminal c2. The number of twenty-foot equivalent units stored in a terminal must always remain under a given limit. Finally, batch b1 is loaded to the feeder vessel v2 in terminal c2. As the required resources were available in terminal
4

Group of rail tracks z  ZB (handling zone),
capacity: z rail tracks

Group of cranes for trains g  GB, capacity: g containers per period
Train

Figure 2: Handling zone and group of cranes for trains

Group of cranes for trucks g GC, capacity: g containers per period Truck
Figure 3: Group of cranes for trucks
5

c2, this coordination of operations between terminals with ITT allowed to serve feeder vessel v2 in time. The mathematical formulation corresponding to the management of batches b1 and b2 is described in appendix A. Of course, operations involving many more vehicles and container batches have to be considered at the same time.
The limits on ITT may model either physical limitations, or ﬁnancial ones: terminal operators wishing to limit ITT to reduce operational costs. Our study enlightens this trade-oﬀ by computing the global performance gain according to the level of ITT allowed as it is done in section 5.
6

Trucks

TERMINAL c1

Container batch b2

Mother vessel v1, t=1 to 10

Feeder vessel, t=42 to 44

Train v3, t=35

unloaded

Container batch b1

TERMINAL c2

7

Period length: 2 hours

Feeder vessel v2, t=30 to 31

loaded

stored

transferred
Inter-terminal transport of containers
Figure 4: Multi-terminal management

2 Related work
Container terminal operations have received signiﬁcant attention in the literature in operational research and logistics. For an overview of container terminal operations, the reader is redirected to the reviews by Steenken et al. 2004; Stahlbock and Voß 2008. Work related to seaside operations was recently reviewed by Bierwirth and Meisel 2010; Bierwirth and Meisel 2015; Carlo et al. 2015, transport operations by Carlo et al. 2014b and storage operations by Carlo et al. 2014a. A paper by Heilig and Voß 2016 reviews studies related to ITT (Inter-Terminal Transport of containers).
Among all the problems identiﬁed in this literature, the BAP (Berth Allocation Problem) is arguably the most critical and certainly the most studied. The BAP is about allocating berthing positions and time windows to incoming ships.
A problem closely related to the BAP is the quay crane assignment problem, which consists in allocating quay cranes to ships over time. The integration of the quay crane assignment problem into the BAP is studied by Imai et al. 2008b; Meisel and Bierwirth 2009; Giallombardo et al. 2010; Vacca et al. 2013. The work by Vacca et al. 2013 provides results which conﬁrm the added value of integration in terms of cost reduction and eﬃcient use of resources, especially in the case of congestion.
Most of the studies about the BAP are restricted to a single terminal. Indeed, up to recently, each terminal in a port was usually run by a diﬀerent operator and terminals were competing against each other. Nowadays, in an increasing number of ports, multiple terminals are managed by the same operator. Hence, the BAP should no longer be considered for individual terminals. Still, there exists only a few papers considering the BAP for multiple terminals.
One of them deals with the strategic BAP for multiple terminals and considers quay crane allocation and ITT. The BAP studied by Hendriks et al. 2012 consists in spreading liner services over multiple terminals managed by the same operator. The decisions are to assign a terminal and a time window to each service. The objectives are to balance quay crane workload among terminals and to minimize ITT. A solution approach based on mixed-integer programming is introduced. A practical case study is performed for the terminal operator PSA Antwerp which manages multiple terminals in the port of Antwerp. Computational results show that relatively small modiﬁcations of existing schedules can signiﬁcantly reduce required quay crane capacities and ITT.
Another paper deals with an operational BAP involving two terminals. The objective of the BAP studied by Imai et al. 2008a is to minimize turnaround time for one terminal. Then, ships that are expected to wait more than given limits are re-routed to a nearby terminal. The requirement of ITT and the incurred extra costs are mentioned, but not taken into account in the model.
A problem similar to the operational BAP for multiple terminals is studied by Lee et al. 2012. This problem is about seaborne transshipments in a multi-terminal port where storage space is the critical resource. Terminal and storage allocations are planned for groups of containers, which indirectly assigns visiting terminals to vessels. The objective is to minimize costs related to intraterminal transport of containers and to ITT. A matheuristic combining linear programming and tabu search is introduced. Computational results show the beneﬁts of the optimization model over current practices.
Some papers focus on ITT, mainly at the strategic level. The work by Tierney et al. 2014 proposes a model to analyze the impact on ITT of new infrastructure, placement of terminals and investment in vehicles. The proposed integer program can be used either at a strategic level or at an operational level, to minimize delays. Other studies, such as the ones by Duinkerken et al. 2007; Ottjes et al. 2007, provide simulation models of multi-terminal systems and ITT, to
8

support investment decisions. The literature about operations related to container trains focuses on either rail-rail or rail-
road terminals and is not relevant to this study. However, several studies are dedicated to the management of truck arrivals in maritime container ports. Contrary to container ships and trains which operate on ﬁxed timetables, trucks may be given appointments. Truck appointment optimization is studied by Zehendner and Feillet 2014, to support the negotiation process between drayage companies and terminal operators. The use of a truck appointment system is an assumption of the model that we propose. These systems are in use in most modern maritime container ports. The proposed model is formulated in the next section.
3 Mathematical formulation
Formulating the model described in section 1 requires the introduction of many indices, sets, parameters, variables and constraints. A toy example of this formulation and its solution are provided in appendix A.
3.1 Parameters
Indices are described in table 1. Sets are introduced in table 2. General parameters are presented in table 3. Parameters for ships, trains and trucks are respectively introduced in tables 4, 5 and 6. Parameters for container batches are described in table 7. Parameters for ITT are presented in table 8.
Table 1: Indices c container terminal g group of cranes n number of cranes, for a group of quay cranes for ships z handling zone: quay segment, rail tracks v vehicle: ship, train or group of trucks b container batch t time period
9

Table 2: Sets

C container terminals

Ga groups of cranes for ships Gb groups of cranes for trains Gc groups of cranes for trucks

Za quay segments Zb groups of rail tracks Zc handling zones for trucks - used for modeling purpose Z handling zones, Z = Za ∪ Zb ∪ Zc

Va
Vb
Vc
V Zv 1 Cv 1 V˜ 2

ships trains groups of trucks vehicles, V = Va ∪ Vb ∪ Vc handling zones where vehicle v can be handled, v ∈ V terminals having at least one handling zone where vehicle v can be handled, v ∈ V ships and trains that have to be continuously handled in one location

B container batches Buv container batches to be unloaded from vehicle v ∈ V Blv container batches to be loaded to vehicle v ∈ V

couples of terminals between which container batch b can be transported, b ∈ B:

Ib

Ib = (c, c ) | (c, c ) ∈ (Cαb × Cωb ), c = c

Tv possible periods of presence of vehicle v in port, v ∈ V: Tv = rv, dv

T

periods in planning horizon: T = min{rv}, max{dv}

v∈V

v∈V

Tb possible periods of presence of container batch b in port, b ∈ B: Tb = rαb , dωb

Tub possible periods for unloading container batch b ∈ B: Tub = rαb , dαb

Tlb possible periods for loading container batch b ∈ B: Tlb = rωb , dωb

1 These sets allow to control access of vehicles to terminals, hence to take ﬁxed assignment of

vehicles to terminals into account.

2 For example, mother vessels are usually assigned to one terminal and served continuously in

one location.

Table 3: General parameters
Θc maximum quantity of processed containers in terminal c per period, c ∈ C Ξc storage capacity of terminal c ∈ C
γz group of cranes operating in handling zone z ∈ Z ζz terminal to which handling zone z belongs, z ∈ Z rv 1 period whose beginning is the ready time of vehicle v ∈ V dv 1 period whose end is the deadline of vehicle v ∈ V δv container storage space left on vehicle v when it arrives in port, v ∈ V
1 For a ship or a train, the ready time and the deadline are respectively the time of arrival and the latest possible time of departure. For a group of trucks, they give the time window within which its trucks may be given appointment.

10

Table 4: Parameters for ships

ηg number of quay cranes in group g ∈ Ga

ρng

maximum quantity of containers handled per period by n quay cranes from group g allocated to the same ship, g ∈ Ga, n ∈ 1, ηg

ηz

maximum number of quay cranes from group γz that can operate simultaneously in quay segment z ∈ Za

κz length of quay segment z ∈ Za

wv weight of ship v ∈ Va

ηv maximum number of quay cranes that can be allocated to ship v ∈ Va

ηvz

maximum number of quay cranes that can be allocated to ship v in quay segment z, v ∈ Va, z ∈ (Za ∩ Zv): ηvz = min{ηv, ηz, ηγz }

κv length of ship v ∈ Va

τzz

number of periods required for a ship to move from quay segment z to quay segment z , z ∈ Za, z ∈ Za

Table 5: Parameters for trains

ρg maximum quantity of containers handled per period by group of cranes g ∈ Gb κz number of tracks in rail tracks z ∈ Zb

wv weight of train v ∈ Vb

τzz

number of periods required for a train to move from rail tracks z to rail tracks z , z ∈ Zb, z ∈ Zb

Table 6: Parameters for trucks ρg maximum quantity of containers handled per period by group of cranes g ∈ Gc

Table 7: Parameters for container batches
αb vehicle from which container batch b is unloaded, b ∈ B ωb vehicle to which container batch b is loaded, b ∈ B ηb number of containers in batch b ∈ B η˜b 1 number of twenty-foot equivalent units in container batch b ∈ B
1 Sizes of containers (40 foot, 20 foot, ...) are considered only for storage capacities of terminals and for transport capacities of vehicles.

Table 8: Parameters for inter-terminal transport of containers

ηcc

maximum quantity of containers sent from terminal c to terminal c per period, c ∈ C, c ∈ C

τcc

number of periods between sending of containers from terminal c and reception at terminal c , c ∈ C, c ∈ C

Φ

maximum quantity of containers transported between all terminals during planning horizon

3.2 Mixed-integer programming formulation
We formulate the problem as a mixed-integer linear program. The formulation is of the timeindexed type, which necessitates a large number of variables and constraints, but which has been proven quite successful with many planning problems, for example by Buhrkal et al. 2011 with the berth allocation problem.

11

In order to simplify the presentation, containers in terminals before and after the planning horizon are omitted here. The formulation used for numerical experiments includes them, but requires additional parameters and additional constraints, that can be easily deduced from the ones given below.
3.2.1 Variables
The decision variables are given in tables 9, 10 and are related respectively to vehicles and container batches.

Table 9: Variables for ships, trains and groups of trucks

mv ∈ N 1

turnaround time of ship or train v ∈ (Va ∪ Vb)

hnvzt ∈ {0, 1} ptvz ∈ {0, 1} 2

whether ship v is in quay segment z with n assigned quay cranes for period t,

v ∈ Va, z ∈ Zv, n ∈ 0, ηvz , t ∈ Tv

ptvz =

ηvz n=0

hnvzt

whether

ship

v

is

in

quay

segment

z

for

period

t,

v

∈

Va,

z ∈ Zv, t ∈ Tv

htvz ∈ {0, 1} whether train v is in rail tracks z for period t, v ∈ Vb, z ∈ Zv, t ∈ Tv

htvz ∈ {0, 1} 3

whether handling of ship or train v in handling zone z starts at the beginning of period t, v ∈ (Va ∪ Vb), z ∈ Zv, t ∈ Tv

htvz ∈ {0, 1} 3

whether handling of ship or train v in handling zone z ends at the end of period t, v ∈ (Va ∪ Vb), z ∈ Zv, t ∈ Tv

otvz ∈ R+

quantity of containers handled for train or group of trucks v in handling zone z at period t, v ∈ (Vb ∪ Vc), z ∈ Zv, t ∈ Tv

1 The integrality and non-negativity constraints on variables mv can be relaxed, since the

objective and the constraints (7) ensure that these variables will have non-negative integer

values.

2 These variables are introduced only to simplify the formulation.

3 The service of a ship or train may involve several handling zones and several disjoint sets of

consecutive

periods.

Variables

htvz

and

t
hvz

indicate

the

ﬁrst

and

last

periods

of

each

of

these

sets.

Table 10: Variables for container batches

ucb ∈ {0, 1} lbc ∈ {0, 1} utbc ∈ R+ 1 lbtc ∈ R+ 1 stbc ∈ R+ 1

whether container batch b is unloaded in terminal c, b ∈ B, c ∈ Cαb whether container batch b is loaded in terminal c, b ∈ B, c ∈ Cωb quantity of containers from batch b unloaded in terminal c during period t,
b ∈ B, c ∈ Cαb , t ∈ Tub quantity of containers from batch b loaded in terminal c during period t, b ∈ B, c ∈ Cωb , t ∈ Tlb total quantity of containers from batch b stored in terminal c at the end of
period t, b ∈ B, c ∈ (Cαb ∪ Cωb ), t ∈ Tb quantity of containers from batch b sent from terminal c to terminal c during

icbct ∈ R+ 1 period t, available in c at the beginning of period t + τcc , b ∈ B, (c, c ) ∈ Ib, t ∈ Tb, t + τcc ∈ Tb

1 Variables related to quantities of containers are continuous since they denote operation pro-

gresses and not exact numbers of containers.

12

Space
400

Barge, length: 100, duration: 3

Feeder

300

vessel, length: 200, Mother

duration: 1 vessel,

length: 300,

200 Mother

duration: >1

vessel, length: 300,

Barge, length: 100, duration: 3

duration: >1
100

Barge, length: 100, duration: 3

1

2

3

4

5

Feeder vessel,
length: 200,
duration: 1

Time

Figure 5: The necessary condition for mooring ships is not suﬃcient if more than two ships may moor simultaneously in the same segment

3.2.2 Objective The objective is to minimize weighted turnaround time:

minimize

(wv · mv).

v∈(Va∪Vb)

3.2.3 Constraints on ships
Constraints on ships are mainly related to berth allocation and to quay crane allocation. The study by Bierwirth and Meisel 2010 report three types of quay layout: discrete, continuous and hybrid. With a discrete quay layout, one berth can accommodate only one ship at a time. With a continuous quay layout, vessels can berth anywhere along the quay. We use a hybrid quay layout, where each quay is viewed as a ﬁnite set of quay segments and each segment can accommodate simultaneously at most two ships, as illustrated in ﬁgure 1.
This makes the condition “at each period, the sum of the lengths of the ships to moor is lower than or equal to the length of the quay segment in which they have to be moored”, not only necessary but also suﬃcient to eﬀectively moor the ships. Allowing three ships or more simultaneously in a quay segment would make the condition insuﬃcient, as demonstrated in ﬁgure 5: the sum of the lengths of the vessels is always lesser than or equal to the total length of the quay segment, but there is no way to schedule the seventh vessel on the quay segment. This layout is also used by Imai et al. 2007. The constraints on ships are the following ones.

13

(κv · ptvz) ≤ κz ∀z ∈ Za, ∀t ∈ T

(1)

v∈Va: z∈Zv ,t∈Tv

ptvz ≤ 2 ∀z ∈ Za, ∀t ∈ T

(2)

v∈Va: z∈Zv ,t∈Tv

ηvz

(n · hnvzt) ≤ ηz ∀z ∈ Za, ∀t ∈ T

(3)

v∈Va: n=1 z∈Zv ,t∈Tv

ηvz

(n · hnvzt) ≤ ηg ∀g ∈ Ga, ∀t ∈ T

(4)

z∈Za: v∈Va: n=1 γz =g z∈Zv ,t∈Tv

ηvz

utbc +

lbtc ≤

(ρnγz · hnvzt) ∀v ∈ Va, ∀c ∈ Cv, ∀t ∈ Tv

(5)

b∈Buv : t∈Tub

b∈Blv : t∈Tlb

z∈Zv : n=1 c=ζz

ptvz ≤ 1 ∀v ∈ Va, ∀t ∈ Tv

(6)

z∈Zv

mv ≥ (t − rv + 1) ·

ptvz ∀v ∈ Va, ∀t ∈ rv, dv

z∈Zv

−
b∈Buv c∈Cv t ∈Tv : t ≤t

η˜b ηb

· utbc

+
b∈Blv c∈Cv t ∈Tv : t ≤t

η˜b ηb

· lbtc

≤ δv

∀v ∈ Va, ∀t ∈ Tv

htvz = 1 ∀v ∈ (Va ∩ V˜ )
z∈Zv t∈Tv

htvz +

min{t+τzz ,dv }
htv,z ≤ 1 ∀v ∈ Va \ V˜ , ∀z ∈ Zv, ∀t ∈ Tv

z ∈Zv t =t+1

hrvvz − prvvz = 0 ∀v ∈ Va, ∀z ∈ Zv

htv+z 1 + ptvz − ptv+z 1 − htvz = 0 ∀v ∈ Va, ∀z ∈ Zv, ∀t ∈ Tv \ {dv}

pdvvz − hdvvz = 0

ηvz

ptvz =

hnvzt

n=0

∀v ∈ Va, ∀z ∈ Zv ∀v ∈ Va, ∀z ∈ Zv, ∀t ∈ Tv

(7) (8)
(9)
(10) (11) (12) (13) (14)

Constraints (1) ensure that the sum of the lengths of the ships in a quay segment does not exceed its length. Constraints (2) enforce that a quay segment can accommodate two ships. Constraints (3) limit the number of quay cranes in a quay segment. Constraints (4) ensure that a group of quay cranes assigns no more cranes than it has. Constraints (5) limit the quantity of containers handled on a ship, according to the speed of the cranes assigned to it. Constraints (6) ensure that a ship is present in at most one quay segment. Constraints (7) and the objective function give to a variable mv a value equal to the turnaround time of ship v. Constraints (8) enforce that no more containers are loaded on a ship than its transport capacity allows, taking into

14

account sizes of containers. Constraints (9) ensure that a ship v ∈ V˜ is handled in only one quay

segment. Constraints (10) enforce that moving between two quay segments requires a number

of periods. Technical constraints (11)-(13) together with constraints (10) link values of variables

htvz, ptvz

and

t
hvz

(the

proof

is

provided

in

appendix

B).

Technical

constraints

(14)

link

values

of

variables ptvz and hnvzt.

3.2.4 Constraints on trains The constraints on trains are the following ones.

htvz ≤ κz
v∈Vb: z∈Zv ,t∈Tv

∀z ∈ Zb, ∀t ∈ T

otvz ≤ ρg ∀g ∈ Gb, ∀t ∈ T
z∈Zb: v∈Vb: γz =g z∈Zv ,t∈Tv
otvz ≤ ργz · htvz ∀v ∈ Vb, ∀z ∈ Zv, ∀t ∈ Tv

utbc +

lbtc =

otvz

b∈Buv : t∈Tub

b∈Blv : t∈Tlb

z∈Zv : c=ζz

∀v ∈ Vb, ∀c ∈ Cv, ∀t ∈ Tv

(15)
(16) (17) (18)

Constraints (15) limit the number of trains in rail tracks. Constraints (16) enforce that the quantity of containers handled by a group of cranes doesn’t exceed its limit. Constraints (17) ensure that a train is in rail tracks when containers are handled. Constraints (18) limit the quantity of containers handled per period. There are also other constraints on trains. They are similar to constraints (6)-(13) and obtained by substituting in these constraints the index of the vehicle type a (ships) by b (trains) as well as variables ptvz by variables htvz. Hence, these last constraints are not rewritten.

3.2.5 Constraints on groups of trucks
They are similar to constraints (8), (16) and (18) and obtained by substituting in these constraints the index of the vehicle type a (ships) by c (trucks) in (8) as well as the index of the vehicle type b (trains) by c (trucks) in (16) and (18). These constraints are not rewritten.

3.2.6 Constraints on container batches The constraints on container batches are the following ones.

ucb = 1 ∀v ∈ V, ∀b ∈ Buv
c∈Cαb
utbc = ηb · ucb ∀v ∈ V, ∀b ∈ Buv, ∀c ∈ Cv
t∈Tub
lbc = 1 ∀v ∈ V, ∀b ∈ Blv
c∈Cωb
lbtc = ηb · lbc ∀v ∈ V, ∀b ∈ Blv, ∀c ∈ Cv
t∈Tlb

(19) (20) (21) (22)

15

utbc +

lbtc +

v∈V: b∈Buv : c∈Cv t∈Tub

v∈V: b∈Blv : c∈Cv t∈Tlb

c ∈C

icbc,t−τcc +

icbct

b∈B: (c ,c)∈Ib,t∈Tb,
(t−τcc )∈Tb

b∈B: (c,c )∈Ib,t∈Tb,
(t+τcc )∈Tb

≤ Θc

∀c ∈ C, ∀t ∈ T (23)

b∈B: c∈Cb ,t∈Tb

η˜b ηb

· stbc

≤ Ξc

∀c ∈ C, ∀t ∈ T

(24)

stbc +

icbct = stb−c 1 + utbc ∀b ∈ B, ∀c ∈ (Cαb \ Cωb ), ∀t ∈ Tub

c ∈C: (c,c )∈Ib,(t+τcc )∈Tb

stbc + lbtc = stb−c 1 +

icbc,t−τcc ∀b ∈ B, ∀c ∈ (Cωb \ Cαb ), ∀t ∈ Tlb

c ∈C: (c ,c)∈Ib,(t−τcc )∈Tb

(25) (26)

stbc + lbtc +

icbct = utbc + stb−c 1 +

icbc,t−τcc

c ∈C: (c,c )∈Ib,(t+τcc )∈Tb

c ∈C: (c ,c)∈Ib,(t−τcc )∈Tb

∀b ∈ B, ∀c ∈ (Cαb ∪ Cωb ), ∀t ∈ (Tub ∩ Tlb)
(27)

sbrcαb −1 = 0 ∀b ∈ B
c∈Cb

(28)

icbct ≤ ηb
t∈Tb: (c,c )∈Ib (t+τcc )∈Tb

∀b ∈ B

(29)

icbct ≤ ηcc
b∈B: (c,c )∈Ib,t∈Tb,
(t+τcc )∈Tb

∀(c, c ) ∈ (C × C), c = c , ∀t ∈ T

(30)

icbct ≤ Φ
b∈B (c,c )∈Ib t∈Tb: (t+τcc )∈Tb

(31)

Constraints (19) and (20) (resp. (21) and (22)) ensure that a batch is fully unloaded (resp. loaded) in one terminal. Note that, these constraints are expressed by vehicle.
Other constraints deﬁne a problem mainly related to storage and inter-terminal transport. Constraints (23) limit the quantity of processed containers per period in a terminal. Constraints (24) limit the quantity of stacked twenty-foot equivalent units in a terminal. Constraints (25)(27) link values of variables utbc, lbtc, stbc and icbct, enforcing the conservation of the container ﬂow. Constraints (28) enforce that no container is stored in the terminals before the ﬁrst period of planning. Constraints (29) ensure that a batch is transported between two terminals at most once. Constraints (30) limit the quantity of containers transported by period between two terminals. Constraints (31) limit the total quantity of containers transported between all terminals during whole planning horizon.
As the formulation is complex, its implementation has been thoroughly tested. Firstly, unit tests ensure that each constraints is well formed. Secondly, consistency tests on solutions guarantee that the constraints are satisﬁed. Lastly, the program has been executed on small instances whose optimal solution had been computed manually and the solutions were veriﬁed. Two heuristics based on this formulation are introduced in the next section.

16

4 Heuristic approach
The problem studied in this paper is N P-hard, as the one machine scheduling problem with release dates and minimization of the sum of completion times (see the study by Lenstra et al. 1977) polynomially reduces to it. The machine is equivalent to one container terminal with only one berth and one quay crane that can handle one container per period. All other data related to the terminal are set to values large enough so that they can be ignored. Each task corresponds to the non-preemptive service of one vessel. The release date of the task is the date of arrival of the vessel. Its processing time is the number of containers to be handled.
Still, direct solving by a state-of-the-art solver can obtain solutions to small to mid-sized realistic instances of the time-indexed mixed-integer linear program formulated in the previous section. Therefore, we propose a mixed-integer programming based heuristic approach, built on the structural decomposition of the formulation, to deal with the larger instances.
In this section, we show how to use the proposed structural decomposition with the relaxand-ﬁx heuristic, described by Pochet and Wolsey 2006. Furthermore, this decomposition is also used with a new heuristic that we call restrict-and-ﬁx. In the two heuristics, a sequence of relaxed problems are solved, progressively ﬁxing integer variables in the original problem. Relax-and-ﬁx relaxes some integrality constraints on variables, whereas restrict-and-ﬁx relaxes also some linear constraints.
4.1 Structural decomposition
In this study, the structure of the formulation refers to how integer and continuous variables are linked together by linear constraints. This structure is highlighted in the matrix in ﬁgure 6. Each column, except the last one, corresponds to the variables, either binary or continuous nonnegative, related to a vehicle - a ship, a train or a group of trucks. The last column corresponds to the continuous non-negative variables related to storage and ITT (Inter-Terminal Transport of containers).
The ﬁrst row in blue corresponds to the objective, which is indicated to contain binary variables for the sake of simplicity (the values of the continuous non-negative variables mv appearing in the objective are constrained by (7) and can be expressed in terms of binary variables ptvz for ships and htvz for trains). Each other row corresponds to a set of constraints and one of its cells is colored if and only if some of the indicated variables appear in at least one of these constraints.
First level of decomposition, by vehicle types
On the one hand, the weakly linking constraints in green link a large number of continuous variables that are not part of the objective function and oﬀer some degree of freedom (constraints (23), (25)-(27)). On the other hand, the strongly linking constraints in red contain binary variables that are part of the objective function. Each of these constraints is restricted to one vehicle type and is related to resource allocation (constraints (1)-(4) on ships, constraints (16) on trains). Finally, the constraints in purple are local either to one vehicle or to storage and ITT. This calls for a decomposition by vehicle types.
17

Objective Global constraints
Constraints on ships

Ships

s1

sS

0-1

R+

… 0-1

R+

Variables

Trains

t1

tT

0-1 R+ … 0-1 R+

Trucks

g1 0-1 R+ …

gG 0-1 R+

Storage, ITT R+

Constraints on trains

…

…

…

Constraints on trucks
Constraints on storage, ITT

Rows of
weakly linking constraints

Rows of
strongly linking constraints

Rows of local constraints

Figure 6: Structure of the formulation

Second level of decomposition, by partitioning vehicles of the same type
Once the problem is decomposed by vehicle type, the resulting subproblems may remain too large to be tackled by a state-of-the-art solver. However, two vehicles of the same type may not have signiﬁcant interactions, especially if their associated time windows are disjoint, or if they are not processed in the same handling zone. Hence, vehicles which are most linked together by the constraints are clustered in order to form smaller subproblems. This clustering is achieved according to the solution of the problem formulated below as a 0-1 quadratic program, called hereafter the partition problem. The notations and decision variables for this problem are respectively given in table 11 and 12.

Table 11: Notations for the partition problem

V¯ set of vehicles of the same type to partition

Ω number of subproblems

minimum number of vehicles in a subproblem

ζ maximum number of vehicles in a subproblem

Q

set of pairs of vehicles, such that vehicles in a pair share access to at least one common handling zone

δvv

number of periods in the intersection of time windows of vehicles v and v , δvv = Tv ∩ Tv , (v, v ) ∈ Q

Table 12: Variables of the partition problem xov ∈ {0, 1} whether vehicle v is in subproblem o, v ∈ V¯ , o ∈ 1, Ω

18

The objective function maximizes the number of time periods shared by vehicle pairs assigned to the same cluster, two vehicles in a pair having access to at least one common handling zone:

maximize

(δvv · xov · xov ).

(v,v )∈Q o∈ 1,Ω

Note that, both temporal and spatial constraints are taken into account in the objective function. This aims at forming clusters of vehicles with few strongly linking constraints between them.
The constraints of the partition problem are the following ones:

xov = 1 ∀v ∈ V¯ ,

(32)

o∈ 1,Ω

≤ xov ≤ ζ ∀o ∈ 1, Ω .

(33)

v∈V¯

Constraints (32) assign each vehicle to a subproblem. Constraints (33) ensure that the number of vehicles in each subproblem is between the allowed minimum and maximum ones.
The partition problem formulated above is N P-hard: the classical quadratic assignment problem, described by Garey and Johnson 1979, reduces to it in a straightforward way.
The resulting subproblems should be solved by non-increasing number of container batches. This order allows to take the most impacting decisions ﬁrst, when the degree of freedom is the highest.

4.2 Relax-and-ﬁx
Relax-and-ﬁx is a general heuristic to solve mixed-integer programs, described by Pochet and Wolsey 2006, which consists in the following procedure. First, the set of integer variables is partitioned into disjunctive subsets and an order of treatment is deﬁned. Then, at each iteration, integrality constraints are relaxed for all but one of these subsets. The resulting subproblem is solved. The integer variables of the subproblem are ﬁxed at their current values and the process is repeated for all the remaining subsets.
Relax-and-ﬁx was successfully applied to the multi-periodic scheduling and planning problems studied by Dillenberger et al. 1994; Akartunali and Miller 2009; Ferreira et al. 2010. In these studies, integer variables are grouped by macro-periods. But preliminary tests did show that the structural decomposition proposed above performs better for the problem at hand. As each binary variable is associated to exactly one vehicle, a partition of all vehicles deﬁnes a partition of the binary variables. Relax-and-ﬁx, tailored for the problem of this paper, is presented in algorithm 1 and illustrated in ﬁgure 7. Its execution on a toy instance is described in appendix A. Note that the algorithm structure reﬂects the two levels of decomposition, used to build the subproblems.
Still, as shown in the next section, relax-and-ﬁx requires too much time to solve the largest realistic instances of the problem. A new heuristic was designed to take further advantage of the structure of the formulation. The idea is to ﬁrst relax and then progressively enforce the global constraints (23), (25)-(27). This results in one problem per vehicle type, plus one problem for storage and ITT.

4.3 Restrict-and-ﬁx
We propose this new heuristic to solve mixed-integer programs consisting in several problems tied together by global, but weakly linking constraints. It uses an ordered partition of the variables

19

Data: M IP ; /* Mixed-Integer Program to solve

*/

Ω; /* numbers of subproblems by vehicle types, vector

*/

Result: Solution to M IP or N ull if no integer feasible solution is obtained or

N o solution if no solution exists

begin

Solve the continuous relaxation of M IP ;

if The continuous relaxation is unfeasible then return No solution

end

χ ← ∅; /* set of integer variables whose values are fixed

*/

for T Y P E ∈ (SHIP, T RAIN, T RU CK) do

Create clusters of vehicles V1, . . . , VΩ[T Y P E] for T Y P E;

/* by solving the corresponding partition problem

*/

Sort the clusters by non-increasing total number of container batches;

for i ← 1; i ≤ Ω[T Y P E]; i ← i + 1 do

Γ ← integer variables associated to Vi; Π ← MIP with integrality constraints relaxed for all variables but the ones in χ

(already ﬁxed) and in Γ;

Solve Π;

if No solution found to Π then return Null

else

Fix the variables of Γ at their values in the solution of Π;

χ←χ∪Γ

end

end

end

return The last solution to Π end

Algorithm 1: Relax-and-ﬁx heuristic adapted to the port planning problem

20

into subsets which deﬁnes one subproblem per subset. All the variables, either continuous or integer, are concerned with the partition. Hence, the relaxation of the constraints linking together the subsets of the partition in the original problem results in one independent problem per subset. When solving the current subproblem, the variables of the subsequent subproblems and the constraints in which they appear are removed. This was introduced to speed up the solving with regard to relax-and-ﬁx, since the subproblems have less columns and rows.
At each iteration, a subset of integer and continuous variables is considered, in order to ﬁx its integer variables by solving a subproblem. Previous subsets of variables are also part of the subproblem, with their integer variables ﬁxed at their computed values. Every constraint containing only variables of the subproblem, that is, variables from the current and all the previous subsets, is present. This amounts to relaxing the other linear constraints, eliminating the next subsets of variables, since these variables are independent of the ones of the current subproblem. However, in order to increase feasibility, other constraints of the original problem may be modiﬁed and added, by restraining their variables to the ones of the subproblem, and, if necessary, by adapting their right hand sides.
When solving the problem introduced in this paper, these additional constraints are obtained by modifying constraints on container processing capacity (23) and conservation of containers (25)-(27). Their variables are restricted to the ones present in the current subproblem. It was not necessary to use lowered right hand side values. Restrict-and-ﬁx, applied to our problem, is presented in algorithm 2, and illustrated in ﬁgure 7. Its execution on a toy instance is described in appendix A. The principles of restrict-and-ﬁx are applied to obtain three subproblems, using the decomposition by vehicle type. Either relax-and-ﬁx can be used as a subroutine to solve the subproblems or a state-of-the-art solver.
4.4 Illustration of the subproblem structures for both heuristics
An illustration of the way the subproblems are built is provided in ﬁgure 7. To facilitate the understanding, only three subproblems are built for each heuristic. For relax-and-ﬁx, binary variables are partitioned by vehicle type. For restrict-and-ﬁx, all the variables are partitioned into three subsets: one for ships, storage and ITT, one for trains and one for trucks. For both heuristics, the subproblem for ships is solved ﬁrst, then the one for trains, then the one for trucks.
Solving one subproblem allows to ﬁx its binary variables at their computed values in the subsequent subproblems. Fixed binary variables are indicated in the ﬁgure with a cross in each case of the corresponding columns. The performances of both restrict-and-ﬁx and relax-and-ﬁx using the structural decomposition are assessed in the next section.
5 Numerical experiments
In this section, numerical experiments are conducted on realistic generated instances, to evaluate the proposed solving methods and to quantify the impact of a global management on port’s performance.
5.1 Settings
All the numerical experiments are performed on a PC with a CPU at 3 GHz and 8 GB of RAM. CPLEX 12.4 is used as the mixed-integer linear program solver. The time limit is set to 7200 seconds for the three solving methods.
21

Data: MIP; /* Mixed-Integer Program to solve

*/

Ω; /* numbers of subproblems by vehicle types, vector, for the

relax-and-fix subroutine

*/

Result: Solution to M IP or N ull if no integer feasible solution is obtained or

N o solution if no solution exists

begin

Solve the continuous relaxation of MIP;

if The continuous relaxation is unfeasible then return No solution

end

Γˆ ← ∅; /* set of variables in the current subproblem of restrict-and-fix

*/

χ ← ∅; /* set of integer variables of Γˆ whose values are fixed

*/

for T Y P E ∈ (SHIP, T RAIN, T RU CK) do

γ ← variables associated to TYPE ;

/* storage and ITT variables are associated to TYPE: SHIP

*/

Γˆ ← Γˆ ∪ γ;

Π ← MIP with only the variables of Γˆ and the associated constraints, plus the

global constraints without the other variables;

/* The solving of Π by relax-and-fix is described below, but CPLEX

could be used directly in certain cases

*/

Create clusters of vehicles V1, . . . , VΩ[T Y P E] for T Y P E;

/* by solving the corresponding partition problem

*/

Sort the clusters by non-increasing total number of container batches;

for i ← 1; i ≤ Ω[T Y P E]; i ← i + 1 do

Γ ← integer variables associated to Vi; Π ← Π with integrality constraints relaxed for all variables but the ones in χ

(already ﬁxed) and in Γ;

Solve Π;

if No solution found to Π then return Null

else

Fix the variables of Γ at their values in the solution of Π;

χ←χ∪Γ

end

end

end

return The last solution to Π end

Algorithm 2: Restrict-and-ﬁx heuristic adapted to the port planning problem

22

Objective Global constraints
Constraints on ships

Ships

s1 0-1 R+

sS

… 0-1

R+

Variables

Trains

t1
R+ R+

tT

R …

+ R+

Trucks

g1
R+ R+ …

gG
R+ R+

Storage, ITT
R+

Constraints on trains

…

…

…

Constraints on trucks
Constraints on storage, ITT
Relax-and-ﬁx - Subproblem 1

Ships

s1 0-1 R+

sS

… 0-1

R+

Variables

Restrict-and-ﬁx - Subproblem 1

Storage, ITT
R+

Objective Global constraints
Constraints on ships

Ships
s1 R+ …

sS R+

Variables

Trains

t1 0-1 R+

tT

… 0-1

R+

Trucks

g1
R+ R+ …

gG
R+ R+

Storage, ITT
R+

Constraints on trains

…

…

…

Constraints on trucks
Constraints on storage, ITT
Relax-and-ﬁx - Subproblem 2

Ships
s1 R+ …

sS R+

Variables

Trains

t1

tT

0-1 R+ … 0-1 R+

…

…

Restrict-and-ﬁx - Subproblem 2

Storage, ITT
R+

Objective Global constraints
Constraints on ships

Ships
s1 R+ …

sS R+

Variables

Trains

t1 R+ …

tT R+

Trucks

g1 0-1 R+ …

gG 0-1 R+

Storage, ITT
R+

Ships
s1 R+ …

sS R+

Variables

Trains

t1 R+ …

tT R+

Trucks

g1 0-1 R+ …

gG 0-1 R+

Storage, ITT
R+

Constraints on trains

…

…

…

…

…

…

Constraints on trucks
Constraints on storage, ITT
Relax-and-ﬁx - Subproblem 3

Restrict-and-ﬁx - Subproblem 3

Figure 7: Executions of relax-and-ﬁx and restrict-and-ﬁx with only one subproblem by vehicle type. Crossed cells correspond to ﬁxed variables.

23

CPLEX
CPLEX is set to save search trees on the disk, so that it does not run out of memory during the computations. Besides, its dual pricing algorithm is set to steepest edge in slack space, since this algorithm reduced the number of dual simplex iterations required after branching.
Relax-and-ﬁx
Ships are partitioned so that a subproblem contains between 16 and 24 ships. This results in up to 6 subproblems for ships, for the largest instances. Trains and trucks are not partitioned as previous tests did show that it was not necessary. To partition the ships, the partition problem is solved approximately by CPLEX after using Glover’s linearization (see Adams et al. 2004). The relative gap tolerance value is set between 0 and 0.75, depending on the size of the instance. Note that, the linear relaxation of the resulting formulation of the partition problem is weak, but this formulation allows CPLEX to quickly obtain good integer feasible solutions.
The subproblems of relax-and-ﬁx are solved by CPLEX, with a relative gap tolerance value set to 0.01 when dealing with large-sized instances. Each subproblem is solved within a time limit that becomes active once an integer feasible solution has been obtained. The time limit for the ﬁrst subproblem is 3600 seconds. For the ith subproblem, i > 1, the time limit is set to the remaining time of the (i - 1)th one, to which 7200/2i seconds are added.
Restrict-and-ﬁx
Three subproblems are deﬁned: one for ships, one for trains and one for trucks. The subproblem for ships is solved by relax-and-ﬁx, with the settings described above. The subproblem for trains and the one for trucks are solved by CPLEX, with the settings described above.
5.2 Test instances
The test instances are designed according to the characteristics of some ports in the European northern range and can be downloaded at http://litis.univ-lehavre.fr/container-port-planning/. The generation procedure is similar to the one described by Hartmann 2004.
Four terminal conﬁgurations are tested: (i) 1 maritime terminal, (ii) 2 maritime terminals, (iii) 3 maritime terminals, (iv) 3 sea-road terminals plus 1 inland-waterway and rail terminal. The main parameter values for container terminals are provided in table 13. The second and third terminal conﬁgurations allow us to compute the impact of a global management of maritime terminals on weighted turnaround time and the inﬂuence of ITT capacities. Firstly, in the instances where these conﬁgurations occur, each feeder vessel, inland-waterway barge and train v has to be routed among terminals: |Cv| = |C| ; while each mother vessel v is always assigned to one terminal: |Cv | = 1. Secondly, these instances include three limits on ITT - 0, 5, 10 percent of containers - as well as two ITT capacity levels - at most 30 or 60 container moves per hour between any couple of terminals.
As an example, with the third terminal conﬁguration and an ITT capacity level of 30 container moves per hour, the total maximum number of container moves initiated per hour is 180. For the fourth terminal conﬁguration, the ITT capacity level is 30 container moves per hour from a sea-road terminal to a sea-road terminal. It is 50 container moves per hour from the inlandwaterway and rail terminal (respectively from a sea-road terminal) to a sea-road terminal (resp. to the inland-waterway and rail terminal). Hence, for this terminal conﬁguration, a total of at most 300 container moves can be initiated per hour with the inland-waterway and rail terminal as origin or destination.
24

Table 13: Main characteristics of container terminals

Terminal

Characteristics by vehicle type

Ship

Train

Truck

Maritime 350 operations / h. storage capacity: 15000 TEU1 Sea, road 350 operations / h. storage capacity: 15000 TEU Inland-waterway, rail 175 operations / h. storage capacity: 7500 TEU

2 quay segments of 725 m. 2 quay segments of 275 m.2 16 quay cranes3
2 quay segments of 725 m. 2 quay segments of 275 m.2 16 quay cranes3

6 tracks 35 containers / h.

70 containers / h.

-

70 containers / h.

3 quay segments of 120 m.4 12 tracks

6 quay cranes3

70 containers / h.

-

1 Twenty-foot Equivalent Unit. 2 The quay of a maritime or sea-road terminal is partitioned into 4 quay segments: 2 quay segments
of 725 m., and 2 quay segments of 225 m. This partition was chosen according to ship lengths. A
quay segment may accommodate at most two ships simultaneously. 3 The base speed of a quay crane is 30 containers / h. and the productivity of n quay cranes is n0.8. 4 The quay of a inland-waterway and rail terminal is partitioned into 3 quay segments of 120 m.,
according to the maximum barge length of 60 m.

The annual volume of traﬃc is either 1, 2 or 2.5 millions of TEU (Twenty-foot Equivalent Unit). For reference, the annual volume of traﬃc in the whole port of Le Havre is currently close to 2.5 millions of TEU. The planning horizon is either 5 or 7 days and the length of a time period is 2 hours. The numbers of mother vessels, feeder vessels, inland-waterway barges, trains and groups of trucks are given in table 14.
The weight of a ship or a train is assumed to be an increasing linear function of the transport capacity. The ready times of the ships and trains are uniformly distributed. There are two groups of trucks per mother vessel: one for the import containers, the other for the export containers. In the case of import containers (respectively export containers), the ready time of a group of trucks is set to one day after (resp. one day before) the arrival of the mother vessel.
Nearly 30 percent of containers unloaded from a mother vessel are loaded to a feeder vessel, 30 to a barge, 15 to a train and 25 to a truck. More than 95 percent of containers unloaded from a feeder vessel, a barge, a train or a truck are loaded to a mother vessel. The number of containers to be unloaded from a vehicle follows a Poisson distribution of mean a fraction of its transport capacity. For example, a mother vessel unloads on average 25 percent of its transport capacity, which is between 3000 and 14000 TEU. The ratio of unloaded containers over loaded containers is close to 1 for all ships and trains. Container dwell time is on average 3 days, except for the containers unloaded from or loaded to a truck. Half of the containers are 20 foot, other half are 40 foot. The average numbers of container batches are provided in table 14.

25

Table 14: Vehicles and container batches by level of traﬃc

a
Traﬃc Horizon

Vehicle type

Ship

Train

c
Trucksb Batches

1

4 mother vessels

5 days 10 feeder vessels

17

29 inland-waterway barges

up to 8 groups

183.4

1

7 days

5 mother vessels 14 feeder vessels 40 inland-waterway barges

24

up to 10 groups

298.6

1.5

5 days

6 mother vessels 15 feeder vessels 43 inland-waterway barges

26

up to 12 groups

286.7

2.5

5 days

15 mother vessels 24 feeder vessels 71 inland-waterway barges

42

up to 30 groups

574

a Millions of TEU. b When a mother vessel arrives at the beginning (respectively at the end) of the
planning horizon, the group of trucks corresponding to its export (resp. its import) containers is out of the planning horizon. Hence its containers are assumed to be stored in the terminal (resp. have the terminal as a destination). c Average number.

5.3 Computational results
Computational results are reported in tables 15, 16, 17 and 18. For the direct solving by CPLEX, we provide the running time (column CPU time), the value of the best found integer solution (column Value), the gap between the linear relaxation and the best found integer solution (column Gap LR) and the gap between the lower bound at the end of optimization, computed as the smallest valid value of the continuous relaxation of a node in the search tree, and the best found integer solution (column Gap LB). For the two heuristics, we give the running time and the value of the best found integer solution. Column Gap LB gives the gap between the heuristic solution and the lower bound found by CPLEX. Clearly, this gap becomes very pessimistic as the instances grow and CPLEX solves only a few nodes of the search tree. The time limit is always set to two hours, for the three methods. A hyphen (“-”) indicates that no solution was found by the method.
In table 15, results are given for two sets of ﬁve small sized instances randomly generated with two sets of parameter values, with 1 maritime terminal and 1 annual million of TEU over 5 or 7 days.

26

27

Instance
#1 #2 5 days #3 #4 #5 Average #1 #2 7 days #3 #4 #5 Average Overall

CPU time
54.3 82.3 93.2 111.8 89.9 86.3
7200 7200 2269.9 499.1 783.8 3590.6
1838.4

Table 15: Comparative numerical results: 1 terminal, 1 annual million of TEU

Value

CPLEX Gap
LR (%)

Gap LB (%)

Relax-and-ﬁx

CPU time (s.)

Value

Gap LB (%)

Restrict-and-ﬁx

CPU time (s.)

Value

Gap LB (%)

82224

8.8

0

84046

9.7

0

88312

11.7

0

85724

9.8

0

85556

9.2

0

85172.4 9.8

0

21.8 13.5 67.7 43.7 24.5 34.3

82224

0

84046

0

88312

0

85724

0

85556

0

85172.4 0

18.1 9.1 41.1 18.2 21.2 21.6

82224

0

84046

0

88312

0

85724

0

85556

0

85172.4 0

123708 9.8

0.05

127656 11.3

1.4

128966 10.3

0

129310 11.6

0

133408 11.3

0

128609.6 10.8

0.3

96.2 151.1 83.1 70.7 140.1 108.2

123708 0.05 127656 1.4 128966 0 129310 0 133408 0 128609.6 0.3

51.3 87.2 65.3 57.3 121.2 76.4

123708 0.05 127656 1.5 128966 0 129310 0 133408 0 128609.6 0.3

106891 10.3

0.1

71.2

106891 0.1

49

106891 0.1

CPLEX is able to solve eight of the ten instances, that is, to obtain both an optimal solution and the proof of its optimality. For the two instances not solved exactly by CPLEX, the average relative gap between the solution and the lower bound is less than 0.8%. The average running time of CPLEX is 1838 seconds, the one of relax-and-ﬁx is 71 seconds and the one of restrict-andﬁx 49 seconds. With these ten instances, the two proposed heuristics obtain optimal or almost optimal solutions and they have on average running times signiﬁcantly lower than the ones of CPLEX.
Increasing the planning horizon from 5 to 7 days raises the running time of CPLEX from 89 seconds on average to 3589, but doesn’t have such an impact on the ones of the two heuristics. Still, given data uncertainty, notably on vessels’ arrival times, the planning horizon is set to 5 days in the following experiments. In fact, the estimated time of arrival of a mother vessel usually becomes precise one or two days before its actual arrival. A longer planning horizon would increase solving time and the computed decisions may loose their accuracy because of the increasing uncertainty.
In table 16 (respectively table 17), results are given for ﬁve sets of ﬁve instances randomly generated with the same parameter values, excepted the ones concerning ITT. Theses instances have 2 maritime terminals and 1.5 annual millions of TEU (resp. 3 maritime terminals and 2.5 annual millions of TEU) over 5 days. These twenty ﬁves instances are created from ﬁve base instances, by ﬁrstly increasing the limit on ITT - 0, then 5 and then 10 percent of containers - and secondly, for a given positive limit on ITT, increasing the capacity of ITT between any couple of terminals from 30 to 60 container moves per hour. Firstly, we aim at evaluating the solving methods on larger instances. Secondly, we aim at computing the decrease of weighted turnaround time that a global management of maritime terminals can achieve and the inﬂuence of ITT capacities.
28

29

Instance
No ITT
Average ITT: limited to 5% of cont., capacity of 30 cont. / h. between any couple of terminals
Average ITT: limited to 5% of cont., capacity of 60 cont. / h. between any couple of terminals
Average ITT: limited to 10% of cont., capacity of 30 cont. / h. between any couple of terminals
Average ITT: limited to 10% of cont., capacity of 60 cont. / h. between any couple of terminals
Average Overall

Table 16: Comparative numerical results: 2 terminals, 1.5 annual millions of TEU over 5 days

CPU time (s.)

CPLEX

Value

Gap LR (%)

Gap LB (%)

Relax-and-ﬁx

CPU time (s.)

Value

Gap LB (%)

Restrict-and-ﬁx

CPU time (s.)

Value

Gap LB (%)

#1

#2

#3 7200

-

-

-

#4

#5

7200

-

-

-

3636.2 516 1616 195.2 2133.3 1619.4

133426 6 137506 3.9 138777 2.8 136726 4.7 140423 4 137371.6 4.3

3623.4 161.2 196.4 125.3 3647.5 1550.8

133426 6 137506 3.9 138777 2.8 136726 4.7 140423 4 137371.6 4.3

#1 1097.7

128101 12.3

0.1

#2

#3 #4

7200

-

-

-

#5

5979.6

-

-

-

3707.9 202.6 941.9 619.4 2444.4 1583.3

128101 0.1 132812 3.9 131993 2.9 133444 4.8 135661 3.4 132402.2 3

348.9 750.6 1425.7 1635.8 196.9 871.6

128269 0.3 132812 3.9 131937 2.8 133276 4.7 135325 3.1 132323.8 3

#1 7200

128101 12.3

3.5

#2 1357.9

132812 10.6

0

#3

#4 7200

-

-

-

#5

6031.6

-

-

-

432.6 238.8 614.6 3120.9 299.9 941.4

128101 3.5 132812 0 131657 3.7 133710 4.8 135325 4.1 132321 3.2

286.6 1068.8 896.8 437 3842.1 1306.3

128269 3.6 132868 0.04 131825 3.8 133612 4.7 136095 4.6 132533.8 3.4

#1 368.4

128101 12.3

0.4

#2 7200

132812 10.6

2.3

#3 3517

131657 10.1

0

#4 #5

7200

-

-

-

5097.1

-

-

-

845.1 202.1 228.3 140 166.6 316.5

128101 0.4 132812 2.3 131657 0 132828 0.8 135325 3.6 132144.6 1.4

105.3 89.6 247.5 70.5 99.5 122.5

128101 0.4 132812 2.3 131657 0 132828 0.8 135325 3.6 132144.6 1.4

#1

128101 12.3

0.8

#2

#3 7200

-

-

-

#4

#5

135325 10.8

1.2

7200

-

-

-

1225.2 201 494.7 217.9 258.7 479.5

128101 0.8 132812 2.4 131657 1.6 132828 2.7 135325 1.2 132144.6 1.7

236.4 126.8 103.7 128.9 165.7 152.3

128101 0.8 132812 2.4 131657 1.6 132828 2.7 135325 1.2 132144.6 1.7

6301.6

-

-

-

987.9

133276.8 2.7

800.6

133303.6 2.8

30

Instance
No ITT
Average ITT: limited to 5% of cont., capacity of 30 cont. / h. between any couple of terminals
Average ITT: limited to 5% of cont., capacity of 60 cont. / h. between any couple of terminals
Average ITT: limited to 10% of cont., capacity of 30 cont. / h. between any couple of terminals
Average ITT: limited to 10% of cont., capacity of 60 cont. / h. between any couple of terminals
Average Overall

Table 17: Comparative numerical results: 3 terminals, 2.5 annual millions of TEU over 5 days

CPU time (s.)

CPLEX

Value

Gap LR (%)

Gap LB (%)

Relax-and-ﬁx

CPU time (s.)

Value

Gap LB (%)

Restrict-and-ﬁx

CPU time (s.)

Value

Gap LB (%)

#1

#2

#3 7200

-

-

-

#4

#5

7200

-

-

-

6583.2 6832.1 5919.7 7200 6845.4 6676.1

233152 10.2

246896 9.1

247556 10.4

-

-

246752 6.9

-

-

6009.4 6007.4 1172.3 3798.8 4260.4 4249.7

231272 9.4 245946 8.8 243520 8.9 247758 8.4 249940 8.1 243687.2 8.7

#1

#2

#3 7200

-

-

-

#4

#5

7200

-

-

-

6886.5 6926.6 3070.3 6356.2 6754.2 5998.8

236780 239272 235308 234642 237534 236707.2

18.6 14.7 12.9 11.2 11.4 13.8

5069.1 5522.6 2389.7 6616.1 6511.2 5221.8

220068 234642 233562 234876 234806 231590.8

12.5 13 12.2 11.3 10.4 11.9

#1

313609 40.2

38.4

#2

#3 7200 #4

-

-

-

#5

7200

-

-

-

3805 5730.2 6719.2
7200
6130.9

218930 11.7 234782 13.2 236372 13.4

-

-

-

-

2496.4 2733.1 5459.8 4413.6 5062.2 4033.1

219070 233812 235356 236354 235638 232046

11.8 12.8 13.1 12.7 10.5 12.2

#1

#2

#3 7200

-

-

-

#4

#5

7200

-

-

-

7200 4543.6 5253.5 7200 6919.8 6223.4

-

-

230028 11.2

231954 11.8

-

-

251264 15.7

-

-

3618.7 4476.7 2478.6 3244 2963 3356.2

220656 235962 229804 231112 232272 229961.2

12.5 13.4 10.9 10.8 8.8 11.3

#1 #2

-

-

-

#3 7200

281918 29.2

27.4

#4

288874 30.3

28.2

#5

-

-

-

7200

-

-

-

4905.6 5113.9 6656.8 3779.1 4686.6 5028.4

217738 228982 231336 233686 233258 229000

11.7 10.2 11.5 11.3 9.6 10.9

4410.4 1457.7 1088.5 5836.2 1680.1 2894.6

215626 230140 232348 232342 233700 228831.2

10.8 10.6 11.9 10.8 9.8 10.8

7200

-

-

-

6011

-

-

3951

233223.2 11

In table 16, computational results show that the two heuristics provide solutions of almost equal values to the 25 instances: 133276,8 on average for relax-and-ﬁx and 133303,7 for restrictand-ﬁx. The average relative gap between the lower bound and their solution is less than 3%. CPLEX is able to solve four instances, and to provide almost optimal solutions to four other ones. The average running time of CPLEX is 6302 seconds, the one of relax-and-ﬁx is 988 seconds and the one of restrict-and-ﬁx 801 seconds. The two heuristics provide nearly optimal solutions to all these instances.
In table 17, it can be observed that restrict-and-ﬁx is the only method able to provide a solution to each of the 25 instances within the time limit. Relax-and-ﬁx obtains a solution to 20 of the 25 instances, and CPLEX to 3 of the 25 instances. The average relative gap between the lower bound and the solution of restrict-and-ﬁx is 11%. Note that, as these instances are larger, the lower bound requires more time to increase. Hence, restrict-and-ﬁx provides solutions of values probably closer to the optimal ones than what the lower bounds may suggest. For 5 of these 25 large instances, relax-and-ﬁx fails to obtain a solution within the allowed time limit, because no solution is found to one of the subproblems.
Besides, as expected, allowing ITT decreases weighted turnaround time. In table 16, allowing 5% or 10% of the containers results in a 4% decrease. In table 17, allowing 5% of the containers to use ITT results in a 5% decrease and allowing 10% in a 6% decrease. In both tables, increasing the capacity of ITT from 30 container moves per hour between any couple of terminals to 60 doesn’t notably further reduce weighted turnaround time. This shows how the proposed approach can help to determine the required capacity of ITT between terminals for a given traﬃc, so that weighted turnaround time can be minimized. It also gives precise values on the improvement induced by ITT capacities.
Finally, in table 18, results are provided for ﬁve instances randomly generated with the same parameter values, with 4 terminals (3 sea-road terminals as well as 1 inland-waterway and rail terminal) and 2.5 annual millions of TEU over 5 days. The traﬃc has the same characteristics as the one in the instances with 3 maritime terminals. CPLEX results doesn’t appear as it fails to obtain any integer feasible solution within the allowed time limit.

Table 18: Comparative numerical results: 4 terminals (3 sea-road terminals as well as 1 inland-waterway and rail terminal), 2.5 annual millions of TEU over 5 days

Instance

Relax-and-ﬁx

CPU time (s.)

Value

Gap LB (%)

Restrict-and-ﬁx

CPU time (s.)

Value

Gap LB (%)

ITT : capacity of 30 a or 50 b cont. / h. between any couple of terminals
Average

#1 4870.7 #2 3901.9 #3 1113.4 #4 4837.4 #5 1540.8
3252.9

221642 7.8 218240 5.9 230456 6.7 232036 6.3 231752 4.9 226825.2 6.3

153.1 517.3 882.1 791.1 721.2 613

217046 5.9 214936 4.4 227950 5.7 225922 3.8 228510 3.5 222872.8 4.7

a Between any couple of sea-road terminals. b From a sea-road terminal to the inland-waterway and rail terminal, as well as from the inland-waterway and
rail terminal to a sea-road terminal.

In table 18, it can be observed that restrict-and-ﬁx outperforms the two other methods, always providing the best solution. The average relative gap between the lower bound and the solution of restrict-and-ﬁx is less than 5%. Restrict-and-ﬁx and relax-and-ﬁx obtain solutions to the ﬁve instances. CPLEX doesn’t obtain any solution to these instances within the allowed time. In addition, in table 18, the average running times of the two heuristics are lower than the ones in table 17: 613 seconds in table 18 and 3951 seconds in table 17 for restrict-and-ﬁx

31

as well as 3253 seconds in table 18 and 6012 seconds in table 17 for relax-and-ﬁx. In this case, adding one terminal to which the whole inland waterway and rail traﬃc is redirected reduces both problem sizes (average numbers of columns, rows and binary variables) and running times.
One may question the very good behaviour of the proposed heuristics. The explanation is that the spatial and temporal structures of the problem instances are extensively exploited in the decomposition choices. Of course, examples may be designed where it will nonetheless provides poor performances. Indeed, instances where the maximum container dwell time is really small, or the priority of trains is much larger, should be more diﬃcult to solve eﬃciently by our methods. However, we chose to limit our study to instances close to real terminals, not specialized in transshipment, for which container dwell time is indeed several days, and attracting large vessels is the priority. Exploring other issues is out of scope of this paper.
Overall, these numerical results show that the proposed approach can tackle realistic instances of the problem, to assist port authorities and multi-terminal operators in the management of multi-terminal systems. It was observed in tables 16 and 17 that a global management of the terminals in which ITT is limited to 5% of containers allows to decrease weighted turnaround time by nearly 5%. For a port, this increase of performance can be valuable, depending on its competitors and on the costs related to ITT.
Conclusion
This paper considered a multi-terminal and multi-modal maritime container port, like the ones in the European northern range. In such a port, the port authority and the terminal operators are involved in the global management of multiple terminals. It includes the routing of feeder vessels, inland-waterway barges and trains among terminals, as well as the inter-terminal transport of containers. Vessel turnaround time depends on this coordination of operations, and it is a key competitive factor.
Therefore, we introduced the ﬁrst optimization model for scheduling ships, trains and trucks on multiple terminals, while limiting inter-terminal transport of containers. Its objective is to minimize weighted turnaround time. The model was formulated as a time-indexed mixed-integer linear program. A mixed-integer programming based heuristic approach was designed, which relies on a structural decomposition of the problem. Numerical results on instances with up to 4 terminals and 2.5 annual millions of twenty-foot equivalent units over 5 days show that this approach can assist decision makers in the global management of multi-terminal systems. The proposed approach also allows to compute the performance that a global management can achieve and the inﬂuence of capacities of inter-terminal transport of containers. An average improvement of 5% was observed, even with limited inter-terminal transport of containers.
Besides, the structural decomposition and its usage with relax-and-ﬁx and restrict-and-ﬁx may be applied to other problems, since it has shown to be eﬃcient. Finally, the deterministic approach of this paper can be integrated into a rolling horizon framework to deal with uncertainty on data, notably on vessels’ arrival times. A preliminary study with the more general objective of minimizing weighted tardiness was performed by Schepler 2015, with promising results. The key decisions of the model can be maintained under deviations of vessels’ arrival times, such as the choice of terminals and the allocation of quay segments.
Acknowledgment This work was ﬁnanced by region of Normandy, french government and European Union within Passage Portuaire and CLASSE projects. The authors wish to thank the anonymous reviewers for their valuable comments that helped us to improve the quality of the paper.
32

References
[1] Warren P. Adams, Richard J. Forrester, and Fred W. Glover. “Comparisons and enhancement strategies for linearizing mixed 0-1 quadratic programs”. In: Discrete Optimization 1.2 (2004), pp. 99 –120.
[2] Kerem Akartunali and Andrew J. Miller. “A heuristic approach for big bucket multi-level production planning problems”. In: European Journal of Operational Research 193.2 (2009), pp. 396 –411.
[3] Christian Bierwirth and Frank Meisel. “A follow-up survey of berth allocation and quay crane scheduling problems in container terminals”. In: European Journal of Operational Research 244.3 (2015), pp. 675 –689.
[4] Christian Bierwirth and Frank Meisel. “A survey of berth allocation and quay crane scheduling problems in container terminals”. In: European Journal of Operational Research 202.3 (2010), pp. 615 –627.
[5] Katja Buhrkal, Sara Zuglian, Stefan Ropke, Jesper Larsen, and Richard Lusby. “Models for the discrete berth allocation problem: A computational comparison”. In: Transportation Research Part E: Logistics and Transportation Review 47.4 (2011), pp. 461 –473.
[6] H´ector J. Carlo, Iris F.A. Vis, and Kees Jan Roodbergen. “Storage yard operations in container terminals: Literature overview, trends, and research directions”. In: European Journal of Operational Research 235.2 (2014), pp. 412 –430.
[7] H´ector J. Carlo, Iris F.A. Vis, and Kees Jan Roodbergen. “Transport operations in container terminals: Literature overview, trends, research directions and classiﬁcation scheme”. In: European Journal of Operational Research 236.1 (2014), pp. 1 –13.
[8] H´ector J. Carlo, Iris F. A. Vis, and Kees Jan Roodbergen. “Seaside operations in container terminals: literature overview, trends, and research directions”. In: Flexible Services and Manufacturing Journal 27.2 (2015), pp. 224–262.
[9] Christof Dillenberger, Laureano F. Escudero, Artur Wollensak, and Wu Zhang. “On practical resource allocation for production planning and scheduling with period overlapping setups”. In: European Journal of Operational Research 75.2 (1994), pp. 275 –286.
[10] Mark B. Duinkerken, Rommert Dekker, Stef T. G. L. Kurstjens, Jaap A. Ottjes, and Nico P. Dellaert. “Comparing transportation systems for inter-terminal transport at the Maasvlakte container terminals”. In: Container Terminals and Cargo Systems: Design, Operations Management, and Logistics Control Issues. Ed. by Kap Hwan Kim and HansOtto Gu¨nther. Berlin, Heidelberg: Springer Berlin Heidelberg, 2007, pp. 37–61.
[11] Deisemara Ferreira, Reinaldo Morabito, and Socorro Rangel. “Relax and ﬁx heuristics to solve one-stage one-machine lot-scheduling models for small-scale soft drink plants”. In: Computers & Operations Research 37.4 (2010), pp. 684 –691.
[12] M. R. Garey and D. S. Johnson. Computers and intractability: a guide to the theory of NP-completeness. WH Freeman & Co., San Francisco, 1979.
[13] Giovanni Giallombardo, Luigi Moccia, Matteo Salani, and Ilaria Vacca. “Modeling and solving the Tactical Berth Allocation Problem”. In: Transportation Research Part B: Methodological 44.2 (2010), pp. 232 –245.
[14] S¨onke Hartmann. “Generating scenarios for simulation and optimization of container terminal logistics”. In: OR Spectrum 26.2 (2004), pp. 171–192.
33

[15] Leonard Heilig and Stefan Voß. “Inter-terminal transportation: an annotated bibliography and research agenda”. In: Flexible Services and Manufacturing Journal (2016), pp. 1–29.
[16] M.P.M. Hendriks, D. Armbruster, M. Laumanns, E. Lefeber, and J.T. Udding. “Strategic allocation of cyclically calling vessels for multi-terminal container operators”. In: Flexible Services and Manufacturing Journal 24.3 (2012), pp. 248–273.
[17] Akio Imai, Etsuko Nishimura, Masahiro Hattori, and Stratos Papadimitriou. “Berth allocation at indented berths for mega-containerships”. In: European Journal of Operational Research 179.2 (2007), pp. 579 –593.
[18] Akio Imai, Etsuko Nishimura, and Stratos Papadimitriou. “Berthing ships at a multi-user container terminal with a limited quay capacity”. In: Transportation Research Part E: Logistics and Transportation Review 44.1 (2008), pp. 136 –151.
[19] Akio Imai, Hsieh Chia Chen, Etsuko Nishimura, and Stratos Papadimitriou. “The simultaneous berth and quay crane allocation problem”. In: Transportation Research Part E: Logistics and Transportation Review 44.5 (2008), pp. 900 –920.
[20] Der-Horng Lee, Jian Gang Jin, and Jiang Hang Chen. “Terminal and yard allocation problem for a container transshipment hub with multiple terminals”. In: Transportation Research Part E: Logistics and Transportation Review 48.2 (2012), pp. 516 –528.
[21] J.K. Lenstra, A.H.G. Rinnooy Kan, and P. Brucker. “Complexity of Machine Scheduling Problems”. In: Studies in Integer Programming. Ed. by B.H. Korte P.L. Hammer E.L. Johnson and G.L. Nemhauser. Vol. 1. Annals of Discrete Mathematics. Elsevier, 1977, pp. 343 –362.
[22] Frank Meisel and Christian Bierwirth. “Heuristics for the integration of crane productivity in the berth allocation problem”. In: Transportation Research Part E: Logistics and Transportation Review 45.1 (2009), pp. 196 –209.
[23] Jaap A. Ottjes, Hans P. M. Veeke, Mark B. Duinkerken, Joan C. Rijsenbrij, and Gabriel Lodewijks. “Simulation of a multiterminal system for container handling”. In: Container Terminals and Cargo Systems: Design, Operations Management, and Logistics Control Issues. Ed. by Kap Hwan Kim and Hans-Otto Gu¨nther. Berlin, Heidelberg: Springer Berlin Heidelberg, 2007, pp. 15–36.
[24] Yves Pochet and Laurence A Wolsey. Production planning by mixed integer programming. Springer Science & Business Media, 2006.
[25] Xavier Schepler. “Solutions globales d’optimisation robuste pour la gestion dynamique de terminaux `a conteneurs”. PhD thesis. Universit´e du Havre, 2015.
[26] Robert Stahlbock and Stefan Voß. “Operations research at container terminals: a literature update”. In: OR Spectrum 30.1 (2008), pp. 1–52.
[27] Dirk Steenken, Stefan Voß, and Robert Stahlbock. “Container terminal operation and operations research - a classiﬁcation and literature review”. In: OR Spectrum 26.1 (2004), pp. 3–49.
[28] Kevin Tierney, Stefan Voß, and Robert Stahlbock. “A mathematical model of inter-terminal transportation”. In: European Journal of Operational Research 235.2 (2014). Maritime Logistics, pp. 448 –460.
[29] Jose Tongzon and Wu Heng. “Port privatization, eﬃciency and competitiveness: Some empirical evidence from container ports (terminals)”. In: Transportation Research Part A: Policy and Practice 39.5 (2005), pp. 405 –424.
34

[30] Ilaria Vacca, Matteo Salani, and Michel Bierlaire. “An Exact Algorithm for the Integrated Planning of Berth Allocation and Quay Crane Assignment”. In: Transportation Science 47.2 (2013), pp. 148–161.
[31] Bart W. Wiegmans, Anthony Van Der Hoest, and Theo E. Notteboom. “Port and terminal selection by deep-sea container operators”. In: Maritime Policy & Management 35.6 (2008), pp. 517–534.
[32] Elisabeth Zehendner and Dominique Feillet. “Beneﬁts of a truck appointment system on the service quality of inland transport modes at a multimodal container terminal”. In: European Journal of Operational Research 235.2 (2014), pp. 461 –469.
35

Appendix A MIP model and solving with a toy instance
A.1 Toy instance
As the size of the mixed-integer linear program increases rapidly, the toy instance deﬁned below is restricted to two terminals c1 and c2, one mother vessel v1, one feeder vessel v2, one train v3 and two container batches b1 and b2. It corresponds to the example introduced at the end of section 1 using ﬁgure 4. Its main characteristics are the following ones.
Terminal c1 has one group of cranes for ships, one quay segment z1, one group of cranes for trains and one group of rail tracks z3. Terminal c2 has one group of cranes for ships and one quay segment z2. The transport of containers from terminal c1 to terminal c2 requires one period. It is not possible to transport containers from terminal c2 to terminal c1.
Vessel v1 has only access to terminal c1. It arrives at the beginning of period 1 and must leave the port before the end of period 10. Vessel v2 has only access to terminal c2. It arrives at the beginning of period 30 and must leave the port before the end of period 31. Train v3 has only access to terminal c1. It arrives at the beginning of period 35 and must leave the port before the end of this period. The weights of vessels v1, v2 and train v3 are respectively 140, 5 and 1.
Container batch b1 has ﬁrst to be unloaded from vessel v1 in terminal c1. Then, it must be transported from terminal c1 to terminal c2, so that it can be loaded to vessel v2. Container batch b2 has to be unloaded from vessel v1 in terminal c1 and then loaded to train v3 in the same terminal. Container batches b1 and b2 contain respectively 3 and 9 containers.
A.2 Mixed-integer linear program
The mixed-integer linear program is automatically generated from the toy instance. Its objective is:
minimize 140mv1 + 5mv2 + mv3 .
A variable mv takes non-negative integer values. It provides the turnaround time of ship or train v.
The toy instance is designed so that its solution set can be deﬁned with a limited number of constraints, which are the following ones. The equation below forces the quantity of containers handled on vessel v1 in quay segment z1 (terminal c1), according to the capacity of the number of allocated quay cranes.
utb1,c1 + utb2,c1 ≤ 60h1v,1t,z1 + 104h2v,1t,z1 + · · · + 216h5v,1t,z1 + 248h6v,1t,z1 , t = 1 · · · 10
A similar equation exists for the service of vessel v2 in quay segment z2 (terminal c2). A variable
36

utbc is continuous non-negative. It is equal to the quantity of containers from batch b unloaded in terminal c from the source vehicle during period t. A variable hnvzt is binary. It indicates whether ship v is served in quay segment z by n quay cranes during period t. For all possible v, z, t,
n hnvzt = 1. The following equation and the objective give to variable mv1 a value equal to the turnaround time of vessel v1 (in this equation, the time of arrival rv1 is equal to 1).

(t − rv1 + 1)ptv1,z1 ≤ mv1 , t = 1 · · · 10

Similar equations exist for vessel v2 and train v3. A variable ptvz is binary. It indicates whether ship v is in quay segment z for period t.
The equation below limits the number of containers handled on train v3 in rail tracks z3 (terminal c1) during period 35, according to the capacity of the group of cranes.

lb325,c1 ≤ 100h3v53,z3

A variable lbtc is continuous non-negative. It is equal to the quantity of containers from batch b loaded in terminal c to the destination vehicle during period t.
Batch b1 is completely unloaded in terminal c1 (a similar constraint exists for batch b2):
10
utb1,c1 = 3.
t=1
Batch b1 (respectively b2) is completely loaded in terminal c2 (resp. c1):
31
lbt1,c2 = 3
t=30
lb325,c1 = 9.

The equations below are related to the conservation of the containers and to the transport of container batch b1 from terminal c1 to terminal c2.

utb1 ,c1

+ stb−1,1c1

− stb1,c1

−

ibc12

,t ,c1

=

0,

t = 1 · · · 10

stb−1 ,1c1

− stb1,c1

−

ibc12

,t ,c1

=

0,

t = 11 · · · 30

stb−1,1c2 + icb12,,ct−1 1 − stb1,c2 = 0, t = 2 · · · 29

stb−1,1c2 + icb12,,ct−1 1 − lbt1,c2 − stb1,c2 = 0, t = 30 · · · 31

s0b1,c1 + s1b1,c2 = 0

utb2,c1 + stb−2,1c1 − stb2,c1 = 0, t = 1 · · · 10

37

stb−2,1c1 − stb2,c1 = 0, t = 11 · · · 34 s3b24,c1 − s3b25,c1 − lb325,c1 = 0 s0b2,c1 = 0

A variable stbc or icbct is continuous non-negative. A variable stbc is equal to the total quantity of containers from batch b stored in terminal c at the end of period t. A variable icbct is equal to the quantity of containers sent from terminal c to terminal c during period t.
The remaining equations are technical and ensure the coherence of the formulation. The following equation links the values of variables hnv1,t,z1 and ptv1,z1 .
h1v,1t,z1 + h2v,1t,z1 + · · · h5v,1t,z1 + h6v,1t,z1 = ptv1,z1 , t = 1 · · · 10

A similar equation exists for vessel v2. The three equations below link the values of binary variables htv1,z1 , htv1,z1 and ptv1,z1 .

h1v1,z1 − p1v1,z1 = 0

htv1 ,z1

+ ptv−1,1z1

− ptv1,z1

t−1
− hv1,z1

=

0,

p1v01 ,z1

10
− hv1,z1

=

0

t = 2···9

Similar equations exist for vessel v2 and train v3. A variable htvz or htvz is binary. A variable htvz
t
(respectively hv,z) indicates whether the service of ship or train v in quay segment or rail tracks z starts at the beginning of period t (resp. ends at the end of period t).
The generated mixed-integer linear program has 261 variables (154 continuous non-negative
and 107 binary) and 155 linear constraints.

A.3 Solution to the mixed-integer program

The mixed-integer linear program for the toy instance is solved by CPLEX, which obtains the

following optimal solution of value 146.

Vessel v1 is served in quay segment z1 (terminal c1) with one quay crane during period 1,

h1v,11,z1

= 1.

Its service lasts one period and starts at its ready time,

h1v1 ,z1

1
= hv1,z1

= 1, which

makes its turnaround time equal to one period, mv1 = 1. Vessel v2 is served in quay segment

z2 (terminal c2) with one quay crane during period 30, hv1,23,z02 = 1. Its service lasts one period

and

starts

at

its

ready

time,

h3v02 ,z2

=

30
hv2 ,z2

=

1,

which

makes

its

turnaround

time

equal

to

one

period, mv2 = 1. Train v3 is served in rail tracks z3 (terminal c1) during period 35, h3v53,z3 = 1.

Its

service

lasts

one

period

and

starts

at

its

ready

time,

h3v53 ,z3

=

35
hv3 ,z3

=

1,

which

makes

its

turnaround time equal to one period, mv3 = 1.

Container batch b1 is fully unloaded in terminal c1 at period 1, u1b1,c1 = 3. It is immediately

38

transported

to

terminal

c2,

icb12

,1 ,c1

= 3.

It is stored in terminal c2 from period 2 to period 29,

stb1,c2 = 3, t = 2, · · · , 29. It is loaded in terminal c2 at period 30, lb310,c2 = 3. Container batch b2

is fully unloaded in terminal c1 during period 1, u1b2,c1 = 9. It is stored in terminal c1 from period

1 to period 34, stb2,c1 = 9, t = 1, · · · , 34. It is loaded in terminal c1 at period 35, lb325,c1 = 9.

Other variables are equal to 0.

A.4 Relax-and-ﬁx

Clearly, there is no competition for resources between the mother vessel v1, the feeder vessel v2 and the train v3. In any solution, they will be handled in diﬀerent handling zones, with diﬀerent cranes at diﬀerent time periods. Moreover, operations on their container batches oﬀer a large

degree of freedom, as theses operations can take place during time windows of at least 20 periods

for b1 and 25 periods for b2, without impacting the value of the solution.

The structural decomposition described in section 4.1 is applied so that one subproblem for

ship v1, one for ship v2 and one for train v3 are obtained and solved in that order. It amounts to a spatial and temporal decomposition.

Subproblem 1 consists in the mixed integer linear program introduced in appendix A.2, for

which the integrality constraints on the variables related to v2 and v3 are relaxed. It is related to

ship v1, quay segment z1 and time periods 1 to 10. Solving this subproblem allows to ﬁx the values

of

the

binary

variables

related

to

v1

in

the

subsequent

subproblems,

hv1,11,z1

=

h1v1 ,z1

=

1
hv1 ,z1

=

1.

Its optimal value is 140.1.

Subproblem 2 consists in the mixed integer linear program introduced in appendix A.2, for

which the integrality constraints on the variables related to v3 are relaxed and the variables

related to v1 are ﬁxed at their computed values. It is related to ship v2, quay segment z2 and
time periods 30 to 31. Solving this subproblem allows to ﬁx the values of the binary variables related to v2 in the subsequent subproblems, h1v,23,z02 = h3v02,z2 = h3v02,z2 = 1. Its optimal value is 145.

Subproblem 3 consists in the mixed integer linear program introduced in appendix A.2, for

which the variables related to v1 and v2 are ﬁxed at their computed values. It is related to train v3, group of rail tracks z3 and period 35. Solving this last subproblem allows to ﬁx the values of every remaining variables, binary and continuous non-negative. The same optimal solution as

the one described in appendix A.3 is obtained, with value 146.

A.5 Restrict-and-ﬁx
As for relax-and-ﬁx, the structural decomposition is applied so that one subproblem for the two ships v1 and v2 is obtained, as well as one subproblem for train v3.
Subproblem 1 for ships is the ﬁrst to be solved. It consists in the mixed integer linear program introduced in appendix A.2, in which all the variables and the constraints related to

39

v3 are removed. Relax-and-ﬁx is used to solve it in large instances. Moreover, the weakly linking constraints can be kept inside the subproblem, simply removing variables related to

v3. For instance, constraint of type (26) s3b24,c1 − s3b25,c1 − lb325,c1 = 0 of the A.2 MIP becomes s3b24,c1 − s3b25,c1 = 0: the amount of stored containers can not change between periods 34 and 35. Due to the characteristics of the instance, these constraints have little inﬂuence on the binary

variables of subproblem 1. Here the solving is direct, and allows to ﬁx the values of the binary

variables

related

to

v1

and

v2

in

the

subsequent

subproblem,

h1v,11,z1

=

h1v1 ,z1

=

1
hv1 ,z1

=

h1v,23,z02

=

h3v02 ,z2

=

30
hv2 ,z2

=

1.

Its

optimal

value

is

145.

Subproblem 2 for train is the same as Subproblem 3 for relax-and-ﬁx. Solving this last

subproblem allows to ﬁx the values of every remaining variables, binary and continuous non-

negative. The same optimal solution as the one described in appendix A.3 is obtained, with

value 146.

Appendix B Variables htvz, htvz and constraints (10)-(13)
Recall that variables htvz, ptvz, htvz are binary. The constraints (10)-(13) are the following ones.

t
hvz +

min{t+τzz ,dv }
htv,z

z ∈Zv t =t+1

≤1

∀v ∈ Va \ V˜ , ∀z ∈ Zv, ∀t ∈ Tv

hrvvz − prvvz = 0 ∀v ∈ Va, ∀z ∈ Zv htv+z 1 + ptvz − ptv+z 1 − htvz = 0 ∀v ∈ Va, ∀z ∈ Zv, ∀t ∈ Tv \ {dv}

pdvvz − hdvvz = 0 ∀v ∈ Va, ∀z ∈ Zv

(10)
(11) (12) (13)

Property. For all v ∈ Va, z ∈ Zv, if there exists t ∈ Tv, such that ptvz = 1 and either t = rv or ptv−z 1 = 0, then htvz = 1.

Proof. If t = rv and ptvz = 1 then htvz = 1 because htvz = ptvz = 1 is then the only possible

solution to the corresponding constraint in (11). For t > rv, if ptv−z 1 = 0 and ptvz = 1, the only

possible assignment of values to the remaining variables in the corresponding constraint in (12)

is

htvz

=

1

and

t−1
hvz

=

0.

It can be similarly shown that, for all v ∈ Va, z ∈ Zv, if there exists t ∈ Tv, such that ptvz = 1

and

either

t

=

dv

or

ptv+z 1

=

0,

then

t
hvz

=

1.

Still, one can note that there exist six solutions to any of the constraints in (12):

1.

t−1
hvz

= ptv−z 1 = 0 and

htvz

= ptvz

= 1,

40

2. hvt−z 1 = ptv−z 1 = 1 and htvz = ptvz = 0,

3.

ptv−z 1

= ptvz

= 1 and

htvz

t−1
= hvz

= 0,

4. htvz = ptv−z 1 = ptvz = htv−z 1 = 0,

5. ptv−z 1 = ptvz = 0 and htvz = htv−z 1 = 1,

6. htvz = ptv−z 1 = ptvz = htv−z 1 = 1.

But, as long as τzz > 0, the constraint in (10) forbids htvz = htv−z 1 = 1. The four remaining
solutions (1, 2, 3 and 4) are the ones of interest as they provide the required values to variables htvz and htvz.

41

