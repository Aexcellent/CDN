{"version":"508","text":"计算机研究与发展 JournalofComputerResearchandDevelopment\n\nDOI:１０．７５４４∕issn１０００Ｇ１２３９．２０２１．２０２１０６２６ ５８(１０):２１６３ ２１８６,２０２１\n\n安全多方计算及其在机器学习中的应用\n\n郭\n\n娟\n\n娟１,２\n　\n\n王\n\n琼\n\n霄１,２\n\n　\n\n许\n\n　\n\n新１,２\n　\n\n王\n\n天\n\n雨３\n\n　\n\n林\n\n璟\n\n锵４\n\n１(信 息 安 全 国 家 重 点 实 验 室 (中 国 科 学 院 信 息 工 程 研 究 所 )　 北 京 　１００１９５)\n\n２(中 国 科 学 院 大 学 网 络 空 间 安 全 学 院 　 北 京 　１０００４９)\n\n３(华 控 清 交 信 息 科 技 (北 京 )有 限 公 司 　 北 京 　１０００８４)\n\n４(中 国 科 学 技 术 大 学 网 络 空 间 安 全 学 院 　 合 肥 　２３００２６)\n\n(guojuanjuan＠iie．ac．cn)\n\nSecureMultipartyComputationandApplicationin MachineLearning\nGuoJuanjuan１,２,WangQiongxiao１,２,XuXin１,２,WangTianyu３,andLinJingqiang４\n１(StateKeyLaboratoryofInformationSecurity (InstituteofInformation Engineering,ChineseAcademyof Sciences), Beijing １００１９５)\n２(SchoolofCyberSecurity,UniversityofChineseAcademyofSciences,Beijing １０００４９) ３(HuakongTsingJiaoInformationScience (Beijing)Limited,Beijing１０００８４) ４(Schoolof CyberSecurity,UniversityofScienceand TechnologyofChina,Hefei２３００２６)\nAbstract　 Withtheemergenceanddevelopmentofartificialintelligenceandbigdata,largeＧscaledata collectionand analysisapplications have been widely deployed,whichintroducestheconcern of privacyleakage．Thisprivacyconcernfurtherpreventsdataexchangesamongoriginationsandresults in “datasilos”．Secure multiparty computation (MPC)allows multiple originationsto perform privacyＧpreserving collaborative data analytics, without leaking any plaintext data during the interactions,makingthedata “usable butnotvisible”．MPC technologies have been extensively studiedin the academic and engineering fields,and derive varioustechnicalbranches．PrivacyＧ preservingmachinelearning (PPML)isbecomingatypicalandwidelydeployedapplicationofMPC． AndvariousPPMLschemeshavebeenproposedtoperform privacyＧpreservingtrainingandinference withoutleaking modelparametersnorsensitivedata．Inthispaper,wesystematicallyanalyzevarious MPCschemesandtheirapplicationsinPPML．Firstly,welistvarioussecuritymodelsandobjectives, andthedevelopmentof MPCprimitives (i．e．,garblecircuit,oblivioustransfer,secretsharingand homomorphicencryption)．Then,wesummarizethestrengthsand weaknessesoftheseprimitives, andlistthecorrespondingappropriateusagescenarios,whichisfollowedbythethoroughanalysisof theirapplicationsinPPML．Finally,wepointoutthefurtherresearchdirectionon MPCandtheir applicationsinPPML．\nKeywords　securemultipartycomputation (MPC);garbledcircuit;oblivioustransfer;secretsharing; homomorphicencryption;privacyＧpreserving machinelearning\n摘　要　随着人工智能、大数据等技术的发展,数据采 集、数 据 分 析 等 应 用 日 渐 普 及,隐 私 泄 露 问 题 越 来 越严重．数据保护技术的缺乏限制了企业之 间 数 据 的 互 通,导 致 形 成“数 据 孤 岛”．安 全 多 方 计 算(secure\n　 收 稿 日 期 :２０２１－０６－１１;修 回 日 期 :２０２１－０７－２９ 　 基 金 项 目 :国 家 自 然 科 学 基 金 面 上 项 目 (６１７７２５１８)\nThiswork wassupportedbytheGeneralProgram oftheNationalNaturalScienceFoundationofChina (６１７７２５１８)． 　 通 信 作 者 :王 琼 霄 (wangqiongxiao＠iie．ac．cn)\n\n２１６４\n\n计 算 机 研 究 与 发 展 　２０２１,５８(１０)\n\nmultipartycomputation,MPC)技术能够在不泄露 明 文 的 情 况 下 实 现 多 方 参 与 的 数 据 协 同 计 算,实 现 安全的数据流通,达到数据“可用不可见”．隐私保护机器学习是 当 前 MPC 技 术 最 典 型 也 是 最 受 关 注 的 应用与研究领域,MPC 技术的应用可以保证在不泄露用户数据隐私和服务商模型参数隐私的情况下进 行训练和推理．针对 MPC 及 其 在 隐 私 保 护 机 器 学 习 领 域 的 应 用 进 行 全 面 的 分 析 与 总 结,首 先 介 绍 了 MPC 的安全模型和安全目标;梳理 MPC 基 础 技 术 的 发 展 脉 络,包 括 混 淆 电 路、不 经 意 传 输、秘 密 分 享 和同态 加 密;并 对 MPC 基 础 技 术 的 优 缺 点 进 行 分 析,提 出 不 同 技 术 方 案 的 适 用 场 景;进 一 步 对 基 于 MPC 技术实现的隐私保护机器学习方案进行了介绍与分析;最后进行总结和展望．\n关 键 词 　 安 全 多 方 计 算 ;混 淆 电 路 ;不 经 意 传 输 ;秘 密 分 享 ;同 态 加 密 ;隐 私 保 护 机 器 学 习\n中 图 法 分 类 号 　TP３０９\n\n　 　 安 全 多 方 计 算 (secure multipartycomputation, MPC)起源于 姚 期 智 在 １９８２ 年 提 出 的 百 万 富 翁 问 题．在 MPC 中,参 与 方 将 各 自 的 秘 密 数 据 输 入 到 一 个约定函数进行协 同 计 算,即 使 在 一 方 甚 至 多 方 被 攻击的情况下,MPC 仍能保证参与方的原始秘密数 据不被泄 露,并 且 保 证 函 数 计 算 结 果 的 正 确 性．自 MPC 理论创立以 来,已 经 衍 生 出 多 个 技 术 分 支,包 括 混 淆 电 路 、秘 密 分 享 、同 态 加 密 和 不 经 意 传 输 等 ．\n混 淆 电 路 (garbledcircuit,GC)是 姚 期 智 于 １９８６年提出的安全两方计 算 协 议[１],参 与 方 在 不 知 晓他人数据的前提 下,使 用 私 有 数 据 共 同 计 算 一 个 用 逻 辑 电 路 表 示 的 函 数 ．大 多 数 混 淆 电 路 方 案 支 持２ 个参与方计算,其性 能 优 化 集 中 于 优 化 单 个 电 路 门 的密文数量、传输的电路数量等．近年来多参与方 计 算的混淆电路 方 案 相 继 提 出．混 淆 电 路 的 优 点 是 能 在恒定轮数内完成 计 算,只 涉 及 开 销 较 小 的 对 称 加 密 运 算 ;缺 点 是 通 信 量 和 电 路 大 小 呈 线 性 关 系 ,因 此 不适合计算复杂运 算,只 适 用 于 比 较 大 小 等 简 单 的 逻辑运算．\n秘密分 享 (secretsharing,SS)由 Shamir[２]和 Blakley[３]于 １９７９ 年 分 别 提 出,数 据 拥 有 方 计 算 秘 密数据的份额并将 其 分 发 给 计 算 方,计 算 方 对 不 同 秘密的份额计算,得到计算结果的份额．由于秘密 拆 分方式不同,秘密分 享 分 为 基 于 多 项 式 插 值 的 秘 密 分 享 和 加 性 秘 密 分 享 (additivesecretsharing)．加 性 算术秘密分享能够 计 算 线 性 运 算、加 性 布 尔 秘 密 分 享能够计算比 较 大 小 等 非 线 性 运 算．加 性 秘 密 分 享 只需要进行简单的运 算,计 算 开 销 小,在 MPC 中 得 到了广泛的应 用．秘 密 分 享 的 缺 点 是 交 互 轮 数 和 电 路深度有关．\n不经意传 输 (oblivioustransfer,OT)由 Rabin 于１９８１年提出[４],消 息 发 送 方 拥 有 多 个 消 息,接 收 方获得其中某个值,发 送 方 不 知 道 接 收 方 的 选 择 信 息．其衍 生 技 术 相 关 不 经 意 传 输 (correlatedoblivious\n\ntransfer,COT)可 以 生 成 具 有 关 系 的 随 机 数．OT, COT 是重要的密码学组件,能够为 GC 传 输 导 线 标 签、为 SS生成相关 随 机 数,只 使 用 OT 技 术 也 能 实 现 MPC 协 议．在 OT 的 性 能 优 化 历 程 中,OT 扩 展 (OTExtension)技 术 引 入 对 称 加 密 来 降 低 计 算 开 销,静默 OT 扩 展 (silentOT Extension)技 术 在 本 地扩展随机数种子来降低通信开销．\n同 态 加 密 (homomorphicencryption,HE)的 概 念由 Rivest等 人 于 [５] １９７８ 年 提 出,可 以 在 无 需 解 密的情况下直 接 对 加 密 数 据 执 行 计 算．在 发 展 过 程 中先后有 部 分 同 态 加 密 方 案 与 浅 同 态 加 密 方 案 提 出,直到２００９ 年 Gentry[６]构 造 出 首 个 全 同 态 加 密 方案．同态加密 的 优 点 是 能 以 最 小 的 通 信 成 本 设 计 轮数较优的 MPC 协 议,缺 点 是 乘 法 同 态 运 算 会 带 来较大的计算和存 储 开 销,目 前 加 法 同 态 在 实 际 中 应用较多．\n以上４类 MPC 技 术 在 计 算 性 能、通 信 效 率 和 存储开销等方面都 具 有 各 自 的 优 势 和 劣 势,单 一 的 MPC 技术往往不 能 满 足 实 际 应 用 中 计 算 复 杂 函 数 的需求,需要 将 多 种 MPC 技 术 相 结 合 才 能 获 得 性 能均衡的实现方案．\n目前 MPC技术最典型的应用场景是隐私保护机 器学习(privacyＧpreservingmachinelearning,PPML)． MPC 在模型训练 和 推 理 中 可 以 保 护 用 户 数 据 和 模 型参数 的 隐 私．近 年 来,Microsoft,Amazon 和 Google 等 公 司 提 供 “机 器 学 习 即 服 务 ”(machinelearningas aservice,MLaaS),即 公 司 提 供 训 练 好 的 模 型 来 对 用户数据计算 推 断 结 果．模 型 数 据 是 公 司 的 重 要 资 产 ,一 旦 泄 露 会 带 来 重 大 的 经 济 损 失 ,同 时 用 户 也 不 愿意泄露私有数据,MPC 能够在保护双方隐私的前 提 下 完 成 模 型 推 理．此 外,在 隐 私 保 护 法 律 法 规 GDPR,EFF 和 HIPPA 等 的 约 束 下,不 同 机 构 间 无 法交换明文数据,MPC 能够在保证数据集隐私的前 提下来完成模型的训练．\n\n郭 娟 娟 等 :安 全 多 方 计 算 及 其 在 机 器 学 习 中 的 应 用\n\n２１６５\n\nPPML 方案涉及 多 种 类 型 的 运 算,考 虑 到 参 与 方 的 数 据 规 模 不 同 、计 算 和 网 络 能 力 不 同 、安 全 模 型 不同,可以在 具 体 场 景 下 组 合 多 种 MPC 技 术 来 实 现 PPML 方案．\n１　 安 全 模 型 及 目 标\n根据系统对敌手的容忍程度,MPC 的安全模型 可 以 分 为 半 诚 实 安 全 模 型 (semiＧhonestmodel)和 恶 意 安 全 模 型 (maliciousmodel)．\n半诚 实 安 全 模 型:敌 手 会 按 照 协 议 规 定 进 行 运 算,但试图通过协议中得到的信息挖掘其他参与方的 隐私数据,该模型保证用户隐私信息不被敌手获得．\n恶 意 安 全 模 型 :敌 手 不 会 遵 守 约 定 执 行 协 议 ,会 以错误的协议执行 结 果 推 断 信 息,恶 意 攻 击 行 为 也 可以是任意的 不 可 推 理 的．该 模 型 中 用 户 隐 私 数 据 不会被敌手获得,且 不 会 因 为 敌 手 的 恶 意 行 为 导 致 协议错误运行．在恶意安全模型中,要确保准确检 测 到敌手恶意行为会 带 来 很 大 开 销,因 此 提 出 了 安 全 性和开销更 均 衡 的 隐 蔽 安 全 (covert)模 型,能 够 在 一 定 概 率 下 检 测 到 敌 手 恶 意 行 为．公 开 可 验 证 (publicverifiablecovert,PVC)方 案 在 满 足 隐 蔽 安 全条件的基础上,参 与 方 生 成 公 开 可 验 证 的 欺 骗 证 据,该模型适用于恶 意 行 为 被 发 现 会 遭 受 惩 罚 的 现 实场景．Covert模型 和 PVC 模 型 通 常 只 适 用 于 GC\n\n和 OT 两种 MPC 技术． MPC 的安全目 标 包 括 参 与 方 数 据 隐 私 性 和 计\n算结果正确性等．进一步,对于参与方获得的计算 输 出结果,MPC 协议能够达到的安全属性由强到弱依 次为:保 证 结 果 输 出 (guaranteedoutputdelivery, GOD)、公 平 性(fairness,FN)、一 致 中 止(unanimious abort,UA)和选择中止(selectiveabort,SA)．假 设 敌手可以 控 制t 个 参 与 方,诚 实 方 占 多 数 (honest majority)时门限值满足t＜n∕２,能够达到 GOD,FN 安全性;不诚 实 方 占 多 数 (dishonestmajority)时 门 限值满足t≥n∕２,包括 ２ 个参与方中有一个 不 诚 实 参与方的情况,能够达到 UA,SA 安全性．\n２　MPC 技术发展\n２．１　 混 淆 电 路 混淆电路(GC)技 术 最 初 关 注 两 方 参 与 的 技 术\n方案,技术发展分别 从 性 能 提 升 和 安 全 性 提 升 ２ 方 面展开,安全性主要 体 现 在 半 诚 实 安 全 与 恶 意 安 全 的 区 别 ,在 具 有 同 等 安 全 的 情 况 下 ,提 升 方 案 性 能 是 解决 GC实用性的重要研究方向．此外,随着 MPC 实 际应用需求的 增 加,近 年 多 方 参 与 的 GC 方 案 研 究 也逐渐增多．本节将对两方参与的半诚实安全方 案、 两方参与的恶意安全方案及多方参与的方案分别进 行介绍．图１展示了两方参与的 GC技术发展脉络图．\n\nFig．１　Technologicaldevelopmentof２Ｇpartygarbledcircuit 图 １　 两 方 参 与 的 混 淆 电 路 技 术 发 展 脉 络\n\n２．１．１　 半 诚 实 安 全 两 方 混 淆 电 路 的 性 能 优 化 混淆电路是姚期智于１９８６年提出的一种电路加\n密技术,参与方混淆器(Garbler)和评估器(Evaluator) 对各自的隐私输入 计 算 目 标 函 数,首 先 需 要 将 目 标 函数转换成布尔电 路 的 形 式,布 尔 电 路 由 多 个 二 输 入单输出的电路门级联而成．GC 的构造是从单个电 路门开始,先 加 密 一 个 门 再 延 伸 到 加 密 整 个 电 路． GC 工作 流 程 如 图 ２ 所 示,以 AND 门 为 例,设 电 路 门导线的 索 引 为a,b 和c,混 淆 器 拥 有 导 线a 的 输\n\n入值va ,评 估 器 拥 有 导 线 b 的 输 入 值vb．首 先,在 GC 生成阶段,混 淆 器 为 所 有 导 线 选 取 随 机 数 作 为 标签 Lw,vw ,下标 w 为导线索引,vw 为导线 取 值,取 值 为 ０ 或 １．按 照 真 值 表 顺 序 依 次 使 用 输 入 标 签 加 密 输出标签得到４个 密 文,打 乱 密 文 排 列 顺 序 得 到 混 淆表．然后,双 方 交 互 传 输 信 息:混 淆 器 向 评 估 器 发 送混淆表、混淆 器 的 输 入 标 签 La,va ;评 估 器 通 过 和 混淆器执 行 OT 获 得 自 己 的 输 入 标 签 Lb,vb ．最 后, 在 GC 评估阶段,评 估 器 使 用 输 入 标 签 解 密 混 淆 表\n\n２１６６\n\n计 算 机 研 究 与 发 展 　２０２１,５８(１０)\n\n密 文 获 得 输 出 标 签 ,当 电 路 门 是 输 出 门 时 ,评 估 器 使 用输出标签解 密 输 出 门 密 文 得 到 明 文 输 出．对 于 每 个 电 路 门 ,混 淆 器 生 成 ６ 个 随 机 数 、使 用 两 重 对 称 加 密生成４个密文,评 估 器 依 次 对 ４ 个 密 文 解 密 直 到 解密成功为止．在 整 个 过 程 中,GC 的 通 信 量 取 决 于 交 互 阶 段 双 方 传 输 的 信 息 ,包 括 混 淆 表 、混 淆 器 标 签 和 OT 传输评估器标签,主要的通信开销是混 淆 表． GC 的计算开 销 来 源 于 混 淆 器 生 成 混 淆 表 密 文、评 估器解密混淆表密文时的计算．\nFig．２　Thediagram ofgarbledcircuit 图 ２　 混 淆 电 路 工 作 流 程\n混淆 电 路 提 出 至 今,通 信 开 销 一 直 是 其 性 能 瓶 颈,半诚实安全模型 下 的 很 多 方 案 都 致 力 于 通 过 减 少单个门的密文数量来降低通信开销．\nBeaver等 人 于 [７] １９９０ 年 提 出 的 BMR 方 案 构 造了 pointＧandＧpermute(p&p)方 法,混 淆 器 为 输 入 导线 w 选取掩码比特λw ,对导线真实值vw 和掩 码 比特计算异或得 到 排 列 比 特pw,vw ,即 pw,vw ＝vw 􀱇 λw ．混淆器在生成混淆表时,按照２个输入 导 线 的 排 列比特对密文进行 排 列,并 将 排 列 比 特 和 标 签 一 起 发给评估器．评估器解密时无需依次尝试４个密 文, 只需解密排列比特位置的密文即可获得输出标签, 并且由于掩码比特 是 随 机 的,评 估 器 不 能 根 据 排 列 比特推测出混淆器 的 真 实 输 入,混 淆 电 路 的 隐 私 性 也得到了保证．\nNaor等 人[８]于 １９９９ 年 提 出 了 GRR(garbled rowreduction,GRR),将 单 个 电 路 门 的 密 文 数 量 从 ４个减少到３个．混 淆 器 生 成 混 淆 表 时,令 混 淆 表 中\n\n的第一个密文为０．若 评 估 器 要 解 密 第 一 个 密 文,则 对密文０解密获得输出导线标签．２００９年 Pinkas等 人 提 [１０] 出的 GRR２,进 一 步 将 密 文 数 量 降 为 ２ 个, 然而该方案使用多 项 式 插 值 的 方 法 实 现,需 要 计 算\n模 幂 运 算 ,导 致 计 算 效 率 低 ． Kolesnikov 等 人[９] 于 ２００８ 年 提 出 了 FreeＧ\nXOR,其计算 XOR 门的通信开销为０个密文,是目 前计算 XOR 门的最优方案．混淆器选取全局随机数 R,在生成 GC 时 令 每 根 导 线 ２ 个 标 签 取 值 相 差 固 定值 R,即 Lw,１＝Lw,０􀱇R．评 估 器 计 算 XOR 门 时 将两方的输入标签 异 或 得 到 输 出 标 签,无 需 计 算 和\n传输混淆表,但是计算 AND 门 时 仍 需 要 混 淆 表,因 此 FreeＧXOR 适 用 于 XOR 门 较 多 的 运 算． Kolesnikov等人[１１]于２０１４年提出了 FleXOR,计算 AND 门的方法与 GRR２ 兼 容,只 需 要 ２ 个 密 文,计 算 XOR 门需要０~２个密文．\nZahur等人[１２]于２０１５年提出的半门(Halfgates) 是目前 计 算 AND 门 的 最 优 方 案,该 方 案 与 FreeＧ XOR 兼容,计算 AND,XOR 门 的 通 信 开 销 分 别 为 ２,０个密 文．Halfgates将 AND 门 转 换 为 ２ 个 半 门 的异或,即c＝a∧b＝a∧ (r􀱇r􀱇b)＝ (a∧r)􀱇 (a∧ (r􀱇b))．混 淆 器 半 门 计 算a∧r,评 估 器 半 门 计 算a∧ (r􀱇b),其 中,混 淆 器 拥 有 导 线 a 的 输 入 值 va ,评估器拥有导 线b 的 输 入 值vb,令r＝λb (λb 为 混淆器已知 的 掩 码 比 特)．在 GC 生 成 阶 段,混 淆 器 为混 淆 器 半 门 生 成 ２ 个 密 文 H (La,０ )􀱇LGC,０, H (La,１)􀱇LGC,０ 􀱇λbR,对 ２ 个 密 文 进 行 p&p 和 GRR 处理后,混淆 器 半 门 的 密 文 减 少 为 １ 个;混 淆 器为评估器 半 门 生 成 ２ 个 密 文 H (Lb,λb )􀱇LEC,０, H (Lb,λb􀱇１)􀱇LEC,０􀱇La,０,对２个密文做 GRR 处理 后评估器 半 门 的 密 文 减 少 为 １ 个,该 半 门 无 需 做 p&p处理,因 为 将 评 估 器 输 入 看 作vb 􀱇λb,那 么 评 估器拥有的vb 则为排列比 特．评 估 器 获 得 混 淆 表 和 ２个 半 门 的 输 入 标 签 La,va ,Lb,vb􀱇λb 后,分 别 解 密 ２个密文获得 混 淆 器 半 门、评 估 器 半 门 的 输 出 标 签 LGC ,LEC ,将２个输出标签异或得到 AND 门的输 出 标签．\nBall等人[１３]于２０１６年提出 Garbledgadgets可 用于混淆算术 电 路 和 布 尔 电 路．算 术 电 路 的 实 现 是 将 FreeＧXOR 从模２扩展 到 模 m ,此 时 每 个 导 线 w 具有m 个标签且相邻标签 之 间 相 差 全 局 值R,该 方 案实现了无通信开销的模m 的加法和常数乘法．\n混淆电路的性能优化不仅包括对通信性能的优\n化,也有一些方 案 对 于 计 算 性 能 进 行 优 化．早 期 GC\n\n郭 娟 娟 等 :安 全 多 方 计 算 及 其 在 机 器 学 习 中 的 应 用\n\n２１６７\n\n通过对输入标签计 算 哈 希、将 哈 希 结 果 与 输 出 标 签 异或来生成混淆表密文．英特尔内核的专用 AESＧNI 指令用硬 件 加 速 了 AES 运 算,激 励 Bellare等 人[３０] 于２０１３ 年 提 出 使 用 固 定 密 钥 AES 实 现 的 GC 方 案,比使用哈 希 算 法 实 现 的 GC 方 案 快 ５０ 倍．此 后 大多数 GC,OT 方案都使用固定密钥 AES 实现,然 而２０２０年 Guo等人 发 [３１] 现很多 GC 方 案 在 实 现 时 因错误使用固定密钥 AES而易受攻击,为此提出了 安全使用固定密钥 AES的方法并给出安全证明． ２．１．２　 恶 意 安 全 两 方 混 淆 电 路 的 性 能 优 化\n半诚实安全模型往往不能满足现实生活中的需 求,恶意混淆器会做 出 发 送 错 误 的 电 路 给 评 估 器 或 通过错误地执行协议来推测评估器的输入等恶意行 为．为此,一 些 抵 御 恶 意 敌 手 的 混 淆 电 路 方 案 被 提 出,包括 基 于 CutＧandＧchoose 的 混 淆 电 路、可 鉴 别 的混 淆 电 路 (AuthenticatedＧGC)等．基 于 CutＧandＧ choose的混淆 电 路 的 性 能 优 化 目 标 是 在 满 足 特 定 安全条件时最小化 传 输 电 路 的 数 量,通 常 只 支 持 两 方计算．AuthenticatedＧGC 将 秘 密 分 享 技 术 应 用 于 混 淆 电 路 中 ,并 为 秘 密 份 额 添 加 消 息 鉴 别 码 ,均 衡 了 通信开销和交互轮数．\n１)基于 CutＧandＧchoose的混淆电路 使用零知识证明技术来保证参与方正确执行协 议 会 带 来 巨 大 开 销．为 了 降 低 开 销,Pinkas[１４] 于 ２００３年首次将 CutＧandＧchoose技 术 引 入 到 GC 中, Lindell等人 于 [１５] ２００７年提出了第一个具有完整安 全性证明的基于 CutＧandＧchoose的恶意安全 GC．在 基于 CutＧandＧchoose的 GC 中,混 淆 器 生 成σ(σ 为 复制因子)个 GC 并发送给评估器,评估器随机选择 c 个电路作为检测电路,剩余电 路 作 为 评 估 电 路,恶 意敌手攻击成功的概率为 ２－ρ(ρ 为 统 计 安 全 参 数)． 评估器要求混淆器 提 供 生 成 检 测 电 路 的 随 机 数,来 验 证 检 测 电 路 是 否 实 现 约 定 函 数 ,检 测 通 过 后 ,按 正 常混淆电路的流程对评估电路进行计算以确定最终 计算结果． 在基于 CutＧandＧchoose的 GC 方 案 中,需 要 解 决的问题是 输 入 一 致 性 问 题 (inputconsistency)和 选 择 失 败 攻 击 (selectivefailureattack)问 题 ．输 入 一 致问题指的是恶意混淆器向评估器提供的σ 个混淆 电路的输入不一致,影响最终计算结果．选择失败 攻 击指的是恶意混淆器将电路门混淆表的其中一个密 文篡改为错误的密 文,如 果 这 个 密 文 刚 好 是 评 估 器 需要解密的密文,评 估 器 在 解 密 时 检 测 到 错 误 会 退 出 ,此 时 混 淆 器 便 会 知 道 评 估 器 的 排 列 比 特 ,进 一 步\n\n使用自己拥有的评估器的掩码比特计算出评估器的\n真实输入． 对于输入一致性问题,早 期 的 工 作 使 [１５] 用 承 诺\n方案来解 决,通 信 开 销 较 高．Shelat等 人 于 [１６] ２０１１ 年提出一致性检测 方 法,通 过 传 输 少 量 参 数 代 替 零 知识证 明 来 降 低 通 信 开 销．Lindell[２０]于 ２０１６ 年 提 出 输 入 恢 复 (inputrecovery)技 术 ,当 混 淆 器 输 入 不 一致导致评估器得 到 不 同 输 出 结 果 时,可 以 惩 罚 混 淆器提供真实输入．Wang等 人 于 [２１] ２０１７ 年 提 出 在 输出导线中编码陷 门 的 方 法,使 得 评 估 器 在 获 得 多\n个输出时可以恢复出混淆器的输入．此外,还有一 些 方案 也 [１７,３２Ｇ３３] 给出了解决输入一致性问题的办法．\n对于选择失败攻 击 问 题,文 献 [１５]中 评 估 器 将 真实输入与多个 随 机 比 特 的 异 或 值 作 为 OT 输 入, 使得评估器退出时 与 真 实 输 入 无 关,混 淆 器 无 法 通 过选择失败攻 击 推 测 评 估 器 输 入．Shelat等 人 通 [３４] 过构造探测矩阵 降 低 了 使 用 OT 的 数 量,然 而 导 致 异或运算次 数 为 评 估 器 输 入 大 小 的 平 方,Wang 等 人 通 [２１] 过将评 估 器 的 输 入 分 为 多 个 块 并 构 造 更 小\n的探测矩阵来减少计算开销． 基于 CutＧandＧchoose的 GC 性能提升问题也受\n到广 泛 关 注．Yan 等 人 于 [１８] ２０１４ 年 提 出 了 批 处 理 (Batched)CutＧandＧchoose,两 方 对 同 一 函 数 f(不 同 输入数据)进 行 N 次 安 全 计 算 时,批 处 理 CutＧandＧ choose方案中的混淆器生成 Nρ＋c 个电路,评估器 随机选择c 个电路 作 为 检 测 电 路,将 剩 余 的 电 路 随 机分配到 N 个 bucket中,每 个 bucket中 包 含 计 算 一次f 所 需 的 电 路,减 少 了 每 次 计 算 的 摊 销 成 本． Lindell等人进一步对该技术进行了改进和实现 ． [１９,３５] 先前单一 CutＧandＧchoose的复制因子为O(ρ),而批 处理 CutＧandＧchoose的 复 制 因 子 为 ２＋O(ρ∕logN ), 可见其极大地降低了开销．\n由于将 CutＧandＧchoose 应 用 于 整 个 电 路 开 销 很大,于 是 Nielsen 等 人[２２]２００９ 年 首 次 提 出 应 用 于 电路门的 CutＧandＧchoose方 案 LEGO,该 方 案 中 混 淆器构造大量 NAND 门,双方对这些电路门执行批 处理 CutＧandＧchoose,评 估 器 随 机 选 择 部 分 电 路 打 开检测正确性,将剩余门随机分配给 bucket并集成 到混淆电 路 中．评 估 器 在 评 估 电 路 时,取 出 bucket 中大 多 数 输 出 作 为 该 门 的 输 出．LEGO 使 用 了 Pederson同 态 承 诺,导 致 效 率 较 低,Frederiksen 等 人 于 [２３] ２０１３年提出的 MiniLEGO 采用基于 OT 的 异或同态承 诺 协 议,Frederiksen 等 人 于 [２４] ２０１５ 年 提出的 TinyLEGO 通过 优 化 bucket的 构 造 来 提 高\n\n２１６８\n\n计 算 机 研 究 与 发 展 　２０２１,５８(１０)\n\n通 信 效 率．Kolesnikov 等 人[２５] 于 ２０１７ 年 提 出 的 DUPLO 可以 对 任 意 电 路 组 件 进 行 CutＧandＧchoose, 电路组件 的 大 小 范 围 可 以 是 单 个 电 路 门 到 整 个 电 路．Zhu等人 于 [２６] ２０１７年提出的JIMU 通过使用 异 或同态哈希来代替先前的异或同态承诺．\n公 开 可 验 证 (PVC)安 全 最 早 于 ２０１２ 年 提 出 ,阿 里巴巴 于 [３６] ２０１９年首次实现 了 公 开 可 验 证 的 混 淆 电路,该 方 案 使 用 CutＧandＧchoose 的 方 法 来 实 现, 混淆器发送多个电 路 给 评 估 器,评 估 器 选 择 一 个 电 路用于评估,剩余电路用于检测．每个参与方的所 有 行为都自动带有类似签名的机制以供其他参与方存 证 ,当 发 现 恶 意 行 为 时 将 其 签 名 公 开 ,令 恶 意 参 与 方 承受名誉损失,以此 来 威 慑 理 性 的 参 与 方 正 确 执 行 协议．\n２)可 鉴 别 的 混 淆 电 路 先前 的 方 案 均 存 在 一 定 局 限 性:对 整 个 电 路 实 施 CutＧandＧchoose的 通 信、计 算 开 销 大;对 电 路 门 实施 CutＧandＧchoose的运 行 时 间 长;恶 意 安 全 秘 密 分享协议 的 交 互 轮 数 多 等．针 对 现 有 协 议 的 不 足, Wang等人 于 [２７] ２０１７ 年 提 出 恒 定 轮 数 的 可 鉴 别 混 淆电路 AuthenticatedＧGC．为 了 解 决 选 择 失 败 攻 击 问题,该方案引入预 处 理 程 序 将 导 线 掩 码 比 特 拆 分 为 ２ 个 份 额 ,将 其 分 别 分 发 给 混 淆 器 和 评 估 器 ,然 而 掩码比特 拆 分 后 导 致 混 淆 器 无 法 独 立 地 生 成 混 淆 表,需要混淆器和评 估 器 这 ２ 个 参 与 方 分 布 式 地 生 成混淆表．由于 混 淆 器 可 能 构 造 错 误 的 混 淆 表 份 额 影响最终计算 结 果,该 方 案 引 入 BDOZ 型 MAC[３７] 使得双方可鉴别对方混淆表份额的正确性． AuthenticatedＧGC 方案中混淆器和评估器协同 生 成 混 淆 电 路 ,预 处 理 程 序 包 括 “与 计 算 函 数 无 关 的 预处理”和“与 计 算 函 数 有 关 的 预 处 理”．“与 计 算 函 数 无 关 的 预 处 理 ”为 混 淆 器 和 评 估 器 生 成 全 局 密 钥 、 输入导线 掩 码 比 特 的 份 额 及 对 应 的 MAC,混 淆 器 和评估器可以在本地 计 算 出 XOR 门 的 输 出 导 线 掩 码比特及 MAC．然而 计 算 AND 门 时,需 要“与 计 算 函数有关的预处理”生 成 AND 三 元 组,即 预 处 理 程 序根据从混淆器和评估器收到的输入导线掩码比特 计算输出导线的掩 码 比 特,并 返 回 给 混 淆 器 和 评 估 器,然后两方使用各自的份额生成混淆表份额．在 数 据输入阶段双方对彼此的掩码比特鉴别通过后再执 行 OT 传输标签,在 电 路 评 估 阶 段 评 估 器 逐 层 使 用 输入导线标签计算 输 出 导 线 标 签 及 鉴 别 信 息,在 电 路输出阶段评估器鉴别输出导线 MAC 正确后使用 标签解密 GC 获得结果．\n\nKatz等人 于 [２８] ２０１８年提出安全两方计算场景 下 AuthenticatedＧGC 的优化方 案,通 过 设 计 与 半 门 方案兼容的可鉴别 混 淆 电 路、避 免 每 次 混 淆 都 发 送\nMAC 以及优化 AND 门 的 三 元 组 来 提 高 计 算 和 通 信效率． ２．１．３　 多 方 参 与 的 混 淆 电 路\n１)基于 BMR 的多方混淆电路 为了能够让多个参与方协同地生成混淆电路, Beaver等人 于 [７] １９９０年提出 BMR 协 议,将 姚 氏 混 淆电路扩展到多方 场 景,各 参 与 方 为 每 条 导 线 生 成 加密值,对所有参与 方 生 成 的 同 一 导 线 的 加 密 值 计 算 异 或 ,得 到 该 导 线 最 终 的 加 密 值 ． 原始 BMR 方 案 只 能 抵 御 半 诚 实 行 为 敌 手,但 与其他安全计算技术(SPDZ,SHE 和 OT)合用可以 抵御恶意行为敌手．最初 BMR 使用零知识证明技术 来证明生 成 导 线 加 密 值 时 正 确 使 用 了 伪 随 机 函 数 (pseudorandom function,PRF),计 算 开 销 较 大． SPDZＧBMR[３８],SHEＧBMR[３９] 和 OTＧBMR[４０] 对 PRF 的证明和检查有所不同:SPDZＧBMR 在评估电 路时使 用 SPDZ 型 MAC 来 检 查 PRF 值 和 密 钥; SHEＧBMR 使 用 SHE 来 验 证 PRF 值 的 正 确 性; OTＧBMR 使用 COT 来对 PRF 值进行一致 性 检 查． SPDZＧBMR,SHEＧBMR 和 OTＧBMR 中每个门的通 信开销 依 次 为 O (n４κ),O (n３κ),O (n２B２κ),其 中 B＝O(１＋ρ∕log|C|)．可见２０１７年提出的 OTＧBMR 为这几个方案中性能最优的方案． ２０１７年 Wang等 人 将 [４１] 可 鉴 别 混 淆 电 路 方 案 与 BMR 技术结合,设计了多 方 混 淆 电 路 方 案,通 信 开销为 O(n２Bκ)．Yang等 人 于 [２９] ２０２０ 年 进 一 步 提 出 优 化 方 案 ,针 对 文 献 [２７]中 “与 计 算 函 数 有 关 的 预 处理”进行 改 进,优 化 了 AND 三 元 组 生 成 方 式,并 首次提出将半门方 案 应 用 于 多 方 场 景,其 中 三 方 计 算“与计 算 函 数 有 关 的 预 处 理”的 通 信 效 率 提 高 了\n３５％ ． ２)三 方 混 淆 电 路 实际应用中也存在少数参与方计算混淆电路的\n场 景 ,例 如 只 有 ３ 个 参 与 方 ．安 全 三 方 计 算 通 过 秘 密 分享实现的方案较 多,混 淆 电 路 也 有 少 量 专 门 支 持 ３个 参 与 方 的 方 案,通 常 包 含 ２ 个 混 淆 器 以 及 １ 个 评估器,评估器通过 ２ 个 混 淆 器 生 成 的 电 路 一 致 性 来判断 是 否 有 恶 意 行 为．CKM ＋１４[４２]将 CutＧandＧ choose应用于三 方 混 淆 电 路,评 估 器 P３ 的 输 入 通 过 XOR 拆分为多个份额,混淆器 P１,P２ 基于 BMR 协作生 成 GC,评 估 器 P３ 分 别 和 P１,P２ 通 过 CutＧ andＧchoose的 方 式 验 证 双 方 生 成 GC 的 正 确 性．\n\n郭 娟 娟 等 :安 全 多 方 计 算 及 其 在 机 器 学 习 中 的 应 用\n\n２１６９\n\nMRZ１５[４３]需要２个 混 淆 器 协 商 一 致 的 随 机 数 来 生 成 混 淆 电 路 ,能 够 容 忍 一 个 恶 意 混 淆 器 ,评 估 器 采 用 秘密分享拆分其输入并从２个混淆器得到输入份额 的 标 签 ,进 一 步 恢 复 出 真 实 输 入 的 标 签 ,该 方 案 仅 使 用对称加密而无需 使 用 OT,从 而 提 高 了 计 算 效 率． MRZ１５之后被应用于混合 计 算 框 架 ABY３,可 以 与 三方秘密分享技术进行转换． ２．２　 不 经 意 传 输\n不经意传输(OT)是 密 码 学 的 基 本 协 议 原 语 之 一,由 Rabin 于 １９８１ 年 提 出．OT 技 术 主 要 包 括 OT,OT 扩 展 以 及 相 关 不 经 意 传 输 (COT)．OT 在 MPC 场景中有广泛的 应 用:OT 自 身 可 实 现 多 项 式 计算 和 [４４Ｇ４５] 比 较 大 小[４６];OT 作 为 重 要 的 MPC 安 全组件可与其他 MPC 技术结合应用,例如 OT 在混 淆电路中承担着传输标 签 的 任 务;COT 能 够 为 秘 密 分享方案生成相关随机数[４７]、消息鉴别码等．\nEven等人 于 [４８] １９８２ 年 提 出 １ＧoutＧofＧ２ OT 的 概念,如 图 ３(a)所 示．发 送 方 Alice 输 入 ２ 个 消 息 m０,m１,接收方 Bob输入选择比特b,OT 向 Bob 输 出 mb,协 议 执 行 过 程 中 Alice不 能 获 知 选 择 比 特b 且 Bob不能获知 m１－b．OT 可 以 由 基 于 不 同 安 全 假 设的公钥加 密 算 法 来 实 现,包 括 基 于 DDH 实 现 的 NP０１[４９]、基于 LWE 实现的 BD１８[５０]和 MR１９[５１]等．\nFig．３　Thetechnicofoblivioustransfer 图３　OT 技术原理\n\n然而使用非对称密码算法生成大量的 OT 会带 来 很 大 的 计 算 开 销,并 且 Impagliazzo 等 人[５２]于 １９８９年证明无 法 在 不 使 用 公 钥 密 码 的 情 况 下 实 现 OT．为了 降 低 计 算 开 销,研 究 者 们 提 出 了 OT 扩 展 技术,使用混合加密方式来生 成 OT,即 先 使 用 少 量 的公钥算法生成对 称 密 钥,再 进 一 步 使 用 对 称 加 密\n来完成消息的不经意传输． １)OT 扩展 Beaver[５３]于１９９６年首次提出 OT 扩 展,使 用κ\n(κ 为计算 安 全 参 数)个 基 础 OT(baseOT)可 以 生 成κ 的多项式个 OT,但是该方案需要使用 GC 计算 复杂的伪随机数发生器导致效率很低．\nIshai等 人 于 [５４] ２００３ 年 提 出 的 OT 扩 展 协 议 IKNP０３,是第一 个 高 效 地 将 m 个 OT 转 换 为 用κ 个基础 OT 来实现的工作(m ≫κ),工 作 流 程 如 图 ３ (b)所示．IKNP０３协议中,两方的输 入 分 别 为:Alice 输入 m 对比特串xj０,xj１(１≤j≤m ),每 个 比 特 串 长 度为l 位;Bob输入选择向量r＝(r１,r２,􀆺,rm )．两 方的 输 出 分 别 为:Alice的 输 出 为 空,Bob 的 输 出 为 (xr１１ ,xr２２ ,􀆺,xrmm )．IKNP０３的运算分为基 础 OT 和 OT 扩展２个阶段:\n在基础 OT 阶 段,Bob 复 制κ 份 选 择 向 量r 得 到m ×κ 维矩阵R,然后选取 m ×κ 维随机矩阵T 并 计算T′＝T􀱇R．Alice和 Bob互 换 原 本 的 发 送 方 和 接收方身份提供输入:Bob作为发送方输入矩阵 T, T′,Alice作为接收方输入长度为κ 位的随机比特串 s．基础 OT 执行结束后 Alice获得输出矩阵 Q,该矩 阵第i 列 (１≤i≤κ)满 足 Qi ＝ (si􀅰r)􀱇Ti,第j 行 (１≤j≤m)满足 Qj＝(rj􀅰s)􀱇Tj．\n在 OT 扩展 阶 段,由 于 Qj ＝ (rj􀅰s)􀱇Tj 表 示 rj＝０时 Qj ＝Tj,rj ＝１ 时 Qj ＝s􀱇Tj,因 此 Alice 分别使用 Qj,Qj􀱇s 计算消息xj０,xj１ 的密文并发送 给 Bob:yj０＝xj０􀱇H (j,Qj),yj１＝xj１􀱇H (j,Qj 􀱇s)． 最后,Bob使用T 解密获得xjrj ＝yjrj 􀱇H (j,Tj)．\n恶意接收 方 Bob 可 以 在 基 础 OT 阶 段 使 用 不 同的选择 向 量 来 同 时 获 得 发 送 方 Alice 的 ２ 个 消 息,因此需要对接收 方 的 输 入 进 行 一 致 性 检 测 来 发\n现恶意行为．IKNP０３ 在 半 诚 实 协 议 的 基 础 上,引 入 了 CutＧandＧchoose技术来在 OT 扩展阶段 检 测 Bob 输入的一致性,这种检测方式带来了很大的开销．\n研究者们提出了一系列半诚实模型下 OT 扩展 的性能优化方案．Asharov等人 于 [５５] ２０１３ 年 提 出 的 方案 ALSZ１３ 分 别 设 计 了 相 关 不 经 意 传 输 (COT) 扩展和随机不经意 传 输(Random OT,ROT)扩 展．\n\n２１７０\n\n计 算 机 研 究 与 发 展 　２０２１,５８(１０)\n\nCOT 中 发 送 方 拥 有 的 输 入 消 息 是 相 关 的,例 如 FreeＧXOR 的标签传输;ROT 中 发 送 方 拥 有 的 消 息 不相 关 的．Kolesnikov 等 人 于 [５６] ２０１３ 年 提 出 的 方 案 KK１３ 适 用 于 传 输 短 秘 密 值,该 应 用 场 景 包 括 GMW 的 AND 运 算 等．KK１３ 改 变 了IKNP０３ 中 选 择向量r 的 重 复 编 码 方 式,Bob 对r 采 用 随 机 编 码 后可在 OT 扩展阶 段 获 得 １ＧoutＧofＧn OT．当 传 输 的 短消息长度为１位时 KK１３比IKNP０３的通信效率 提高 O(logκ)倍．由 于 KK１３ 方 案 里n 取 值 上 限 为 ２５６,Kolesnikov等人 提 [５７] 出 方 案 KKRT１６ 对 其 进 行改进,Bob通过使用 PRF 对r 编码,实现了１ＧoutＧ ofＧ¥ OT 扩展．Boyle等 人 于 [５８] ２０１９ 年 提 出 的 方 案 BCG ＋ １９b 基 于 伪 随 机 关 系 随 机 数 生 成 器 (pseudorandom correlationgenerator,PCG)实 现 了静默 OT 扩 展,使 用 PCG 实 现 静 默 预 处 理 时,参 与方之间只需要少 量 通 信 来 生 成 随 机 数 种 子,然 后\n在本地对短随机数种子进行扩展来生成具有关系的\n长随机数．BCG＋１９b 中 生 成 一 个 OT 平 均 只 需 要 ０~３位的通信开销,极大地 降 低 了 OT 扩 展 的 通 信 量 ,但 是 其 轮 数 复 杂 度 高 ,适 用 于 通 信 带 宽 资 源 受 限\n的场景． 此外,还 有 一 些 方 案 用 来 提 高 恶 意 安 全 模 型 下\nOT 扩 展 的 效 率．由 于 基 于 CutＧandＧchoose 实 现 的 一致性检 测 方 案 性 [５９Ｇ６０] 能 太 差,Nielsen 等 人 于 [６１] ２０１２年提出 另 一 种 一 致 性 检 测 的 方 法 NNOB１２,使 用哈希函数在基础 OT 阶段对 Bob的选择向量r 进 行一致性 检 测,实 现 该 方 案 需 要 ２．７κ 个 基 础 OT． ALSZ１５[６２]在 NNOB１２ 的 基 础 上 进 行 改 进,将 基 础 OT 数量减少 为κ＋ρ．KOS１５[６３]在IKNP０３ 半 诚 实 安全方案的基础 上 改 进 协 议,在 OT 扩 展 阶 段 对 接 收方输入向量进 行 一 致 性 检 测．在 KOS１５ 中,Alice 和 Bob 协 商 一 个 行 数 索 引 集 C,接 收 方 Bob 计 算 T∗ ＝ 􀱇j∈CTj 和 R∗ ＝ 􀱇j∈CRj 并 发 送 给 发 送 方 Alice,然后 Alice计 算 T∗ 􀱇 (R∗􀅰s)并 检 查 Q∗ ＝ T∗ 􀱇 (R∗ 􀅰s)是 否 成 立,若 不 成 立 则 退 出 协 议． KOS１５仅需κ 个基 础 OT,与IKNP０３ 半 诚 实 安 全 方案相比并未引入额外 的 开 销．３ 个 方 案 NNOB１２, ALSZ１５和 KOS１５都实现了恶意安全的１ＧoutＧofＧ２ 的 OT 扩展,OOS１６[６４]方案在 KK１３ 的 基 础 上 加 入 与 KOS１５ 类 似 的 一 致 性 检 测 获 得 恶 意 安 全 的 １Ｇ outＧofＧn OT 扩展(n≤２７６),该协议只需 要κ 个 基 础 OT,运行时间比 KK１３增长约２０％．\n２)相 关 不 经 意 传 输 相关不经 意 传 输 (COT)最 早 在 ALSZ１３ 中 提\n\n出,其功能是生成相关的随机数．COT 的流程如图３ (c)所 示 ,发 送 方 的 输 入 为r,r􀱇Δ,接 收 方 的 输 入 索 引为b,COT 向接收方输出r􀱇Δb．向量不经意线性 评 估 (vectorobliviouslinearＧfunctionevaluation, VOLE)是 COT 的 广 义 定 义,接 收 方 可 以 获 得 发 送 方所持有信息的线性组合．\nKOS１５提出可以使用 COT 来实现 OT 扩展中 的基础 OT 协 议．Boyle等 人 于 [６５] ２０１８ 年 提 出 的 方 案 BCGI１８ 基 于 LPN 假 设 构 造 了 半 诚 实 安 全 的 VOLE,通 过 PCG 在 本 地 生 成 关 系 向 量．Boyle 等 人[６６]于２０１９年提出的 BCG＋１９a生成分布式密钥时 使用可穿孔的伪随机函数(puncturablepseudorandom function,PPRF)代 替 BCGI１８ 中 的 分 布 式 点 函 数 (distributedpointfunction,DPF),并 且 通 过 安 全 设置 PPRF 密 钥 将 协 议 的 安 全 性 提 升 为 恶 意 安 全 性,该方案的通信开销比IKNP０３ 减少 １０００ 倍,计 算效率只 提 高 了 ６ 倍．Schoppmann 等 人 的 [６７] 并 行 工作 SGRR１９基于 primalＧLPN 实现了 半 诚 实 安 全 的 VOLE 协议,通信效率只比IKNP０３提高 ２０ 倍, 计算效率高于 BCG＋１９a．Ferret２０[６８]基于 SGRR１９ 改进了 VOLE 方案,实现的半诚实安全方案将通信 开销减少１５倍．在半诚实方案的基础上引入一致 性 检测 实 现 恶 意 安 全 性,平 均 每 个 COT 的 运 行 时 间 比 半 诚 实 安 全 方 案 慢 １~３ns．\n以上 COT 方 案 中,BCG＋１９a 和 Ferret基 于 VOLE 实现了 OT 扩 展,而 SGRR１９ 没 有 实 现 OT 扩展．\n表１对 OT 扩展方案从安全模型、轮数、通信量 和运行时间等方面进行对比．其中,κ 取 值 为 １２８,N 为比特向量位数,通信量、运行 时 间 为 生 成 １ 个 OT 时的平均通信量、平均运行时间．通过对比得出 BCG ＋１９a为目 前 通 信 效 率 最 好 的 方 案,Ferret２０ 为 目 前计算效率最好的方案．\n\nTable１　ComparisonofOTExtensionSchemes 表１　OT 扩展技术性能对比\n\n方案\n\n恶意安全模型 轮数 通信量∕b 运行时间∕ns\n\nBea９６[５３]\n\n否\n\n２ κ的多项式\n\nIKNP０３[５４]\n\n否\n\n３\n\n１２８\n\nKK１３[５６]\n\n否\n\n３\n\n８０\n\nKOS１５[６３]\n\n是\n\n３\n\n１２８\n\nBCG＋１９b[５８]\n\n否\n\nlogN ０~３\n\nBCG＋１９a[６６]\n\n是\n\n２\n\n０．１\n\n２０９\n\nFerret２０[６８]\n\n是\n\n２,４ ０．４４\n\n１８\n\n郭 娟 娟 等 :安 全 多 方 计 算 及 其 在 机 器 学 习 中 的 应 用\n\n２１７１\n\n２．３　 秘 密 分 享 传统 的 秘 密 分 享 方 案 中,秘 密 分 发 者 将 秘 密 拆\n分为份额并分发给 参 与 方,只 有 足 够 数 量 的 秘 密 份\n额组合在一起 才 能 够 恢 复 出 秘 密 信 息．基 于 秘 密 分 享的 安 全 多 方 计 算 (secretsharingＧsecure multiparty computation,SSＧMPC)指 的 是 参 与 方 对 不 同 秘 密 数 据 的 份 额 进 行 运 算 ,得 到 计 算 结 果 的 份 额 ,足 够 数\n量的结果份额 组 合 在 一 起 能 够 恢 复 出 计 算 结 果．本 节围绕 SSＧMPC来展开介绍,而不关注 SS技术本身．\nSSＧMPC 根据秘密的生成方式可以分为基于多 项式插值的秘 密 分 享 和 加 性 秘 密 分 享．基 于 多 项 式 插值的 SSＧMPC 容易实 现 任 意 门 限,但 是 需 要 模 幂 运算,导致其计算效率低．加性秘密分享根据秘密 数 据形式可以分为算 术 秘 密 分 享 和 布 尔 秘 密 分 享,在 计算线性运算时通 常 需 要 使 用 算 术 秘 密 分 享,在 计\n算 非 线 性 运 算 时 通 常 需 要 使 用 布 尔 秘 密 分 享 ．加 性 秘 密分享的优 势 是 计 算 效 率 高,其 门 限 方 案 的 实 现 需\n要参与方持有 冗 余 份 额．目 前 SSＧMPC 在 实 际 中 应 用最广泛,能够高效地实现线性运算和非线性运算． ２．３．１　SSＧMPC 计算线性运算\nSSＧMPC 根据系 统 中 敌 手 控 制 的 参 与 方 数 量, 可分为诚 实 方 占 多 数 的 SSＧMPC 和 不 诚 实 方 占 多 数的 SSＧMPC．\n１)诚 实 方 占 多 数 SSＧMPC 在 早 期 有 一 些 经 典 方 案．GMW 方 案 于 [６９] １９８７年 被 提 出,能 够 支 持 多 个 参 与 方 进 行 布尔运算,秘密 数 据 以 异 或 的 形 式 拆 分,计 算 XOR 运算可在本 地 完 成,计 算 AND 运 算 需 要 参 与 方 两 两之 间 执 行 １ＧoutＧofＧ４ OT,导 致 交 互 轮 数 较 多． BGW 方 案 于 [７０] １９８８ 年 被 提 出,是 基 于 Shamir秘 密分享实现的 SSＧMPC 方 案,但 其 计 算 乘 法 要 用 到 随机 化 和 降 阶 处 理,导 致 开 销 较 大．Beaver 三 元 组[７１](Beavertriples)于１９９１年被提出,是 SSＧMPC 中最常用的乘 法 组 件．该 方 案 在 预 处 理 阶 段 选 取 随 机数a,b 和c,满 足c＝ab,并 为 其 生 成 加 性 份 额 ai,bi 和ci(１≤i≤n)．在 线 阶 段,参 与 方 Pi 拥 有 秘 密数据x,y 的加性份额xi,yi,Pi 在本地计算xi－ ai,yi－bi 并 广 播;收 到 其 他 参 与 方 广 播 的 份 额 后 Pi 将份额相加得到x－a,y－b,然后对已有数据计 算得到积的份额zi＝(x－a)bi＋ (y－b)ai＋ci．秘 密恢复 阶 段,每 个 参 与 方 提 供 zi,对 zi 求 和 再 与 (x－a)(y－b)相 加 便 能 恢 复 出 xy． 近年 来 由 于 机 器 学 习 等 应 用 场 景 的 需 要,涌 现 出基于 SSＧMPC 实现的 PPML 方案,包 括 ABY３ 和\n\nSecureNN 等．这 些 方 案 的 底 层 协 议 是 加 法、乘 法 和 比较等基本算子 的 SSＧMPC 协 议,高 层 协 议 实 现 了 机器学习模块的隐 私 保 护,本 节 主 要 关 注 这 些 方 案\n的底层协议．由于加法运算在本地对份额相加即 可, 乘法运算的流程相 对 复 杂,因 此 主 要 对 乘 法 运 算 进\n行分析． SSＧMPC 最初提 出 时 交 互 轮 数 多、通 信 量 也 较\n大,大多数 SSＧMPC 方案 都 是 对 这 ２ 个 指 标 进 行 优 化．优化方法主要包括引入相关随机数、将计算前 移 到预处理阶段 以 及 增 加 计 算 方 的 数 量 等．为 了 解 决 计算方的单点失效 问 题,一 些 方 案 构 造 了 门 限 秘 密\n分享来提高系统容错能力． ２００８ 年 提 出 的 Sharemind[７２]设 计 了 半 诚 实 安\n全的三方 SSＧMPC 方案．秘密分享的过程为:数据拥 有方对数据x,y 计算加性份额xi,yi(i＝１,２,３)并 分发给计算方 Pi．计 算 乘 法 的 过 程 为:Pi 在 本 地 计 算xiyi,３ 个 计 算 方 交 互 计 算 得 到 交 叉 项 xiyj (i, j＝１,２,３)．例 如 计 算 交 叉 项 x１y２,P３ 选 取 随 机 数 a１,a２ 并 分 别 分 发 给 P１,P２,然 后 计 算 w３ ＝a１a２ 作为自己的份额;P１ 和 P２ 分 别 计 算 x１＋a１,y２＋ a２ 并发送给 对 方,然 后 P１,P２ 通 过 计 算 分 别 得 到 份额 w１＝－a１(y２ ＋a２),w２ ＝y２(x１ ＋a１)．至 此, 每个 Pi 分 别 得 到 交 叉 项 x１y２ 的 份 额 wi,满 足 w１＋w２＋w３＝x１y２,其他 交 叉 项 的 计 算 同 理．最 终 Pi 将自己的本地份额与交叉项份额相加得到xy 的 份额．\n为了降低 Sharemind的轮 数 和 通 信 量,２０１６ 年 Araki等 人 提 出 的 方 案 AFL＋１６[７３]引 入 相 关 随 机 数,并通过设置冗余 秘 密 份 额 构 造 了 半 诚 实 安 全 的\n２ＧoutＧofＧ３SSＧMPC 方案．该方案设计了算术、布尔２ 种 秘 密 分 享 方 案 ,以 算 术 秘 密 分 享 为 例 ,秘 密 分 享 的\n过程为:数 据 拥 有 方 选 取 ３ 个 和 为 ０ 的l 位 长 随 机 串a１,a２,a３,满足a１＋a２＋a３＝０,然后计算秘 密 数 据x 的加性份额xi＝ai－１－x(i＝１,２,３),令i＝１ 时i－１＝３,同理可 计 算 秘 密 数 据 y 的 加 性 份 额．数 据拥有方向计算 方 Pi 分 发 份 额 (ai,xi),(bi,yi)． 计算乘 法 的 过 程 为:Pi 选 取 随 机 数αi,计 算 ri ＝ (xiyi－aibi ＋αi)∕３ 并 将ri 发 给 Pi＋１,其 中 α１ ＋ α２＋α３＝０;收到其他参与方 的 信 息 后,Pi 计 算 积 的 份额(ci,zi):ci＝－ri－１－ri,zi＝－２ri－１－ri．秘 密 恢 复 时 任 意 ２ 个 计 算 方 可 以 恢 复 出 xy．\n２０１８年提出的 ABY３[７４]受到 AFL＋１６ 设 置 冗 余份额 的 启 发,基 于 此 设 计 了 新 的 ２ＧoutＧofＧ３SSＧ MPC 方案,进 一 步 通 过 份 额 校 验 实 现 了 恶 意 安 全\n\n２１７２\n\n计 算 机 研 究 与 发 展 　２０２１,５８(１０)\n\n方案．秘密分享的过 程 为:数 据 拥 有 方 计 算 长 度 为l 位的秘密数 据x,y 的 加 性 份 额xi,yi(i＝１,２,３), 并向 ３ 个 计 算 方 Pi 分 发 份 额 (xi,xi＋１ ),(yi, yi＋１)．计算乘法的过 程 为:Pi 在 本 地 计 算 得 到 积 的 份额zi ＝xiyi＋xiyi＋１ ＋xi＋１yi ＋αi 并 将 其 发 给 Pi－１,其 中α１ ＋α２ ＋α３ ＝０．在 秘 密 恢 复 阶 段,任 意 ２个计算方可以恢复 出 xy．ABY３ 通 过 使 用 Beaver 三元组来完成份额 校 验,实 现 的 恶 意 安 全 方 案 最 多\n能够容忍一个恶意参与方． 为了降低 ABY３ 在 线 阶 段 的 通 信 量 和 交 互 轮\n数,２０１９年提出的 ASTRA[７５]将 一 个 计 算 方 的 运 算 前移到预处理阶段进行．秘密分享的过程为:在离 线 阶段数据拥 有 方 P０ 同 时 也 是 计 算 方,分 别 与 计 算 方 P１,P２ 使 用 PRF 生 成 ２ 个 随 机 数rx,１,rx,２,在 线阶段 P０ 计算秘 密 数 据 x 的 份 额 mx ＝x＋rx 并 发送给P１,P２,其 中rx ＝rx,１＋rx,２,P１,P２ 分 别 设 置x 的 份 额 为 (mx ,rx,１),(mx ,rx,２),秘 密 y 的 份 额同理可得．计算乘法的过程为:离线阶段 P０ 和 P１ 生成随 机 数rz,１,rxy,１,P０ 和 P２ 生 成 随 机 数rz,２, rxy,２,满足rxy,１＋rxy,２＝rxry ．在 线 阶 段 的 计 算 过 程 中,２个计算方 Pi(i＝１,２)分 别 计 算 mz,i＝(i－１) ×mxmy －mxry,i－myrx,i＋rz,i＋rxy,i,双 方 交 换 份 额相加得到 mz ＝xy＋rz,１＋rz,２,设 置 份 额 为 (mz , rz,i)．在秘密恢复阶段,任意 ２ 个 计 算 方 可 以 恢 复 出 xy＝mz －rz,１－rz,２．ASTRA 的 恶 意 安 全 方 案 在 半 诚实安全方案的基 础 上 加 入 一 致 性 检 测,在 输 入 和\n输出阶段 通 过 对 比 份 额 的 哈 希 值 来 检 查 份 额 一 致\n性,在计算阶段使用 Beaver三元组验证正确性． ２０２０年提出的 BLAZE[７６]对 ASTRA 中一致性\n检测的预处理 过 程 进 行 改 进,将 其 通 信 量 减 少 １∕７． 同年,TRIDENT[７７]用 另 一 种 思 路 来 提 升 ASTRA 的性能,设计了四方秘密分享方案,在 线 阶 段 需 要 ３ 个参与方两两之间 会 生 成 积 的 份 额 及 其 哈 希 值,并\n发给另一方检验一致性． SecureNN[７８]是 ２０１９ 年 提 出 的 半 诚 实 安 全 三\n方及四方 SSＧMPC 方 案．数 据 拥 有 方 生 成 m ×n 维 秘密矩 阵x,n×v 维 秘 密 矩 阵y 的 加 性 份 额xi,yi (i＝１,２),并 分 发 给 计 算 方 P１,P２,矩 阵 元 素 是 长 度为l 位 的 比 特 串．三 方 秘 密 分 享 方 案 中 计 算 乘 法 时采用 Beaver三 元 组 的 思 想,P０ 作 为 辅 助 节 点 来 生成 Beaver三元组以及其他随机数,P１ 和 P２ 是计 算节点．四方 秘 密 分 享 方 案 中 P１,P２ 是 计 算 节 点, P３,P４ 是辅助计 算 节 点．计 算 乘 法 运 算 时 首 先 P１, P２ 分别 在 本 地 计 算 x１y１,x２y２;然 后,P１ 分 别 把\n\nx１,y１ 发给 P３,P４,P２ 分 别 把y２,x２ 发 给 P３,P４; 收到份额后,P３,P４ 分别 计 算 交 叉 项x１y２,x２y１ 并 发送给 P１,P２．在 秘 密 恢 复 阶 段,将 P１ 和 P２ 拥 有 的 份 额 相 加 即 可 恢 复 出 矩 阵 xy．\n２)不 诚 实 方 占 多 数 在恶意安全的 SSＧMPC 方 案 中,可 以 通 过 向 秘 密份额添加消息鉴 别 码,来 检 测 计 算 过 程 中 计 算 方\n是否存 在 篡 改 行 为．这 类 方 案 主 要 包 括 BDOZ 和 SPDZ等,能够用于不诚 实 方 占 多 数 的 场 景,达 到 了 中 止 安 全 性 ,即 发 现 参 与 方 恶 意 行 为 时 中 止 协 议 ．\nBendlin等人 于 [３５] ２０１１ 年 提 出 了 BDOZ 消 息 鉴别码,在２ 个 参 与 方 的 场 景 下,P１,P２ 分 别 拥 有 全局密钥 Δ１,Δ２,以及秘密x 的 加 性 份 额x１,x２．秘 密x 的 BDOZ 份 额 用 [x]来 表 示,P１ 拥 有 [x]１ ＝ (x１,M１,K１),P２ 拥 有 [x]２ ＝ (x２,M２,K２)．其 中 K１,K２ 是 MAC 密 钥,M１,M２ 是 MAC 值,满 足 关 系 M１＝K２＋Δ２x１,M２＝K１＋Δ１x２．鉴 别 P１ 的 份 额 x１ 时,P１ 向 P２ 提 供 (x１,M１),P２ 使 用 (K２, Δ２)验证等式 M１＝K２＋Δ２x１ 是 否 成 立,若 等 式 成 立则鉴别通过,鉴 别 P２ 的 份 额 同 理．BDOZ 可 以 扩 展到n 个参与方的 场 景,但 是 每 个 参 与 方 都 需 要 对 其他n－１ 个 参 与 方 的 MAC 密 钥 分 别 生 成 一 个 MAC,存 储 开 销 和 参 与 方 的 数 量 成 线 性 关 系 ．\n为了解决 BDOZ 中 的 存 储 开 销 问 题,Damgård 等人 于 [７９] ２０１２年提出另一种消息鉴别码 SPDZ,每 个参 与 方 只 存 储 恒 定 数 量 的 MAC．SPDZ 型 MAC 表示为 M (x)＝α×x,其 中α 为 MAC 全 局 密 钥、x 为秘密 数 据．在 SPDZ 方 案 中,每 个 参 与 方 Pi(１≤ i≤n)持有密钥α 的加性秘密份额αi,x 的加性秘密 份额xi 和 MAC 值 M (x)的加性秘密份额 M (x)i． 验证 MAC 时需要先恢复出x,α 和 M (x)再检查等 式 M (x)＝α×x 是 否 成 立．SPDZ 型 MAC 满 足 加 法、常 数 乘 法 的 同 态 性,计 算 乘 法 时 需 Beaver三 元 组协 助 来 验 证 份 额．具 体 实 现 时,SPDZ 在 预 处 理 阶 段使用 FHE 生成 Beaver三元组和 MAC,并使用零 知识证明保证 FHE 密文的正确性．\nDamgård等人于 ２０１３ 年 提 出 SPDZ 的 改 进 方 案[８０],该方案在验证 MAC 时无需恢 复 MAC 密 钥, 因此可以继续 对 还 未 验 证 的 秘 密 数 据 进 行 计 算．验 证 MAC 时各参与方 首 先 广 播 xi,收 到 广 播 的 份 额 后计算得到x,然后各参与方分别计算 Mi－xαi,对 n 个参与方的 Mi－xαi 求 和,若 求 和 的 结 果 为 ０ 则 验证通过．\n\n郭 娟 娟 等 :安 全 多 方 计 算 及 其 在 机 器 学 习 中 的 应 用\n\n２１７３\n\nKeller等人 于 [４７] ２０１６ 年 提 出 MASCOT,保 持 SPDZ的在线阶段不变,在预处理阶段使用 COT 生 成 Beaver三 元 组．Keller等 人 于 [８１] ２０１８ 年 提 出 方 案 KPD２０１８,使 用 BGV 的 加 法 同 态 代 替 原 始 方 案 中 的 FHE 来 生 成 Beaver 三 元 组,获 得 了 比 MASCOT 更好的性能．\nCramer等 人 [８２]于 ２０１８ 年 提 出 了 有 限 环 上 的 方 案 SPDZ２K ,环上的计 算 更 接 近 于 CPU 计 算 单 元 的 实际计算情况,有 限 环 上 的 安 全 计 算 具 备 很 高 的 实\n际意义,该方案的效率和有限域上的方案基本一致． ２．３．２　SSＧMPC 计算非线性运算\nSSＧMPC 实现的非线性运算包括比较运算和最 高 有 效 位 (mostsignificantbit,MSB )运 算 ．\nABY３ 方案计 算 线 性 运 算 采 用 算 术 秘 密 分 享, 计算非线性运算采 用 布 尔 秘 密 分 享,算 术 份 额 转 换\n为布尔份额需要做比特分解运算,即将长度为l 位的 算术份额x 转换为布尔份额x[１],x[２],􀆺,x[l]∈\nl\n∑ {０,１},份额满足x ＝ ２i－１x[i]．布尔份额 在 秘 密 i＝１\n恢复时需要计算比特间的加法,考虑低位向高位的进\n位 问 题 ,使 用 并 行 前 缀 加 法 器 (parallelprefixadder, PPA)实现．比较秘 密 值 x 和 常 数c 的 大 小 时,可 以 转换为计算x－c 的最高有效位．参与方先计算x－ c 的 算 术 份 额,然 后 对 计 算 结 果 进 行 比 特 分 解 得 到 x－c 的 布 尔 份 额,最 后 使 用 PPA 恢 复 出 最高有效 位即可得到x 和c 的大小关系．ABY３ 实 现 安 全 比 较 运算需要交互logl＋１轮,通信量为９l 位．\n为了降低 轮 数 复 杂 度 和 通 信 量,ASTRA 未 使 用 PPA,而是只使用秘密分享 来 完 成 最 高 有 效 位 的 计算,只 需 要 ３ 轮 交 互 和 ４(l＋２)位 的 通 信 量 即 可 完成运算．根 据 前 文 介 绍 的 ASTRA 的 秘 密 分 享 方\n\n式,P１,P２ 分 别 拥 有 秘 密 x 的 份 额 (mx ,rx,１ ), (mx ,rx,２),P０ 拥 有 份 额rx ,其 中rx ＝rx,１ ＋rx,２, mx ＝x＋rx ．计 算 最 高 有 效 位 时,离 线 阶 段 P１,P２ 选取长度为l 位的随机数r,r′并 令s＝MSB(r)．当 ２个 数 用 二 进 制 补 码 的 形 式 表 示 时,计 算 乘 法 时 积 的正负等于 ２ 个 乘 数 正 负 的 异 或,即 MSB (rx)＝ MSB(r)􀱇MSB (x)．因 此,在 线 阶 段 的 计 算 过 程 中,首先 P１ 计算x１＝mx －rx,１并 将rx 的 份 额rx１ ＋r′发送给P０,P２ 计算 x２＝ －rx,２并 将rx 的 份 额 rx２－r′发送给P０．然 后 P０ 将 份 额 相 加 得 到rx,计 算最高有效 位s′＝MSB (rx),然 后 计 算s′的 份 额 s′１,s′２,并分别发送给 P１,P２．最 后 参 与 方 Pi(i＝１, ２)计算 MSB (x)i ＝si 􀱇s′i ．秘 密 恢 复 阶 段,任 意 ２ 个参与方都能够恢复出最高有效位 MSB(x)．\nSecureNN 实现的比 较 运 算 可 以 比 较 秘 密 值 和 常数值的大小,参与方拥有Zp 上 秘 密 值x 的 比 特 份 额和明 文 比 特 串r,秘 密 值 和 常 数 值 长 度 均 为l 位． 从低位 到 高 位 依 次 为 第 １,２,􀆺,l 个 比 特 计 算 比 较 运算时,对x 和r 的 第i 位 从 高 位 到 低 位 依 次 计 算 wi ＝x[i]􀱇r[i]＝x[i]＋r[i]－２x[i]r[i],ci ＝r\nl\n∑ [i]－x[i]＋１＋ wk．由 于r[i]－x[i]＋１≥０, k＝i＋１ l\n∑ 所以只要存在ci＝０则说明同时满足 wk ＝０和 k＝i＋１\nr[i]－x[i]＝ －１,即 x 和r 的 第i＋１ 位 至l 位 都 相等且第i 位x[i]＞r[i],由 此 可 得 x＞r;若 不 存 在ci＝０ 则 x＜r．SecureNN 计 算 MSB 运 算 是 通 过将Zl－１上a 的最 高 有 效 位 计 算 转 换 为Zl上 ２a 的 最 低 有 效 位 计 算 ,需 要 调 用 比 较 运 算 来 实 现 ．\n表２ 对 SSＧMPC 方 案 的 安 全 模 型 和 性 能 进 行\n了 对 比 ．我 们 对 乘 法 、比 较 (或 最 高 有 效 位 )运 算 的\n\n方案\nSharemind[７２] AFL＋１６[７３]\nABY３[７４]\n\n参与方\n３ ３ ３\n\nASTRA[７５]\n\n３\n\nBLAZE[７６]\n\n３\n\nTRIDENT[７７]\n\n４\n\n３ SecureNN[７８]\n４\n\nTable２　ComparisonofSSＧMPCSchemes 表２　SSＧMPC 安全模型和性能比较\n\n门限方案\n否 否 是\n是 是 是 否 否\n\n安全模型\n半诚实 半诚实 半诚实\n恶意 半诚实\n恶意 恶意 恶意 半诚实 半诚实\n\n乘法 通 信 量∕b\n５l ３l ３l ９l ２l ４l ３l ３l ２(２mn＋２nv＋mv)l ２(２mn＋nv＋mv)l\n\n轮数 ３ １ １ １ １ １ １ １ ２ ２\n\n比 较∕最 高 有 效 位\n\n通 信 量∕b\n\n轮数\n\n９l １８l ４l＋２ ８l＋１ ９l ５l＋２ ４llogp＋１６l＋２ ４llogp＋２l＋４\n\n１＋logl １＋logl\n３ ４ １＋logl ３ ５ ６\n\n２１７４\n\n计 算 机 研 究 与 发 展 　２０２１,５８(１０)\n\n通信量 和 交 互 轮 数 ２ 个 方 面 进 行 比 较,其 中l 为 秘 密比特串长 度,p 为 有 限 域 的 大 小．通 过 对 比 发 现, ASTRA 是 半 诚 实 安 全 模 型 下 性 能 最 好 的 方 案, TRIDENT 和 BLAZE 在恶意 安 全 模 型 下 实 现 的 乘 法运算具有较好的 性 能,但 是 在 计 算 最 高 有 效 位 时\nTRIDENT 的性能更好．SecureNN 的 乘 法 性 能 为 矩 阵乘法运算的性能,其 他 方 案 是 单 个 数 据 乘 法 运 算\n的性能． ２．４　 同 态 加 密\n同态 加 密 支 持 对 多 个 数 据 的 密 文 进 行 运 算,解\n密得到的结果 与 数 据 明 文 运 算 结 果 一 致．即 明 文 与 密文的运算满足同态性质:\nDec(Enc(x＋y))＝Dec(Enc(x)􀱇Enc(y)), 其 中 ,＋ 和 􀱇 分 别 是 明 文 和 密 文 空 间 上 的 运 算 ．\n早在 １９７８ 年 Rivest等 人 就 提 出 了 隐 私 同 态 (privacyhomomorphism)的 概 念,但 这 个 概 念 一 直 被认为 是 一 个 开 放 性 的 问 题,直 到 ２００９ 年 Gentry 提出首个全同态加 密 方 案,证 明 了 在 加 密 数 据 上 计\n算任何函数的可行性． 同态 加 密 可 以 划 分 为 部 分 同 态 加 密 (partial\nhomomorphic encryption, PHE)、浅 同 态 加 密 (somewhathomomorphicencryption,SHE)和 全 同态 加 密 (fullyhomomorphicencryption,FHE)． 部分同态加密仅支 持 单 一 类 型 的 密 文 同 态 运 算,主 要包 括 加 法 同 态 (additivehomomorphicencryption, AHE)和 乘 法 同 态 (multiplicative homomorphic encryption,MHE),代 表 方 案 分 别 为 Paillier[８３]和 ElGamal[８４]．浅同态加密 支 持 低 次 多 项 式 运 算．全 同 态加密的构造均遵循 Gentry的思想蓝图,利用自举 (bootstrapping)技 术 将 浅 同 态 加 密 方 案 转 换 为 全 同 态加密方案,即通过 同 态 地 执 行 解 密 电 路 以 更 新 密 文、约减噪音,从 而 支 持 进 一 步 的 同 态 运 算．目 前 主 流的 FHE 方 案 大 多 基 于 格 上 的 困 难 问 题 (主 要 是 LWE,RLWE)构 造,代 表 方 案 包 括 BGV[８５], BFV[８６Ｇ８７],GSW[８８],CGGI[８９],CKKS[９０]等 ．\n基于 (R)LWE 构 造 的 同 态 方 案 中,密 钥 切 换 (keyswitching)技 术 和 模 切 换 (modulusswitching) 技术分别用于解决同态乘法运算导致的密文维数和 噪音量级增长问题．为了降低自举导致的性能开 销, BGV 方案利用密 钥 切 换 和 模 切 换 技 术 实 现 了 一 种 不 需 要 自 举 就 能 构 造 的 层 次 全 同 态 加 密(leveledfully homomorphicencryption,leveledFHE)方 案 ．层 次 全 同态加密根据方案预期计算的电路深度设置参数, 能够计算任意多项 式 深 度 的 电 路,已 经 可 以 满 足 多\n\n数应用场景下的计 算 需 求．BFV 方 案 中 提 出 了 一 种 新 的 张 量 技 术,构 造 了 一 个 标 量 不 变 的 leveled FHE 方 案．GSW 方 案 是 基 于 近 似 特 征 向 量 法 建 立 的 简 单 全 同 态 加 密 方 案 ,消 除 了 密 钥 切 换 过 程 ,使 得 同态加法和乘法在很大程度上就是矩阵的加法和乘 法．CGGI方案通过 在 环 面 上 构 造 RGSW 和 RLWE 的 外 部 积 ,对 加 密 比 特 进 行 门 自 举 ,在 运 行 时 间 和 可 用性 上 具 有 优 势．CKKS 方 案 构 造 类 似 于 BGV 方 案 ,支 持 定 点 数 的 近 似 运 算 ．\n根据 明 文 空 间 的 不 同,同 态 加 密 方 案 可 以 进 一 步分为逐字 同 态 加 密 (wordＧwise HE)和 逐 比 特 同 态加密(bitＧwiseHE)两 类．逐 字 运 算 的 HE 方 案 例 如 BGV,BFV 和 CKKS 等,优 点 是 支 持 打 包 技 术, 可以将多个明文打包为单个密文并以单指令多数据 方 式 对 明 文 进 行 操 作 ,提 高 了 运 算 效 率 ;早 期 的 逐 字 运算方案只支持加 法 及 乘 法 等 多 项 式 计 算,难 以 有 效支持除 法、根 号 等 非 多 项 式 运 算,２０２０ 年 Cheon 等人 提 [９１] 出 通 过 复 合 多 项 式 近 似 符 号 函 数 使 用 CKKS来实现同 态 比 较．逐 比 特 运 算 的 HE 方 案 包 括 TFHE,FHEW[９２]等,优 点 是 可 以 支 持 非 多 项 式 运算,但是由于不能 使 用 打 包 技 术 导 致 性 能 显 著 低 于逐字运算方案．阿里巴巴于２０２０年提出的全 同 态 加 密 技 术 PEGASUS 有 效 桥 接 逐 字 运 算 方 案 CKKS和逐比特运 算 方 案 FHEW 两 类 全 同 态 加 密 技术,使用 CKKS 密 文 有 效 计 算 线 性 函 数,转 换 为 FHEW 密文形式后可通过查表来计算非线性运算．\n单密钥同态方案只能对同一个密钥加密的密文 进行运 算,而 多 密 钥 全 同 态 加 密 (MultikeyＧFHE, MKHE)支 持 对 不 同 密 钥 加 密 的 密 文 进 行 同 态 运 算,但 需 要 参 与 方 联 合 解 密 密 文．２０１２ 年 首 个 NTRU 型的 MKHE 方 案 提 出[９３],此 后 MKHE 技 术 迅 速 发 展,相 继 提 出 GSW 型 的 MKHE[９４Ｇ９７]、 BGV 型 的 MKHE[９８Ｇ９９]和 TFHE 型 的 MKHE[１００]． MKHE 方案的构造和实现上仍需进一步的优化,主 要关注多跳功能(允 许 运 算 过 程 中 有 新 的 参 与 方 加 入 )的 实 现 、密 钥 (参 与 方 )数 量 上 限 、密 文 增 长 、密 钥 切换优化等多个方面．\n全同态加密可用于机器学习中的隐私保护并保 持非交互性,比如 PEGASUS[１０１]可以使用２种同 态 技术实 现 机 器 学 习 中 的 线 性 和 非 线 性 运 算．文 献 [１００]中数据拥有 方 和 模 型 拥 有 方 分 别 使 用 自 己 的 公 钥 加 密 数 据 ,并 将 其 发 送 给 服 务 器 ,服 务 器 能 够 对 ２种密钥加密的密文进行运算．\n\n郭 娟 娟 等 :安 全 多 方 计 算 及 其 在 机 器 学 习 中 的 应 用\n\n２１７５\n\n３　MPC 基础技术的比较\n\n本节对 混 淆 电 路、秘 密 分 享 和 同 态 加 密 ３ 类 MPC 基础技术的 计 算 方 数 量、计 算 量、通 信 量 和 交 互 轮 数 进 行 分 析 对 比 ,如 表 ３ 所 示 :\n\nTable３　ComparisonofMPCFundamentalSchemes 表３　不同 MPC 基础技术对比\n\n技术 计算方数量\n\n计算量\n\n通信量\n\n交互轮数\n\nGC\n\n２,n\n\n中\n\n大\n\n恒定\n\nSS\n\n＞２\n\n小\n\n中\n\n线性\n\nHE\n\n２,n\n\n大\n\n中\n\n恒定\n\nGCＧMPC 由于实现了 底 层 的 基 本 逻 辑 运 算 符, 因此具有通用性,可 面 向 不 同 的 应 用 逻 辑．GCＧMPC 一般有２个 计 算 方,若 是 基 于 BMR 实 现 的 协 议 则 可以支持多个 计 算 方．混 淆 电 路 的 计 算 开 销 主 要 是 对 称 加 密 或 哈 希 函 数 的 计 算 ,计 算 开 销 较 小 ;混 淆 电 路交互轮数是恒定 的 ２ 轮,通 信 量 与 电 路 门 的 数 量 成正比．GCＧMPC 在计算简单逻辑运算时具有优势, 如比较运算和加法 运 算,但 是 在 计 算 复 杂 运 算 时 会 产 生 庞 大 的 电 路 从 而 导 致 通 信 量 很 大 、性 能 降 低 ．目 前没有出现 针 对 大 数 据 量 复 杂 计 算 的 GCＧMPC 处 理平台,GCＧMPC 只 在 一 些 小 数 据 量、简 单 计 算 场 景 中 有 具 体 应 用 ,比 如 拍 卖 、薪 水 公 平 性 调 研 等 ．\nSSＧMPC 的计算方数量一般大于２,SSＧMPC 计 算方的运算都是简 单 的 加 法 和 乘 法 运 算,不 涉 及 模 幂运算,因此计算开销小．SSＧMPC 的轮数和电路 深 度成线性关系,导致 计 算 方 端 到 端 通 信 会 有 较 长 时 延．近年来随 着 算 法 优 化 和 网 络 带 宽 不 断 提 升,SSＧ MPC 的性能优势不断凸显,逐渐成为目前应用最广 的 MPC 技术．SSＧMPC 不仅能高效计算加法和乘法 等 线 性 运 算 ,还 能 够 计 算 比 较 大 小 、最 高 有 效 位 和 除 法 等 非 线 性 运 算．目 前 SSＧMPC 的 实 际 应 用 有 Sharemind MPC 等通用计算平台,以及 CrypTFlow 等 PPML 开源实现．\nHEＧMPC 通常支持两方运 算,多 密 钥 HE 支 持\n\n多方运 算．HEＧMPC 的 轮 数 恒 定、通 信 量 比 前 ２ 种 MPC 技术小．但是 HEＧMPC 的 计 算 开 销 很 大,其 中 同 态 加 法 和 标 量 乘 法 (明 文 和 同 态 密 文 相 乘 )计 算 开 销相对较小,然 而 同 态 乘 法 无 论 是 自 举,还 是leveled FHE 都需要对密 文 进 行 降 维 和 降 噪 从 而 产 生 大 量 计算开销．此外,一些 HE 方案密钥和密文空间复杂 度高,需要较大的存储开销．对于一些具有深度较 大 的布尔或算术电路,同 态 加 密 计 算 效 率 难 以 被 实 际 应用接受．\n在实 际 应 用 中,计 算 函 数 一 般 是 线 性 运 算 和 非 线性运算的组合,由于 GC,SS和 HE 适用于不同场 景,将多种 MPC 技 术 结 合 的 混 合 技 术 能 够 获 得 更 好的性能．表４中对现有 MPC 的实现进行总结．\n\nTable４　TheImplementationsofMPCSchemes 表４　MPC 方案方现\n\n技术\n\n方案实现\n\nGC\n\nEMPＧtoolkit[１０２],OblivＧC[１０３], ObliVM[１０４],CBMCＧ GC[１０５],Frigate[１０６]\n\nOT EMPＧtoolkit[１０２],LibOTe①\n\nMPＧSPDZ[１０７],Wysteria[１０８],PICCO[１０９],FRESCO② , SS JIFF③ ,MPyc④\nSEAL⑤ ,HElib⑥ ,PALISADE⑦ ,HEAAN⑧ ,FHEW⑨ , HE TFHE⑩ ,Lattigo􀃊 􀁉 􀁓 ,cuFHE􀃊 􀁉 􀁔 ,FVＧNFLib􀃊 􀁉 􀁕 Hybrid ABY[１１０],ABY３[７４],SCALEＧMAMBA􀃊 􀁉 􀁖\n\n４　 隐 私 保 护 机 器 学 习\n机器 学 习 广 泛 应 用 于 计 算 机 视 觉、语 音 识 别 和 自然语言处理等领域．图４为机器学习层次结构 图, 第１层为机器学习 典 型 算 法,第 ２ 层 为 机 器 学 习 组 成 模 块 ,第 ３ 层 为 机 器 学 习 基 本 算 子 ．\n机 器 学 习 算 法 主 要 包 括 神 经 网 络 (neural networks,NN)、线 性 回 归 (linearregression)和 逻 辑回归 (logisticregression)等．神 经 网 络 是 机 器 学 习 应 用 最 广 泛 的 算 法 ,由 输 入 层 、隐 藏 层 和 输 出 层 构 成,其 中 隐 藏 层 包 括 卷 积 层 (convolutionallayer, CONV)、全 连 接 层 (fullyconnectedlayers,FC)和\n\n　① https:∕∕github．com∕osuＧcrypto∕libOTe　　　　　　　　　　　　　② https:∕∕github．com∕aicis∕fresco\n\n　③ https:∕∕github．com∕multiparty∕jiff\n\n④ https:∕∕github．com∕lschoe∕mpyc\n\n　⑤ https:∕∕github．com∕microsoft∕SEAL\n\n⑥ https:∕∕github．com∕homenc∕HElib\n\n　⑦ https:∕∕git．njit．edu∕palisad∕PALISADE\n\n⑧ https:∕∕github．com∕snucrypto∕HEAAN\n\n　⑨ https:∕∕github．com∕lducas∕FHEW\n\n⑩ https:∕∕github．com∕tfhe∕tfhe\n\n　􀃊􀁉􀁓 https:∕∕github．com∕ldsec∕lattigo\n\n􀃊 􀁉 􀁔 https:∕∕github．com∕vernamlab∕cuFHE\n\n　􀃊􀁉􀁕 https:∕∕github．com∕CryptoExperts∕FVＧNFLlib\n\n􀃊 􀁉 􀁖 https:∕∕github．com∕KULeuvenＧCOSIC∕SCALEＧMAMBA\n\n２１７６\n\n计 算 机 研 究 与 发 展 　２０２１,５８(１０)\n\nFig．４　Thehierarchyofmachinelearning 图 ４　 机 器 学 习 层 次 结 构 图\n池 化 层 (poolinglayer)．卷 积 层 的 运 算 是 过 滤 器 矩 阵 和数据特征向量的 内 积 运 算;全 连 接 层 的 运 算 是 先 计算神经元向量与权重矩阵的内积再与偏移向量相 加;池化层是计算过 滤 器 窗 口 内 元 素 的 最 大 值 或 平 均值,分别称为最大池化层和平均池化层．神经网 络 隐 藏 层 和 输 出 层 都 要 使 用 激 活 函 数 (activation function)为神经元 引 入 非 线 性 因 素,使 得 神 经 网 络 可以逼近任何非线 性 函 数,隐 藏 层 常 用 的 激 活 函 数 有 ReLU,Sigmoid 和tanh．线性回归和 逻 辑 回 归 算 法 相 对 简 单 ,都 可 以 看 作 是 单 层 神 经 网 络 ,其 中 逻 辑 回归使用了Sigmoid 激活函数．\n从 机 器 学 习 底 层 的 基 本 算 子 来 看 ,卷 积 层 、全 连 接层和平均 池 化 层 可 以 使 用 加 法 和 乘 法 ２ 种 线 性 运算实现．最大 池 化 层 可 以 使 用 比 较 大 小 或 最 高 有 效位等非线性运算 来 实 现．激 活 函 数 在 PPML 方 案 中通常被转换为线性运算 和非线性运算的 组合, 例如将 ReLU 表 示 为 ReLU (x)＝ max(０,x)＝ (MSB(x)􀱇１)×x,文 献 [１１１]中 提 出 可 以 使 用 多 项式来近似激活函数Sigmoid(x)＝１∕(１＋e－x ): Sigmoid(x)＝ ìíïïx０,＋x(１＜∕２()－,１∕(２－)１,∕２)≤x≤(１∕２),\nîïï１,x＞(１∕２)． 将激 活 函 数 转 换 为 加 法、乘 法 和 比 较 等 基 本 算 子组合函数 的 方 法,可 以 更 好 地 使 用 MPC 来 进 行 运算． 神经网络模型训练最常用的优化算法是梯度下 降 优 化 (gradientdescentoptimization)算 法 ,包 括 正 向传播和反向传播 ２ 个 过 程:正 向 传 播 是 输 入 信 息 通过输入层经隐藏 层 逐 层 处 理 并 传 向 输 出 层,然 后 对输出值计算损失 函 数;反 向 传 播 是 依 据 微 积 分 中 的链式法则沿着输出层到输入层计算中间变量和参 数 的 梯 度 ,并 更 新 参 数 ;训 练 模 型 需 要 重 复 正 向 传 播 和反向传播多 次 直 到 模 型 收 敛．神 经 网 络 推 理 的 运 算是一次正向 传 播 的 过 程．在 机 器 学 习 的 计 算 过 程\n\n中,用户数据和 模 型 参 数 是 浮 点 数 的 形 式,而 MPC 只能对整 数 类 型 的 数 据 做 运 算,因 此 在 使 用 MPC 完成 PPML 时,要 将 浮 点 数 转 换 为 固 定 点 数 (固 定 精 度 的 整 数 ),并 且 在 计 算 乘 法 后 要 计 算 截 断 运 算 ．\n机器学习分为３种明文架构,在客户端 服务器 架 构 中 ,客 户 端 向 服 务 器 发 送 明 文 数 据 ,服 务 器 计 算 推理结果并返回给客户端．在外包计算架构中,数 据 拥 有 方 (模 型 拥 有 方 )将 其 数 据 (模 型 )发 送 给 一 组 外 包服务器,服务器得 到 运 算 结 果 后 将 其 返 回 给 数 据 拥有方．在联邦学习架构中,客户端在本地使用私 有 数据训练得到局部模型并将其上传到中央服务器, 服务器聚合得到更新的模型．\n针对明文的机器学习架构无法保证用户私有数 据和服务商模型参 数 的 隐 私 性,在 明 文 架 构 中 引 入 MPC 技 术 能 够 实 现 隐 私 保 护,得 到 ３ 种 基 于 MPC 的 PPML 架 构,分 别 为 安 全 客 户 端 服 务 器 架 构 (secureclientserver,SＧCS)、安 全 外 包 计 算 (secure outsourcedcomputation,SＧOC)、安 全 联 邦 学 习 (securefederatedlearning,SＧFL),如 图 ５ 所 示 :\nFig．５　TheconstructionofPPLM based MPC 图５　基于 MPC 的 PPML 架构图\n基于 SＧCS架构的 PPML 方案用于做神经网络 推理,允许客户端在 不 向 服 务 器 透 露 其 私 有 数 据 的 情况下获得神经网 络 推 理 结 果,同 时 保 护 服 务 器 模\n\n郭 娟 娟 等 :安 全 多 方 计 算 及 其 在 机 器 学 习 中 的 应 用\n\n２１７７\n\n型参数的隐私．该 架 构 有 时 需 要 客 户 端 和 服 务 器 协 同 计 算 ,由 于 服 务 器 拥 有 更 强 的 算 力 ,在 设 计 算 法 时 倾向于为服务器分配相对复杂的运算．与明文 CS架 构 相 比 ,SＧCS 架 构 中 客 户 端 通 常 需 要 参 与 运 算 ．\n基于SＧOC 架构的 PPML 方案支持神经网络的 训练和推理．数 据 拥 有 方 对 私 有 数 据 计 算 份 额 后 发 送 给 一 组 不 会 合 谋 的 服 务 器 ．在 神 经 网 络 推 理 时 ,模 型参数拥有方以秘密分享的方式将其机器学习模型 托管到一组服务器 上,客 户 端 将 私 有 数 据 秘 密 分 享 给 这 组 服 务 器 ,每 个 服 务 器 对 私 有 数 据 份 额 、模 型 参 数份额进行模型推 理 的 协 同 计 算,每 个 服 务 器 将 得 到的推理结果份额 返 回 给 客 户 端,客 户 端 对 其 进 行 秘密恢复后可 得 到 完 整 的 推 理 结 果．在 神 经 网 络 训 练时,多个数据拥有 方 以 秘 密 分 享 的 方 式 将 数 据 集 托管到一组服务器 上,服 务 器 在 联 合 数 据 集 上 训 练\n\n机器学习模 型．与 明 文 OC 架 构 不 同,SＧOC 架 构 的 计算服务器彼此之间不能合谋．\n基于 SＧFL 架构的 PPML 方案可以防止中央服 务器执行模型逆向 攻 击(modelinversionattack)来 推测出用户的私有训 练 集,与 明 文 FL 架 构 不 同,SＧ FL 架构客户端在本地得到局部模型参数后,需要对 其加密后再上传至中央服务器． ４．１　基于SＧCS架构的 PPML\n从 MPC 技术、性 能 和 准 确 率 ３ 个 方 面 对 基 于 SＧCS架构的 PPML 进 行 总 结,如 表 ５ 所 示．表 ５ 中 的方案都实现了多 个 基 准 工 作 的 评 估,本 节 选 取 部 分评估实 验 来 对 比 性 能．其 中 Delphi和 CrypTFlow２ 使用深 度 神 经 网 络 ResNetＧ３２ 对 CIFARＧ１００ 数 据 集进行推理,其余方 案 只 在 浅 层 神 经 网 络 实 现 了 对 MNIST 数据集的推理．\n\nTable５　ThePPMLSchemesbasedonSＧCSArchitecture 表５　基于 SＧCS架构的 PPML 方案\n\n神经网络 类型\n\n方案 CryptoNets[１１２](ICML􀆳１６)\n\nMPC 技术\n\n线性层\n\n非线性层\n\nleveledFHE leveledFHE\n\n性能 协 议 运 行 时 间/s\n２９７．５０\n\nMiniONN[１１３](CCS􀆳１７)\n\nAHE＋SS\n\nGC,SS\n\n１．２８\n\nChameleon[１１４](ASIACCS􀆳１８) NN\nGAZELLE[１１５](USENIX􀆳１８)\n\nSS AHE\n\nGC,SS GC\n\n２．２４ ０．２９\n\nDelphi[１１６](USENIX􀆳２０)\n\nAHE＋SS\n\nGC＋SS\n\n６．９９\n\nCrypTFlow２[４６](CCS􀆳２０)\n\nAHE,COT\n\nOT\n\n０．６３\n\nDeepSecure[１１７](IACR􀆳１８)\n\nGC\n\nGC\n\nBNN\n\nXONN[１１８](USENIX􀆳１８)\n\nOT＋GC\n\nGC\n\n　 注 :“＋ ”表 示 需 要 结 合 ２ 种 技 术 ;“,”表 示 ２ 种 技 术 任 选 其 一 ．\n\n９．６７ ０．１６\n\n通 信 量/MB ３７２．２０ ４７．６０ １０．５０ ８．００\n７９１．００ ３８．２８\n\n准确率 /％ ９８．９５ ９９．００ ９９．００\n９２．００ ９３．２０ ９９．００ ９９．００\n\n　　 从 实 现 SＧCS 的 MPC 技 术 来 看,CryptoNets, DeepSecure分别是基于单一技术 HE 和 GC 设计的 方案,分别产生了较大的计算开销和通信开销．之 后 的 PPML 方案考 虑 线 性 层 和 非 线 性 层 的 不 同 计 算 特性,组合多种 MPC 技 术 实 现 安 全 运 算,对 此 类 方 案分析为:\n１)SＧCS架 构 的 线 性 层 实 现．主 要 使 用 AHE 和 SS技术,标量乘法可以转换为 AHE 运算．MiniONN, GAZELLE 和 Delphi都 使 用 AHE 实 现 了 线 性 层． GAZELLE 与 MiniONN 相比,减少了同态运算次数、 客户端和服务器的交互次数,并且设计了适用于机器 学习的同态线性代数核．Delphi与 GAZELLE 相 比, 将在线阶段繁 重 的 同 态 运 算 前 移 到 预 处 理 运 算,降 低了在线阶段的计算开销．Chameleon和 CrypTFlow２ 分别 使 用 SS,COT 来 实 现 线 性 层 的 运 算．此 外,\n\nDeepSecure和 XONN 都是应 用 于 模 型 参 数 为 二 进 制数的网络,因此使用 GC 来实现线性运算．\n２)SＧCS 架 构 的 非 线 性 层 实 现．主 要 使 用 SS, GC 和 OT 技术,使用 SS来执行非线性层的运算．通 常先对非线性运算进行多项式近似,然后再使用 SS 来执行运算,近 似 运 算 会 导 致 准 确 率 降 低．使 用 GC 来执行非线性层的 运 算 虽 然 可 以 提 高 准 确 率,但 是 会增加 通 信 开 销,例 如 GAZELLE．CrypTFlow２ 使 用 OT 来执行非线 性 运 算,能 够 同 时 保 证 准 确 率 和 通信效率,获 得 了 优 于 GC 约 ７ 倍 的 通 信 效 率．此 外,也有一些方案为 了 同 时 获 得 可 观 的 准 确 率 和 通 信效率,分别使用 GC 和 SS各完成一部分非线性运 算,例如 MiniONN,Chameleon和 Delphi．\n３)SＧCS架构的 MPC 技 术 演 进 分 析．通 用 神 经 网络(不包括 BNN)线性层的实现只包 含 HE 和 SS\n\n２１７８\n\n计 算 机 研 究 与 发 展 　２０２１,５８(１０)\n\n技术,最早使用leveledFHE 的方法来实现,其巨大 的计算开销严 重 影 响 了 方 案 的 可 用 性．此 后 提 出 的 AHE 实现的 优 化 包 括 算 法 层 面 的 优 化,即 构 造 适 用于 SＧCS场 景 的 同 态 线 性 代 数 核;以 及 协 议 层 面 的优化,即将繁重的 HE 运算前移到预处理阶段,同 时结 合 SS 来 完 成 线 性 运 算,降 低 在 线 阶 段 的 计 算 开销．通用神经 网 络 非 线 性 层 技 术 是 影 响 整 个 方 案 性能开销、准确率的关键,GC 和 SS分别只能满足高 准确率和高性能,而无法同时达到最优效果．２０２０ 年 提出的 CrypTFlow２ 使 用 OT 计 算 非 线 性 运 算,在 保证准确率的前提下极大地提高了计算、通信效率．\nCryptoNets[１１２]是 Microsoft 提 出 的 第 一 个 使 用同态加密实现隐 私 保 护 机 器 学 习 的 方 案,该 方 案 的缺点是使 用 LHE 友 好 的 激 活 函 数 (例 如 平 方 函 数)代 替 常 用 的 ReLU 和Sigmoid,影 响 了 结 果 准 确 性 ,并 且 在 牺 牲 准 确 性 的 前 提 下 ,计 算 成 本 依 然 非\n常 大 ．CryptoNets每 小 时 可 完 成 ５９０００ 次 推 理 ． MiniONN[１１３]的线性层结合加 性 秘 密 分 享 和 同\n态加 密 ２ 种 技 术 实 现,客 户 端 将 私 有 数 据 拆 分 为 ２ 份并将其中一份发 给 服 务 器,服 务 器 计 算 模 型 参 数 的同态密文并发给客户端,客户端对该密文和自己的 数据份额 计 算 乘 法 并 将 结 果 发 给 服 务 器,服 务 器 结\n合这些信息可 以 计 算 出 线 性 层 的 输 出．对 于 非 线 性 层,使用 GC 来 计 算 激 活 函 数 ReLU,使 用 SS 来 计 算激活函数Sigmoid 和 Tanh的多项式近似函数．\nChameleon[１１４]的 线 性 层 使 用 秘 密 分 享 方 案 Beaver三元组来计算,引 入 可 信 第 三 方 在 离 线 阶 段 生成相关随机数．非线性层使用 GMW 或 GC 计 算, 由于 GMW 的轮数和 电 路 深 度 有 关,因 此 当 电 路 深 度较深 时 使 用 GC 计 算 非 线 性 层,其 余 情 况 使 用 GMW 计 算 非 线 性 层．Chameleon 的 运 行 时 间 比 MiniONN 快４．２倍．\nGAZELLE 方 案 设 [１１５] 计 了 同 态 线 性 代 数 核 来 优化同态运 算,并 使 用 优 化 的 AHE 方 案 计 算 线 性 层,使用 GC 来计算 ReLU 所需的比较运算,并通过 加性秘密分享技术在 LHE 和 GC 之间有效切换．计 算线性层 时,客 户 端 计 算 输 入 数 据 x 的 密 文 Enc (x)并发送给服务器,服务器对 Enc(x)和自己拥有 的模型明文参数计算标量乘法得到线性层输出的密 文 Enc(y)．由 于 密 文 Enc(y)不 能 直 接 作 为 GC 的 输入,并且如 果 将 Enc(y)发 给 客 户 端 解 密 可 能 会 泄 露 模 型 参 数 ．使 用 秘 密 分 享 可 以 解 决 这 个 问 题 :服 务器选取随 机 数 作 为 份 额 －ys,并 计 算 Enc(y)＋ Enc(ys)＝Enc(y＋ys)发 送 给 客 户 端,客 户 端 解 密\n\n获得份额yc＝y＋ys,将yc 和－ys 作为 GC 的输入 便能 计 算 非 线 性 函 数．GAZELLE 方 案 在 线 阶 段 的 运行时间比 Chameleon快２０倍．\nDelphi[１１６]将 GAZELLE 线 性 层 繁 重 的 同 态 加 密 运 算 前 移 到 预 处 理 阶 段 ,客 户 端 私 有 数 据 为 x,服 务器拥有模型参数 M ．在线性层的预处理阶段,客户 端 选 取 随 机 数r,对 其 计 算 同 态 密 文 Enc(r)并 发 给 服 务器;服务器选取随机数s 作 为 线 性 层 份 额 并 计 算 Enc(Mr－s)并发给客户端;客户端解密得到 Mr－s 并将其作为线性层份额．在线性层的在线阶段,客 户 端计算x－r 并 发 送 给 服 务 器,服 务 器 设 置 线 性 层 份额为 M (x－r)＋s,可 见 双 方 的 份 额 之 和 等 于 线 性计算结果 Mx．对 非 线 性 层 的 改 进 是 使 用 多 项 式 近似激活函数并用 Beaver三元组来计算,这种方法 在减小开销的同时 也 会 导 致 准 确 率 降 低,考 虑 到 效\n率和准确率的折中,在 保 证 准 确 率 满 足 阈 值 的 前 提\n下最大 化 近 似 计 算 激 活 函 数 的 数 量,并 分 别 使 用\nGC 和 SS计算２部 分 激 活 函 数．Delphi获 得 的 准 确 率与明文模型准确率 相 差 不 到 ０．０４％,运 行 时 间 比 GAZELLE 快２２倍、通信效率提升９倍．\n先前 工 作 在 实 现 ReLU 时 存 在 通 信 开 销 大 或 准确 率 低 等 问 题,CrypTFlow２ 使 用 OT 实 现 的 比 较大小运算避免 了 先 前 方 案 的 弊 端．参 与 方 P０,P１ 在比较长度为l 位的私有数据x 和y 时,可 以 将 其 拆分为 高 位、低 位 比 特 串 的 拼 接 x＝x１ ‖x０,y＝ y１‖y０,使用 式 １{x＜y}＝１{x１ ＜y１}􀱇 (１{x１ ＝ y１}∧１{x０＜y０})可 得 到 x,y 的 大 小 关 系．但 是 拆 分为２个数据块 通 信 开 销 依 然 较 大,进 一 步 的 改 进 是将x,y 分别分 解 为q 个 数 据 块 得 到 ２ 个 树 的 叶 子节点,每个 数 据 块 长 m ＝l∕q 位．P０ 和 P１ 通 过 执 行１ＧoutＧofＧ２m OT 能够获得 每 对 叶 子 节 点 的 大 小、 相等关系,从叶子节点开始逐层递归计算logq 次便 可得到根节点的值 １{x＜y}．此 外,CrypTFlow２ 还 设计了新的截断运 算 和 正 整 数 除 法 协 议,线 性 层 的\n实现使 用 Delphi中 的 HE 方 案 或 基 于 COT 的 方 案．与 Delphi相比,CrypTFlow２非 线 性 层 的 运 行 时 间 快 了 ２２ 倍 、通 信 效 率 提 升 ９．３ 倍 ．\nDeepSecure[１１７]和 XONN 适用于二进制神经 网 络的安全推 理．DeepSecure对 GC 组 件 进 行 优 化 并 引 入 了 降 低 开 销 的 预 处 理 技 术,运 行 时 间 优 于\nCryptoNets,但 同 时 也 带 来 了 更 大 的 通 信 开 销． XONN[１１８]将神经网络 中 线 性 层 的 运 算 转 换 为 向 量 点 乘 运 算 ,神 经 网 络 第 一 层 客 户 端 输 入 数 据 是 整 数 、\n神经网络权重是 二 进 制,使 用 OT 计 算 整 数 和 二 进 制数的 向 量 点 乘;神 经 网 络 中 间 层 运 算 数 据 都 是\n\n郭 娟 娟 等 :安 全 多 方 计 算 及 其 在 机 器 学 习 中 的 应 用\n\n２１７９\n\n二进制值０和 １,使 用 同 或 (XNOR)和 加 法 来 计 算 二进 制 点 乘 运 算,由 于 可 用 XOR 代 替 XNOR 运 算,且 GC 已 经 实 现 FreeＧXOR,因 此 整 个 方 案 的 开 销较小,性能优于 GAZELLE 方案７倍．\n\n４．２　基于SＧOC 架构的 PPML 从参 与 方 数 量、机 器 学 习 功 能、安 全 模 型 和\nMPC 技 术 等 方 面 对 现 有 基 于 SＧOC 架 构 的 PPML 方 案 进 行 总 结 ,如 表 ６ 所 示 :\n\nTable６　ThePPLM SchemesBasedonSＧOCArchitecture 表６　基于 SＧOC 架构的 PPML 方案\n\n方案\n\n参与方数量\n\n训练\n\n推理\n\n安全模型\n\n半诚实\n\n恶意\n\nMPC 技术\n\n线性层\n\n非线性层\n\nSecureML[１１１](S&P􀆳１７)\n\n２\n\n是\n\n是\n\n是\n\nSS\n\nGC\n\nQUOTIENT[１１９](CCS􀆳１９)\n\n２\n\n是\n\n是\n\n是\n\nSS,COT\n\nGC\n\nABY３[７４](CCS􀆳１８)\n\n３\n\n是\n\n是\n\n是\n\n是\n\nSS\n\nSS,GC\n\nASTRA[７５](IACR􀆳１９)\n\n３\n\n是\n\n是\n\n是\n\nSS\n\nSS\n\nBLAZE[７６](NDSS􀆳２０)\n\n３\n\n是\n\n是\n\n是\n\nSS\n\nSS,GC\n\nTRIDENT[７７](NDSS􀆳２０)\n\n４\n\n是\n\n是\n\n是\n\nSS\n\nSS,GC\n\nSecureNN[７８](PETS􀆳１９)\n\n３,４\n\n是\n\n是\n\n是\n\nSS\n\nSS\n\nCrypTFlow[１２０](S&P􀆳２０)\n\n３\n\n是\n\n是\n\n是\n\nSS\n\nSS\n\nPrivPy[１２１]\n\n４\n\n是\n\n是\n\n是\n\nSS\n\nSS\n\n准 确 率/％ ９３．４０ ９９．３８\n９３．００~９９．００\n９３．２０~９７．８０ ９３．００~９８．３０ ９３．４０~９９．１５\n\n　　１)SＧOC 架构的 MPC 技术．基于 SＧOC 架构 的 方 案 主 要 使 用 秘 密 分 享 技 术 ,通 常 需 要 ２~４ 个 计 算 方协同计 算．ABY３ 等 方 案 通 过 设 置 冗 余 的 加 性 秘 密份额实现了门限 的 效 果,可 以 容 忍 一 个 参 与 方 的 单点失效,增强了系统的容错能力,其中 ABY３ 实现 了中止安全 性,ASTRA 等 实 现 了 安 全 性 更 强 的 公 平性．\n２)SＧOC 架 构 的 安 全 模 型．部 分 方 案 只 设 计 了 单一安全模型下的 方 案,例 如 半 诚 实 安 全 模 型 下 的 SecureML、恶意安全模型下的 BLAZE,还有一些方 案分别构造 了 半 诚 实 和 恶 意 ２ 种 安 全 模 型 下 的 方 案,例如 ASTRA 等．\n３)SＧOC 架 构 支 持 的 机 器 学 习 功 能．表 ６ 中 所 有方 案 都 能 支 持 神 经 网 络 推 理,除 ASTRA 和 CrypTFlow 以外其他方案都能支持神经网络训练．\n４)SＧOC 架 构 与 SＧCS 架 构 的 对 比．SＧCS 架 构 中应 用 了 多 种 MPC 技 术,包 括 AHE,OT,GC,SS 等．而在 SＧOC 架 构 中 主 要 使 用 单 一 的 SS 技 术,因 为 机 器 学 习 在 训 练 模 型 时 需 要 迭 代 计 算 多 次 ,SS 是 计算开销最 小 的 MPC 技 术,能 够 有 效 降 低 模 型 训 练时间．现有的 HE 和 OT 方案无法有效支持 SＧOC 架构下的安全多方计算．\nSecureML 是半诚实安 全 模 型 下 的 两 方 计 算 方 案 ．整 个 训 练 过 程 分 为 离 线 和 在 线 ２ 个 阶 段 ,离 线 阶 段利用 HE 或者 OT 生成 Beaver三元组;在线阶段 计算线性层运算时 使 用 秘 密 分 享 技 术,计 算 激 活 函\n\n数时使用平方函 数 做 近 似 并 通 过 GC 来 计 算,然 而 近 似 运 算 导 致 精 度 降 低 ,只 获 得 了 ９３．４％ 的 准 确 率 ．\n与 SecureML 结 构 类 似,QUOTIENT[１１９]也 是 半诚实安全模 型 下 的 两 方 计 算 方 案．该 方 案 将 模 型 参 数 表 示 为 三 元 值 {－１,０,１}、私 有 数 据 表 示 为 整 数 形式,因此计算方需 要 对 算 术 份 额 和 布 尔 份 额 进 行 运算,使 用 COT 来 完 成 乘 法 运 算,使 用 GC 来 完 成 非线性运算．QUOTIENT 的模型推理采用 SＧCS 架 构,而 其 他 SＧOC 方 案 的 模 型 推 理 依 然 是 外 包 给 计 算方 来 完 成．QUOTIENT 对 ResNet３２ 模 型 进 行 训 练 ,准 确 率 与 明 文 模 型 相 比 只 降 低 了 ０．１％ ~２􀆰１７％ , 与 SecureML 相比运行效率提高了１３倍．\nABY３ 是首个 三 方 计 算 场 景 下 的 混 合 协 议,由 算术秘密分享、布尔秘密分享和姚氏电路３种 MPC 技术构成．三方 的 设 置 无 法 使 用 传 统 的 两 方 混 淆 电 路方案,只能使用专门为三方设计的混淆电路．该 方 案还 设 计 了 不 同 MPC 技 术 的 高 效 切 换 协 议．ABY３ 使用 MNIST 数据集训练得到的模型 准 确 性 为 ９３％ ~９９％,神经网络、线性回归的训练时间比 SecureML 快 ８０~５５０００ 倍 ．\nASTRA 对 ABY３ 线性计算的 改 进 是 将 一 部 分 在线阶段的运算前 移 到 预 处 理 阶 段,对 非 线 性 运 算 的改进是使用秘密 分 享 代 替 并 行 前 缀 加 法 器,获 得 了恒定轮数的效 果．ASTRA 只 实 现 了 线 性 回 归、逻 辑 回 归 等 模 型 的 安 全 推 理,而 未 实 现 模 型 训 练． BLAZE 与 ASTRA 相比 的 改 进 是 提 供 对 神 经 网 络\n\n２１８０\n\n计 算 机 研 究 与 发 展 　２０２１,５８(１０)\n\n模型的支持,并 且 增 加 模 型 训 练 的 功 能．TRIDENT 在 ABY３ 的基础上,将 线 性 层 的 截 断 计 算 和 乘 法 计 算合并来避免额外的通信开销,并且优化了 ASTRA 的最高有效位计算方法．\nSecureNN 仅使用秘 密 分 享 技 术 构 造 了 神 经 网 络中的线性层和非 线 性 层,四 方 设 置 比 三 方 设 置 获 得更好的性能,其对 MNIIST 数据集进行模型训练 和推理,获 得 ９３．４％ ~９９．１５％ 的 准 确 率,比 明 文 模 型 训 练 开 销 增 加 １７~３３ 倍 ．\nSecureNN 等方案在实现时都需要手动在 MPC 友好的低级语言或开发库上实现 PPML 模 型,这 种 方式对 ML 开发者不够 友 好．CrypTFlow[１２０]编 译 器 能够自 动 将 TensorFlow 的 推 理 代 码 转 换 为 多 种 MPC 协 议,在 实 现 编 译 器 后 端 MPC 协 议 时 对 SecureNN 三 方 计 算 方 案 的 通 信 效 率 进 行 改 进,更 便于开发者使用．SecureNN 将矩阵x 和y 的卷积计 算转 换 为 更 大 的 矩 阵 x′和 y′的 乘 法,然 后 使 用 Beaver三 元 组 来 计 算x′和y′的 积 来 获 得 卷 积 结 果 , 其中 变 形 矩 阵 x′有 冗 余 参 数 会 增 大 通 信 开 销． CrypTFlow 的改进是 先 使 用 Beaver三 元 组 计 算 原 始矩阵x 和y 的 积,得 到 中 间 结 果 的 份 额 后,参 与 方在本地对矩阵进 行 转 换,避 免 交 互 过 程 中 传 输 冗\n余的信息．CrypTFlow 对 SecureNN 非 线 性 层 的 改 进是消除辅 助 节 点 向２个 计 算 方 发 送 份 额 的 过 程, 将 ReLU 和最 大 池 化 层 的 通 信 开 销 降 低 了 １∕４．最 后,CrypTFlow 使用 SGX 技术将 MPC 协议从半诚 实安全转换 为 恶 意 安 全．CrypTFlow 目 前 只 实 现 了 神 经 网 络 推 理 ,准 确 性 与 明 文 推 理 相 近 ,半 诚 实 安 全\n方 案 和 恶 意 安 全 方 案 的 运 行 时 间 分 别 为３０s和２min． 此外,国 内 提 出 的 方 案 PrivPy[１２１]由 语 言 前 端\n和计算引擎后端组 成,前 端 提 供 编 程 接 口 和 代 码 优 化,后端执行基于秘密 分 享 的 隐 私 保 护 计 算．PrivPy 支持３种后 端:PrivPy 设 计 的 ２ＧoutＧofＧ４ 秘 密 分 享 协议后 端、SPDZ 和 ABY３．PrivPy 设 计 的 后 端 需 要 采用二次秘密分享 技 术,前 ２ 个 参 与 方 获 得 私 有 数 据 份 额 后 ,再 计 算 新 的 份 额 发 送 给 后 ２ 个 计 算 方 ,通 过冗余份额的设置,在 秘 密 恢 复 阶 段 只 要 有 ２ 个 参 与方即可恢复 出 计 算 结 果．PrivPy 实 现 的 模 型 训 练 和推理的性能均优于 ABY３． ４．３　基于SＧFL 架构的 PPML\n联邦学习(FL)是 为 了 解 决 数 据 孤 岛 问 题 而 提 出的机器学习算法,由 一 个 中 央 服 务 器 和 多 个 客 户 端组成．客户端在本地使用私有数据训练模型,将 模 型梯度发送至 中 央 服 务 器．服 务 器 整 合 多 个 客 户 端\n\n的模型梯度得到全局模型．FL 架构仅需要传输模型 梯 度 ,客 户 端 的 私 有 数 据 自 始 至 终 没 有 离 开 本 地 ,即 便如此,研究表明中 央 服 务 器 可 以 通 过 对 模 型 逆 向 攻击来推测出客户端数据．\n为 了 保 护 用 户 数 据 隐 私,Shokri 等 人[１２２] 于 ２０１５年提出的 方 案 在 模 型 准 确 性 和 隐 私 保 护 之 间 进行折中,提 出 将 模 型 梯 度 的 １％ ~１０％ 上 传 到 云 服务器的方法．Aono等人 于 [１２３] ２０１７年 证 明 攻 击 者 从部分梯度中也能 推 测 出 有 用 信 息,并 使 用 密 码 学 来解决隐私泄露的 问 题:客 户 端 在 本 地 使 用 加 法 同 态算法对局部模型梯度加密并将密文上传至中央服 务器,服务器对各参 与 方 的 密 文 计 算 同 态 加 法 并 将 结果返回给客户端,客 户 端 解 密 后 得 到 更 新 的 模 型 梯度．谷 歌 于 [１２４] ２０１７ 年 提 出 了 基 于 秘 密 分 享 实 现 的联邦学习安全聚 合 方 案,参 与 方 使 用 秘 密 分 享 计 算掩码向量,使用掩 码 向 量 对 局 部 梯 度 计 算 异 或 加 密 并 上 传 至 服 务 器 ．服 务 器 先 对 收 到 的 数 据 求 和 ,然 后使用秘密恢复技 术 计 算 出 掩 码 向 量,并 将 其 从 求 和值 中 消 去,得 到 全 局 模 型．该 方 案 利 用 Shamir的 门 限 特 性 ,只 要 用 户 数 量 满 足 门 限 就 消 去 掩 码 ,解 决 了实际应用中 可 能 存 在 的 用 户 中 途 退 出 问 题．谷 歌 将该方案应用于 GBoard输入法中来进行单词预测．\n目前已有一些基于 MPC 实现的联邦学习框 架 投入 使 用．FATE 项 目 最 初 使 用 加 法 同 态 加 密 技 术 来构建联邦学习底 层 安 全 计 算 协 议,在 之 后 的 版 本 上增加 了 SPDZ 秘 密 分 享 协 议,提 供 更 多 样 化 的 MPC 协议支持．此外,２０１９年发布的 PySyft是用于 隐私保护深 度 学 习 的 开 源 库,将 SPDZ 等 MPC 技 术和差分隐私集成到联邦学习框架并向用户提供应 用程序接口．\n５　 总 结 与 展 望\n安全 多 方 计 算 提 出 的 前 ２０ 年 一 直 停 留 在 理 论 层面的研究,没有应用于实际生活中的方案和系 统． ２０００年以来,各种 MPC 基 础 技 术 在 实 践 中 都 有 了 相应的系统实现,例如 Fairplay,SharemindMPC 和 SEAL 等．在 大 数 据 应 用 的 推 动 下,MPC 基 础 理 论 的迭代更新和工程实践的广泛应用体现了其学术和 实用价值,MPC 在未来的发展中有巨大的潜力和广 阔的发展前景．\nPPML 是 当 前 最 受 关 注 的 MPC 应 用 领 域,近 年来在可用性和准确性等方面取得了很大的进步,\n\n郭 娟 娟 等 :安 全 多 方 计 算 及 其 在 机 器 学 习 中 的 应 用\n\n２１８１\n\n但是仍然有许多问 题 需 要 解 决,未 来 工 作 可 围 绕 以 下３个方面展开．\n１)进一 步 提 升 准 确 率 与 系 统 性 能．MPC 实 现 的 PPML 方案开销依然远大于明文模 型 的 运 算,准 确率与明 文 模 型 相 比 还 是 会 有 一 定 的 损 失．PPML 方案非线性层的实现方式会为准确率带来很大的影 响,相对而言 GC 精 度 较 高 但 性 能 开 销 大,SS 性 能 较好但无法达到 GC 的精度,现有 PPML 方案 都 在 效率和准 确 率 之 间 进 行 折 中．最 新 提 出 的 使 用 OT 实现非线性运算的方案同时获得了性能和准确率的 保证,仅适用于两方参与的场景．因此 MPC 基础技术 的优化将对 PPML技术的性能优化起到重要作用．此 外 ,在 PPML 使 用 混 合 技 术 方 案 中 降 低 不 同 技 术 的 转 换开销也将进一步提升 PPML技术的可用性．\n２)提升系统安全 性．现 有 的 很 多 方 案 都 只 满 足 半诚实安全模型,未 来 需 要 进 一 步 加 强 对 恶 意 敌 手 的防御．另一方面,早期的恶意安全方案实现了中 止 安全性,２０１９年之后的方案都达 到 了 更 强 的 安 全 属 性 公平性,提升系统的安全属性也是今后研究的一 个重要方向,未来要 实 现 的 安 全 目 标 是 能 够 保 证 结 果输出(GOD),并且在性 能 开 销 也 需 要 控 制 在 可 接 受范围内．\n３)降低 模 型 隐 私 泄 露 风 险．现 有 的 部 分 SＧCS 架构下的方案会向客户端泄露过滤器的大小、卷积的 步 长 以 及 神 经 网 络 隐 藏 层 的 种 类 等 模 型 信 息 ．未 来 仍 需进一步探索对模型参数信息更有效的保护方案．\n参考文献\n[１] A CC．Howtogenerateandexchangesecrets[C]∕∕Procof ２７th Annual Symp on Foundations of Computer Science． Piscataway,NJ:IEEE,１９８６:１６２１６７\n[２] ShamirA．Howtoshareasecret[J]．Communicationsofthe ACM,１９７９,２２(１１):６１２６１３\n[３] BlakleyG R．Safeguardingcryptographickeys[C]∕∕Procof ManagingRequirementsKnowledge,InternationalWorkshop onIEEE ComputerSociety．Piscataway,NJ:IEEE,１９７９: ３１３３１３\n[４] Rabin M O．Transactionprotectionbybeacons[J]．Journal ofComputerandSystem Sciences,１９８１,２７(２):２５６２６７\n[５] RivestRL,AdlemanL,DertouzosM L．Ondatabanksand privacy homomorphisms [J]． Foundations of Secure Computation,１９７８,４(１１):１６９１８０\n[６] GentryC．Fullyhomomorphicencryptionusingideallattices [C]∕∕Procofthe４１st Annual ACM Symp on Theory of Computing．New York:ACM,２００９:１６９１７８\n\n[７] BeaverD,MicaliS,Rogaway P．Theroundcomplexityof secureprotocols[C]∕∕Procofthe２２nd AnnualACM Symp onTheoryofComputing．New York:ACM,１９９０:５０３５１３\n[８] NaorM,PinkasB,SumnerR．Privacypreservingauctions andmechanism design [C]∕∕Procofthe１st ACM Confon ElectronicCommerce．New York:ACM,１９９９:１２９１３９\n[９] KolesnikovV,SchneiderT．Improvedgarbledcircuit:Free XORgatesandapplications[C]∕∕ProcofIntColloquium on Automata,Languages,andProgramming．Berlin:Springer, ２００８:４８６４９８\n[１０] PinkasB,SchneiderT,SmartN P,etal．SecuretwoＧparty computationispractical[C]∕∕ProcofIntConfontheTheory and Application of Cryptology and Information Security． Berlin:Springer,２００９:２５０２６７\n[１１] Kolesnikov V, MohasselP,Rosulek M．Flexor:Flexible garblingfor XOR gatesthatbeatsfreeＧxor [C]∕∕Procof AnnualCryptologyConf．Berlin:Springer,２０１４:４４０４５７\n[１２] ZahurS,Rosulek M,EvansD．Twohalves makea whole [C]∕∕Proc of Annual Int Conf on the Theory and ApplicationsofCryptographicTechniques．Berlin:Springer, ２０１５:２２０２５０\n[１３] BallM,MalkinT,Rosulek M．Garblinggadgetsforboolean andarithmeticcircuits[C]∕∕Procofthe２０１６ ACM SIGSAC ConfonComputerandCommunicationsSecurity．New York: ACM,２０１６:５６５５７７\n[１４] PinkasB．FairsecuretwoＧpartycomputation [C]∕∕Procof IntConfonthe Theoryand ApplicationsofCryptographic Techniques．Berlin:Springer,２００３:８７１０５\n[１５] LindellY,PinkasB．AnefficientprotocolforsecuretwoＧ partycomputationinthepresenceof maliciousadversaries [C]∕∕Proc of Annual Int Conf on the Theory and ApplicationsofCryptographicTechniques．Berlin:Springer, ２００７:５２７８\n[１６] Shelat A,Shen C．TwoＧoutput secure computation with maliciousadversaries [C]∕∕Procof AnnualIntConfonthe Theory and Applications of Cryptographic Techniques． Berlin:Springer,２０１１:３８６４０５\n[１７] Afshar A, Mohassel P,Pinkas B,etal．NonＧinteractive securecomputation based oncutＧandＧchoose [C]∕∕Procof Annual Int Conf on the Theory and Applications of CryptographicTechniques．Berlin:Springer,２０１４:３８７４０４\n[１８] Huang Yan, Katz J, Kolesnikov V,et al．Amortizing garbled circuits [C]∕∕Proc of Annual Cryptology Conf． Berlin:Springer,２０１４:４５８４７５\n[１９] Lindell Y, Riva B． CutＧandＧchoose YaoＧbased secure computationintheonline∕offlineand batchsettings [C]∕∕ Procof AnnualCryptology Conf．Berlin:Springer,２０１４: ４７６４９４\n[２０] LindellY．FastcutＧandＧchooseＧbasedprotocolsformalicious andcovertadversaries[J]．JournalofCryptology,２０１６,２９ (２):４５６４９０\n\n２１８２\n\n计 算 机 研 究 与 发 展 　２０２１,５８(１０)\n\n[２１] WangXiao,MalozemoffAJ,KatzJ．FastersecuretwoＧparty computationin the singleＧexecution setting [C]∕∕Proc of Annual Int Conf on the Theory and Applications of CryptographicTechniques．Berlin:Springer,２０１７:３９９４２４\n[２２] Nielsen J B, Orlandi C． Lego for twoＧparty secure computation [C]∕∕Proc of Theory of Cryptography Conf． Berlin:Springer,２００９:３６８３８６\n[２３] Frederiksen T K,Jakobsen T P, Nielsen J B,et al． MiniLEGO:Efficient secure twoＧparty computation from generalassumptions [C]∕∕Procof AnnualIntConfonthe Theory and Applications of Cryptographic Techniques． Berlin:Springer,２０１３:５３７５５６\n[２４] Frederiksen T K,Jakobsen T P, Nielsen J B,et al． TinyLEGO:Aninteractivegarblingschemefor maliciously securetwoＧparty computation [OL]．２０１５ [２０２１Ｇ０７Ｇ２９]． https:∕∕eprinti．acr．org∕２０１５∕３０９\n[２５] Kolesnikov V,Nielsen J B,Rosulek M,etal．DUPLO: UnifyingcutＧandＧchooseforgarbledcircuits[C]∕∕Procofthe ２０１７ACM SIGSACConfonComputerandCommunications Security．New York:ACM,２０１７:３２０\n[２６] Zhu Ruiyu,Yan Huang．JIMU:FasterlegoＧbased secure computationusingadditivehomomorphichashes [C]∕∕Proc ofIntConfontheTheoryandApplicationofCryptologyand InformationSecurity．Berlin:Springer,２０１７:５２９５７２\n[２７] WangXiao,RanellucciS,KatzJ．Authenticatedgarblingand efficientmaliciouslysecuretwoＧpartycomputation[C]∕∕Proc of the ２０１７ ACM SIGSAC Conf on Computer and CommunicationsSecurity．New York:ACM,２０１７:２１３７\n[２８] Katz J, Ranellucci S, Rosulek M, et al． Optimizing authenticated garblingforfastersecuretwoＧparty computation [C]∕∕ProcofAnnualIntCryptologyConf．Berlin:Springer, ２０１８:３６５３９１\n[２９] Yang Kang,Wang Xiao,ZhangJiang．Moreefficient MPC fromimprovedtriplegeneration and authenticated garbling [C]∕∕Procofthe２０２０ACM SIGSACConfonComputerand CommunicationsSecurity．New York:ACM,２０２０:１６２７ １６４６\n[３０] Bellare M, Hoang V T, Keelveedhi S,et al．Efficient garblingfrom afixedＧkey blockcipher [C]∕∕Proc of２０１３ IEEESymponSecurityandPrivacy．Piscataway,NJ:IEEE, ２０１３:４７８４９２\n[３１] GuoChun,KatzJ,Wang Xiao,etal．Efficientandsecure multipartycomputationfrom fixedＧkeyblockciphers[C]∕∕ Proc of ２０２０ IEEE Symp on Security and Privacy． Piscataway,NJ:IEEE,２０２０:８２５８４１\n[３２] LindellY,PinkasB．SecuretwoＧpartycomputationviacutＧ andＧchooseoblivioustransfer [J]．Journal of Cryptology, ２０１２,２５(４):６８０７２２\n[３３] Brandão L T A N．Secure twoＧparty computation with reusablebitＧcommitments,viaacutＧandＧchoose withforgeＧ andＧlosetechnique[C]∕∕ProcofIntConfontheTheoryand ApplicationofCryptologyandInformationSecurity．Berlin: Springer,２０１３:４４１４６３\n\n[３４] ShelatA,ShenC H．FasttwoＧpartysecurecomputationwith minimalassumptions[C]∕∕Procofthe２０１３ ACM SIGSAC ConfonComputer & CommunicationsSecurity．New York: ACM,２０１３:５２３５３４\n[３５] LindellY,Riva B．Blazing fast ２pcin the offline∕online settingwithsecurityfor maliciousadversaries[C]∕∕Procof the ２２nd ACM SIGSAC Conf on Computer and CommunicationsSecurity．New York:ACM,２０１５:５７９５９０\n[３６] HongCheng,KatzJ,Kolesnikov V,etal．Covertsecurity withpublicverifiability:Faster,leaner,andsimpler[C]∕∕ ProcofAnnualIntConfontheTheoryand Applicationsof CryptographicTechniques．Berlin:Springer,２０１９:９７１２１\n[３７] BendlinR,DamgårdI,OrlandiC,etal．SemiＧhomomorphic encryptionand multipartycomputation [C]∕∕ProcofAnnual IntConfonthe Theoryand ApplicationsofCryptographic Techniques．Berlin:Springer,２０１１:１６９１８８\n[３８] LindellY,PinkasB,Smart N P,etal．Efficientconstant round multiＧpartycomputation combining BMR and SPDZ [C]∕∕Procof Annual Cryptology Conf．Berlin:Springer, ２０１５:３１９３３８\n[３９] Lindell Y,Smart N P,SoriaＧVazquez E．More efficient constantＧroundmultiＧpartycomputationfrom BMRandSHE [C]∕∕Proc of Theory of Cryptography Conf． Berlin: Springer,２０１６:５５４５８１\n[４０] Hazay C,Scholl P,SoriaＧVazquez E．Low costconstant round MPC combining BMR and oblivious transfer [J]． JournalofCryptology,２０２０,３３(４):１７３２１７８６\n[４１] Wang Xiao, Ranellucci S, Katz J．GlobalＧscale secure multiparty computation [C] ∕∕Proc of the ２０１７ ACM SIGSAC Confon Computerand CommunicationsSecurity． New York:ACM,２０１７:３９５６\n[４２] ChoiS G,KatzJ,MalozemoffA J,etal．EfficientthreeＧ partycomputationfromcutＧandＧchoose[C]∕∕ProcofAnnual CryptologyConf．Berlin:Springer,２０１４:５１３５３０\n[４３] MohasselP,Rosulek M,Zhang Ye．FastandsecurethreeＧ partycomputation:Thegarbledcircuitapproach [C]∕∕Proc of the ２２nd ACM SIGSAC Conf on Computer and CommunicationsSecurity．New York:ACM,２０１５:５９１６０２\n[４４] KilianJ．Foundingcrytpographyonoblivioustransfer[C]∕∕ Proc of the ２０th Annual ACM Symp on Theory of Computing．New York:ACM,１９８８:２０３１\n[４５] Naor M,Pinkas B．Oblivious polynomialevaluation [J]． SIAM JournalonComputing,２００６,３５(５):１２５４ １２８１\n[４６] RatheeD,RatheeM,KumarN,etal．Cryptflow２:practical ２Ｇparty secure inference [C]∕∕Proc of the ２０２０ ACM SIGSAC Confon Computerand CommunicationsSecurity． New York:ACM,２０２０:３２５３４２\n[４７] Keller M, Orsini E,Scholl P．Mascot:faster malicious arithmeticsecurecomputation withoblivioustransfer[C]∕∕ Procofthe ２０１６ ACM SIGSAC Conf on Computer and CommunicationsSecurity．New York:ACM,２０１６:８３０８４２\n\n郭 娟 娟 等 :安 全 多 方 计 算 及 其 在 机 器 学 习 中 的 应 用\n\n２１８３\n\n[４８] EvenS,Goidreich O,LempelA．Arandomizedprotocolfor signingcontracts [J]．Communicationsof ACM,１９８５,２８ (６):６３７６４７\n[４９] NaorM,PinkasB．Efficientoblivioustransferprotocols[C]\n∕∕Procof ACMＧSIAM Symp on Discrete Algorithms．New York:ACM,２００１:４４８４５７ [５０] BrakerskiZ,Döttling N．TwoＧmessagestatisticallysenderＧ privateOTfrom LWE [C]∕∕ProcofTheoryofCryptography Conf．Berlin:Springer,２０１８:３７０３９０ [５１] MansyD,RindalP．Endemicoblivioustransfer[C]∕∕Procof\nthe ２０１９ ACM SIGSAC Conf on Computer and CommunicationsSecurity．New York:ACM,２０１９:３０９３２６ [５２] Impagliazzo R, Rudich S． Limits on the provable consequencesofoneＧwaypermutations[C]∕∕Procofthe２１st AnnualACM Sympon TheoryofComputing．New York: ACM,１９８９:４４６１ [５３] BeaverD．Correlatedpseudorandomnessandthecomplexity ofprivatecomputations[C]∕∕Procofthe２８th AnnualACM Sympon TheoryofComputing．New York:ACM,１９９６:\n４７９４８８ [５４] IshaiY,Kilian J, Nissim K,etal．Extending oblivious\ntransfersefficiently [C]∕∕Proc of AnnualInt Cryptology Conf．Berlin:Springer,２００３:１４５１６１ [５５] AsharovG,LindellY,Schneider T,etal．Moreefficient\noblivious transfer and extensions for faster secure computation[C]∕∕Procofthe２０１３ ACM SIGSAC Confon Computer & CommunicationsSecurity．New York:ACM, ２０１３:５３５５４８ [５６] Kolesnikov V,Kumaresan R．Improved OT extensionfor transferringshortsecrets [C]∕∕Procof AnnualCryptology Conf．New York:ACM,２０１３:５４７０ [５７] Kolesnikov V,Kumaresan R,Rosulek M,etal．Efficient\nbatched obliviousprf with applications to private set intersection[C]∕∕Procofthe２０１６ ACM SIGSAC Confon ComputerandCommunicationsSecurity．New York:ACM, ２０１６:８１８８２９ [５８] Boyle E, Couteau G, Gilboa N, et al． Efficient pseudorandom correlation generators:Silent OT extension andmore[C]∕∕ProcofAnnualIntCryptologyConf．Berlin: Springer,２０１９:４８９５１８ [５９] NielsenJB．ExtendingoblivioustransfersefficientlyＧhowto getrobustnessalmostforfree [OL]．２００７ [２０２１Ｇ０７Ｇ２９]． https:∕∕eprinti．acr．org∕２００７∕２１５．pdf [６０] HarnikD,IshaiY,KushilevitzE,etal．OTＧcombinersvia securecomputation [C]∕∕Procof Theory of Cryptography Conf．Berlin:Springer,２００８:３９３４１１ [６１] NielsenJB,NordholtPS,OrlandiC,etal．Anewapproach topracticalactiveＧsecuretwoＧpartycomputation[C]∕∕Procof AnnualCryptologyConf．Berlin:Springer,２０１２:６８１７００ [６２] AsharovG,LindellY,Schneider T,etal．Moreefficient\noblivious transfer extensions with security for malicious adversaries[C]∕∕ProcofAnnualIntConfontheTheoryand ApplicationsofCryptographicTechniques．Berlin:Springer, ２０１５:６７３７０１\n\n[６３] KellerM,OrsiniE,SchollP．ActivelysecureOTextension withoptimaloverhead[C]∕∕ProcofAnnualCryptologyConf． Berlin:Springer,２０１５:７２４７４１\n[６４] Orrù M,OrsiniE,SchollP．Activelysecure１ＧoutＧofＧN OT extensionwithapplicationtoprivatesetintersection [C]∕∕ Procof Cryptographers􀆳 Track atthe RSA Conf．Berlin: Springer,２０１７:３８１３９６\n[６５] BoyleE,Couteau G,Gilboa N,etal．Compressingvector OLE [C]∕∕Proc of the ２０１８ ACM SIGSAC Conf on ComputerandCommunicationsSecurity．New York:ACM, ２０１８:８９６９１２\n[６６] BoyleE,Couteau G,Gilboa N,etal．EfficienttwoＧround OTextensionandsilentnonＧinteractivesecurecomputation [C]∕∕Procofthe２０１９ACM SIGSACConfonComputerand CommunicationsSecurity．New York:ACM,２０１９:２９１３０８\n[６７] SchoppmannP,Gascón A,Reichert L,etal．Distributed vectorＧOLE:Improved constructions and implementation [C]∕∕Procofthe２０１９ACM SIGSACConfonComputerand CommunicationsSecurity．New York:ACM,２０１９:１０５５ １０７２\n[６８] YangKang,Weng Chenkai,Lan Xiao,etal．Ferret:Fast extensionforcorrelatedOT withsmallcommunication[C]∕∕\nProcofofthe２０２０ ACM SIGSAC Confon Computerand CommunicationsSecurity．New York:ACM,２０２０:１６０７ １６２６ [６９] MicaliS,Goldreich O, Wigderson A．How to play any mentalgame[C]∕∕Procofthe１９thACM SymponTheoryof Computing．New York:ACM,１９８７:２１８２２９ [７０] BenＧOr M, Goldwasser S, Wigderson A．Completeness theorems for nonＧcryptographic faultＧtolerant distributed computation[C]∕∕Procofthe２０th AnnualACM Sympon TheoryofComputing．New York:ACM,１９８８:１１０ [７１] Beaver D． Efficient multiparty protocols using circuit randomization [C]∕∕Procof AnnualInt Cryptology Conf． Berlin:Springer,１９９１:４２０４３２ [７２] BogdanovD,LaurS,WillemsonJ．Sharemind:Aframework for fast privacyＧpreserving computations [C] ∕∕Proc of EuropeanSympon Researchin ComputerSecurity．Berlin: Springer,２００８:１９２２０６ [７３] ArakiT,FurukawaJ,Lindell Y,etal．HighＧthroughput semiＧhonestsecurethreeＧpartycomputation withan honest majority [C]∕∕Proc ofthe ２０１６ ACM SIGSAC Conf on ComputerandCommunicationsSecurity．New York:ACM, ２０１６:８０５８１７ [７４] MohasselP,RindalP．ABY３:A mixedprotocolframework forMAChinelearning[C]∕∕Procofthe２０１８ ACM SIGSAC ConfonComputerandCommunicationsSecurity．New York: ACM,２０１８:３５５２ [７５] ChaudhariH,Choudhury A,Patra A,etal．Astra:High throughput ３pc over rings with application to secure prediction [C]∕∕Procofthe２０１９ ACM SIGSAC Confon Cloud Computing Security Workshop．New York: ACM, ２０１９:８１９２\n\n２１８４\n\n计 算 机 研 究 与 发 展 　２０２１,５８(１０)\n\n[７６] PatraA,Suresh A．BlAZE:BlazingfastprivacyＧpreserving machinelearning [C∕OL]∕∕Procofthe２７th Network and DistributedSystemSecuritySymp．RestonVA:TheInternet Society,２０２０ [２０２１Ｇ０７Ｇ２９]．https:∕∕eprint．iacr．org∕２０２０∕ ０４２．pdf\n[７７] RachuriR,Suresh A．TRIDENT:efficient４pcframework forprivacypreserving machinelearning[C∕OL]∕∕Procofthe ２７thNetworkandDistributedSystemSecuritySymp．Reston VA: The Internet Society,２０２０ [２０２１Ｇ０７Ｇ２９]．https:∕∕ eprinti．acr．org∕２０１９∕１３１５．pdf\n[７８] WaghS,GuptaD,Chandran N．SecureNN:３Ｇpartysecure computationforneuralnetworktraining [J]．Proceedingson PrivacyEnhancingTechnologies,２０１９,２０１９(３):２６４９\n[７９] Damgård I, Pastro V, Smart N, et al． Multiparty computationfrom somewhathomomorphicencryption [C]∕∕ Procof AnnualCryptology Conf．Berlin:Springer,２０１２: ６４３６６２\n[８０] DamgårdI,Keller M,Larraia E,etal．Practicalcovertly secure MPCfordishonest majorityＧor:BreakingtheSPDZ limits[C]∕∕ProcofEuropeanSymponResearchinComputer Security．Berlin:Springer,２０１３:１１８\n[８１] Keller M,Pastro V,Rotaru D．Overdrive:making SPDZ greatagain[C]∕∕ProcofAnnualIntConfontheTheoryand ApplicationsofCryptographicTechniques．Berlin:Springer, ２０１８:１５８１８９\n[８２] CramerR,DamgårdI,EscuderoD,etal．SPDZ２k :Efficient MPC mod２kfordishonestmajority[C]∕∕ProcofAnnualInt CryptologyConf．Berlin:Springer,２０１８:７６９７９８\n[８３] Paillier P．PublicＧkey cryptosystems based on composite degreeresiduosity classes [C]∕∕Proc ofInt Conf on the Theory and Applications of Cryptographic Techniques． Berlin:Springer,１９９９:２２３２３８\n[８４] ElGamal T．A public key cryptosystem and a signature schemebasedondiscretelogarithms[J]．IEEE Transactions onInformationTheory,１９８５,３１(４):４６９４７２\n[８５] BrakerskiZ,GentryC,Vaikuntanathan V．(Leveled)Fully homomorphicencryption without bootstrapping [J]．ACM TransactionsonComputationTheory,２０１４,６(３):１３６\n[８６] BrakerskiZ．Fullyhomomorphicencryptionwithoutmodulus switching from classical GapSVP [C]∕∕Proc of Annual CryptologyConf．Berlin:Springer,２０１２:８６８８８６\n[８７] FanJ,Vercauteren F．Somewhatpracticalfully homomorphic encryption[OL]．２０１２ [２０２１Ｇ０７Ｇ２９]．https:∕∕eprinti．acr．org∕ ２０１２∕１４４\n[８８] Gentry C,Sahai A, Waters B．Homomorphic encryption fromlearningwitherrors:ConceptuallyＧsimpler,asymptoticallyＧ faster,attributeＧbased [C]∕∕Proc of Annual Cryptology Conf．Berlin:Springer,２０１３:７５９２\n[８９] ChillottiI, Gama N, Georgieva M,et al．Faster fully homomorphicencryption:Bootstrappingin lessthan ０．１ seconds[C]∕∕ProcofIntConfontheTheoryandApplication ofCryptology andInformation Security．Berlin:Springer, ２０１６:３３３\n\n[９０] Cheon J H, Kim A, Kim M, et al． Homomorphic encryptionforarithmeticofapproximate numbers [C]∕∕ Proc of Int Conf on the Theory and Application of Cryptology and Information Security．Berlin: Springer, ２０１７:４０９４３７\n[９１] Cheon J H, Kim D, Kim D．Efficient homomorphic comparison methodswithoptimalcomplexity [C]∕∕Procof IntConfontheTheoryand ApplicationofCryptologyand InformationSecurity．Berlin:Springer,２０２０:２２１２５６\n[９２] DucasL,MicciancioD．Fhew:Bootstrappinghomomorphic encryptioninlessthanasecond [C]∕∕ProcofAnnualInt Conf on the Theory and Applications of Cryptographic Techniques．Berlin:Springer,２０１５:６１７６４０\n[９３] Asharov G,Jain A, LópezＧAlt A, et al． Multiparty computation with low communication,computation and interactionviathresholdFHE [C]∕∕ProcofAnnualIntConf on the Theory and Applications of Cryptographic Techniques．Berlin:Springer,２０１２:４８３５０１\n[９４] Clear M, McGoldrick C． MultiＧidentity and multiＧkey leveledFHEfromlearningwitherrors[C]∕∕ProcofAnnual CryptologyConf．Berlin:Springer,２０１５:６３０６５６\n[９５] MukherjeeP,WichsD．Tworound multipartycomputation viamultiＧkey FHE [C]∕∕Procof AnnualIntConfonthe Theory and Applications of Cryptographic Techniques． Berlin:Springer,２０１６:７３５７６３\n[９６] PeikertC,ShiehianS．MultiＧkeyFHEfrom LWE,revisited [C]∕∕Proc of Theory of Cryptography Conf．Berlin: Springer,２０１６:２１７２３８\n[９７] BrakerskiZ,PerlmanR．LatticeＧbasedfullydynamicmultiＧ keyFHE withshortciphertexts [C]∕∕ProcofAnnualInt CryptologyConf．Berlin:Springer,２０１６:１９０２１３\n[９８] Chen Long, Zhang Zhenfeng, Wang Xueqing．Batched multiＧhop multiＧkey FHE from ringＧLWE with compact ciphertextextension [C]∕∕ProcofTheoryofCryptography Conf．Berlin:Springer,２０１７:５９７６２７\n[９９] Chen Hao,Dai Wei,Kim M,etal．Efficient multiＧkey homomorphic encryption with packed ciphertexts with applicationtoobliviousneuralnetworkinference[C]∕∕Proc of the ２０１９ ACM SIGSAC Conf on Computer and CommunicationsSecurity．New York:ACM,２０１９:３９５ ４１２\n[１００] Chen Hao,ChillottiI,Song Y．MultiＧkey homomorphic encryptionfrom TFHE [C]∕∕Proc ofInt Conf on the Theory and Application of Cryptology and Information Security．Berlin:Springer,２０１９:４４６４７２\n[１０１] Lu Wenjie,HuangZhicong,ChenHong,etal．PEGASUS: Bridging polynomial and nonＧpolynomial evaluations in homomorphic encryption [OL]． ２０２０ [２０２１Ｇ０７Ｇ２９ ]． https:∕∕eprinti．acr．org∕２０２０∕１６０６\n[１０２] Wang Xiao, Malozemoff A J, Katz J．EMPＧtoolkit: Efficient MultiParty computation toolkit [J∕OL]．２０１６ [２０２１Ｇ０７Ｇ２９]．https:∕∕github．com∕empＧtoolkit\n\n郭 娟 娟 等 :安 全 多 方 计 算 及 其 在 机 器 学 习 中 的 应 用\n\n２１８５\n\n[１０３] ZahurS,EvansD．OblivＧC:AlanguageforextensibledataＧ obliviouscomputation [OL]．２０１５ [２０２１Ｇ０７Ｇ２９]．https:∕∕ eprinti．acr．org∕２０１５∕１１５３．pdf\n[１０４] LiuChang,WangXiaoShaun,NayakK,etal．Oblivm:A programmingframeworkforsecurecomputation [C]∕∕Proc ofthe２０１５IEEE SymponSecurityandPrivacy．Piscataway, NJ:IEEE,２０１５:３５９３７６\n[１０５] FranzM,HolzerA,KatzenbeisserS,etal．CBMCＧGC:An ANSICcompilerforsecuretwoＧpartycomputations[C]∕∕ Proc of Int Conf on Compiler Construction． Berlin: Springer,２０１４:２４４２４９\n[１０６] MoodB,GuptaD,CarterH,etal．Frigate:A validated, extensible,andefficientcompilerandinterpreterforsecure computation[C]∕∕Procofthe２０１６IEEE EuropeanSymp on Security and Privacy．Piscataway, NJ:IEEE,２０１６: １１２１２７\n[１０７] KellerM．MPＧSPDZ:AversatileframeworkformultiＧparty computation[C]∕∕Procofthe２０２０ ACM SIGSACConfon ComputerandCommunicationsSecurity．New York:ACM, ２０２０:１５７５１５９０\n[１０８] Rastogi A, Hammer M A, Hicks M． Wysteria: A programminglanguageforgeneric,mixedＧmode multiparty computations[C]∕∕Procofthe２０１４IEEESymponSecurity andPrivacy．Piscataway,NJ:IEEE,２０１４:６５５６７０\n[１０９] Zhang Yihua,Steele A,Blanton M．PICCO:A generalＧ purposecompilerforprivatedistributedcomputation [C]∕∕ Proc ofthe ２０１３ ACM SIGSAC Conf on Computer & CommunicationsSecurity．New York:ACM,２０１３:８１３ ８２６\n[１１０] DemmlerD,Schneider T,Zohner M．ABYＧA framework forefficient mixedＧprotocolsecuretwoＧparty computation [C∕OL]∕∕ProcofISOC Networkand Distributed System SecuritySymp．Reston VA:TheInternet Society,２０１５ [２０２１Ｇ０７Ｇ２９]．https:∕∕encrypto．de∕papers∕DSZ１５．pdf\n[１１１] Mohassel P, Zhang Yupeng．Secureml: A system for scalableprivacyＧpreserving machinelearning [C]∕∕Procof the２０１７IEEESymponSecurityandPrivacy．Piscataway, NJ:IEEE,２０１７:１９３８\n[１１２] GiladＧBachrachR,Dowlin N,LaineK,etal．CryptoNets: Applying neural networks to encrypted data with high throughputandaccuracy[C]∕∕ProcofIntConfon Machine Learning．New York:ACM,２０１６:２０１２１０\n[１１３] LiuJian,JuutiM,LuYao,etal．Obliviousneuralnetwork predictionsvia MiniONNtransformations[C]∕∕Procofthe ２０１７ ACM SIGSACConfonComputerandCommunications Security．New York:ACM,２０１７:６１９６３１\n[１１４] RiaziM S,WeinertC,TkachenkoO,etal．Chameleon:A hybridsecurecomputationframeworkforMAChinelearning applications [C]∕∕Proc of the ２０１８ on Asia Conf on ComputerandCommunicationsSecurity．New York:ACM, ２０１８:７０７７２１\n\n[１１５] JuvekarC,VaikuntanathanV,ChandrakasanA．GAZELLE:A lowlatencyframeworkforsecureneuralnetworkinference [C]∕∕Procofthe２７th USENIX SecuritySymp．Berkeley, CA:USENIX Association,２０１８:１６５１１６６９\n[１１６] MishraP,LehmkuhlR,Srinivasan A,etal．Delphi:A cryptographicinferenceserviceforneuralnetworks [C]∕∕ Procofthe２９th USENIX SecuritySymp．Berkeley,CA: USENIX Association,２０２０:２５０５２５２２\n[１１７] RouhaniB D, Riazi M S, Koushanfar F．DeepSecure: ScalableprovablyＧsecure deeplearning [C]∕∕Proc ofthe ５５thAnnualDesign Automation Conf．New York:ACM, ２０１８:１６\n[１１８] RiaziM S,Samragh M,Chen H,etal．XONN:XNORＧ basedobliviousdeepneuralnetworkinference[C]∕∕Procof the２８th USENIX SecuritySymp．Berkeley,CA:USENIX Association,２０１９:１５０１１５１８\n[１１９] AgrawalN,Shahin Shamsabadi A,Kusner M J,etal． QUOTIENT:TwoＧparty secure neural network training andprediction [C]∕∕Procofthe２０１９ACM SIGSACConfon ComputerandCommunicationsSecurity．New York:ACM, ２０１９:１２３１１２４７\n[１２０] Kumar N,Rathee M,Chandran N,et al．CryptFlow: Securetensorflowinference [C]∕∕Procofthe２０２０IEEE Symp on Security and Privacy．Piscataway, NJ:IEEE, ２０２０:３３６３５３\n[１２１] Li Yi, Xu Wei．PrivPy: General and scalable privacyＧ preserving data mining [C]∕∕Proc of the ２５th ACM SIGKDDIntConfonKnowledgeDiscovery & Data Mining． New York:ACM,２０１９:１２９９１３０７\n[１２２] ShokriR,Shmatikov V．PrivacyＧpreservingdeeplearning [C]∕∕Procofthe２２nd ACM SIGSAC Confon Computer and Communications Security．New York:ACM,２０１５: １３１０１３２１\n[１２３] Aono Y,Hayashi T, Wang L,etal．PrivacyＧpreserving deeplearning viaadditively homomorphicencryption [J]． IEEE TransactionsonInformationForensicsandSecurity, ２０１７,１３(５):１３３３１３４５\n[１２４] BonawitzK,Ivanov V,KreuterB,etal．Practicalsecure aggregationforprivacyＧpreserving machinelearning [C]∕∕ Procofthe２０１７ ACM SIGSAC Confon Computerand CommunicationsSecurity．New York:ACM,２０１７:１１７５ １１９１\nGuoJuanjuan,bornin１９９６．PhD．Hermain researchintrerstsincludesecure multiparty computationandappliedcryptography． 郭娟娟,１９９６ 年 生．博 士．主 要 研 究 方 向 为 安 全多方计算和应用密码学．\n\n２１８６\n\nWangQiongxiao,bornin１９８２．PhD,senior engineer．Hermainresearchinterestsinclude appliedcryptographyandidentitymanagement． 王琼霄,１９８２年生．博士,高 级 工 程 师．主 要 研 究方向为应用密码学和身份管理．\nXu Xin, born in １９９３．PhD．Her main researchinterestsincludedistributedsystem andappliedcryptography． 许　新,１９９３ 年 生．博 士．主 要 研 究 方 向 为 分 布式系统和应用密码学．\n\n计 算 机 研 究 与 发 展 　２０２１,５８(１０)\nWangTianyu,bornin１９８９．Master,senior researcher．Hismainresearchinterestsinclude cryptographyanddatasecurity． 王天雨,１９８９年生．硕士,高 级 研 究 员．主 要 研 究方向为密码学和数据安全．\nLinJingqiang,bornin１９７８．PhD,professor, memberofCCF．Hismainresearchinterests includeappliedcryptography,networksecurity andsystemsecurity． 林璟锵,１９７８年 生．博 士,教 授,CCF 会 员．主 要研究方向为应 用 密 码 学、网 络 安 全 和 系 统 安全．\n\n􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍􀪍\n\n«计算机研究与发展»征订启事\n«计 算 机 研 究 与 发 展 »(JournalofComputerResearchandDevelopment)是 中 国 科 学 院 计 算 技 术 研 究 所 和中国计算机学会联合主办、科学出版社出版的 学 术 性 刊 物,中 国 计 算 机 学 会 会 刊．主 要 刊 登 计 算 机 科 学 技 术领域高水平的学术论文、最新科研成果和重 大 应 用 成 果．读 者 对 象 为 从 事 计 算 机 研 究 与 开 发 的 研 究 人 员、 工 程 技 术 人 员 、各 大 专 院 校 计 算 机 相 关 专 业 的 师 生 以 及 高 新 企 业 研 发 人 员 等 ．\n«计算机研究与发展»于１９５８年创刊,是我国第一个计算机刊物,现已成 为 我 国 计 算 机 领 域 权 威 性 的 学 术期刊之一．并历次被评为我国计算 机 类 核 心 期 刊,多 次 被 评 为“中 国 百 种 杰 出 学 术 期 刊”．此 外,还 被«中 国 学术期刊文摘»、«中国科学引文索引»、“中国科学引文数据库”、“中国科技论文统计源数 据 库”、美 国 工 程 索 引(Ei)检 索 系 统 、日 本 «科 学 技 术 文 献 速 报 »、俄 罗 斯 «文 摘 杂 志 »、英 国 «科 学 文 摘 »(SA)等 国 内 外 重 要 检 索 机 构收录．\n国 内 邮 发 代 号 :２Ｇ６５４;国 外 发 行 代 号 :M６０３ 国 内 统 一 连 续 出 版 物 号 :CN１１Ｇ１７７７∕TP 国 际 标 准 连 续 出 版 物 号 :ISSN１０００Ｇ１２３９ 联系方式: １００１９０　 北 京 中 关 村 科 学 院 南 路 ６ 号 «计 算 机 研 究 与 发 展 »编 辑 部 电 话 :＋８６(１０)６２６２０６９６(兼 传 真 );＋８６(１０)６２６００３５０ Email:crad＠ict．ac．cn https:∕∕cradi．ct．ac．cn\n\n"}